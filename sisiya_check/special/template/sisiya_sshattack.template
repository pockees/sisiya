### service id
serviceid=$serviceid_sshattack
if test -z "$serviceid" ; then
	echo "$0 : serviceid_sshattack is not defined! Exiting..."
	exit 1
fi
##########################################################################
### default values
log_file=/var/log/secure
number_of_strings=4
strings[0]="illegal"
strings[1]="Invalid user"
strings[2]="failed password for"
strings[3]="POSSIBLE BREAKIN ATTEMPT"
### end of the default values

### If there is a module conf file then override these default values
if test -f $module_conf_file ; then
	. $module_conf_file
fi

tmp_file=`maketemp /tmp/tmp_${script_name}.XXXXXX`
ips_file=`maketemp /tmp/tmp_ips_${script_name}.XXXXXX`

if test ! -f $log_file ; then
	statusid=$status_warning
	message_str="SSH log file$log_file does not exist!"
else
	statusid=$status_ok
	cat $log_file | while read line
	do
		declare -i i=0
		whil test $i -lt $number_of_strings
		do	
			str=`echo $line | grep -i "${strings[$i]}"`
			if test -n "$str" ; then
				### try our best to get the IP address of the client
				client_ip=`echo $line | cut -d ":" -f 7 | awk '{print $1}'`
				str=`echo $line | grep  "Failed"`
				if test -z "$str" ; then
					user_name=`echo $line | awk '{print $8}'`
				else
					user_name=`echo $line | awk '{print $11}'`
				fi
				str=`echo $client_ip | grep ":"`
				if test -n "$str" ; then
					client_ip=`echo $str | cut -d ":" -f 4`
				fi
				count=`echo $client_ip | tr "." "\n" | wc -l|awk '{print $1}'`
				if test -z "$count" || test $count -ne 4 ; then
					echo "UNKNOWN" >> $tmp_file
				else
					echo "$client_ip" >> $tmp_file
				fi

			fi
		done
	done
fi

if -s $tmp_file ; then
	statusid=$status_error
	message_str="This server is under attack from the following IPs : "`sort $tmp_file | uniq | tr "\n" " "` 
else
	statusid=$status_ok
	message_str="As far as I know this server is not under attack."
fi

#cat $tmp_file
for f in $tmp_file $ips_file
do
	rm -f $f
done
