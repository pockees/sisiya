  System.Core.resources - Embedded, ContainedInManifestFile, 
  System.Linq.resources - Embedded, ContainedInManifestFile, 
  System.Linq.Expressions.resources - Embedded, ContainedInManifestFile, 
ImageRuntimeVersion: v4.0.30319
Assembly System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Security, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=None, flags=None
Assembly System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Numerics, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Struct System.Diagnostics.Eventing.EventDescriptor: AutoLayout, AnsiClass, Class, Public, ExplicitLayout, Sealed, HasSecurity, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, Byte, Byte, Byte, Byte, Int32, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 EventId 'get ' : 
    Byte Version 'get ' : 
    Byte Channel 'get ' : 
    Byte Level 'get ' : 
    Byte Opcode 'get ' : 
    Int32 Task 'get ' : 
    Int64 Keywords 'get ' : 
  Methods:
    get_EventId(): PrivateScope, Public, HideBySig, SpecialName
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_Channel(): PrivateScope, Public, HideBySig, SpecialName
    get_Level(): PrivateScope, Public, HideBySig, SpecialName
    get_Opcode(): PrivateScope, Public, HideBySig, SpecialName
    get_Task(): PrivateScope, Public, HideBySig, SpecialName
    get_Keywords(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.Eventing.EventProvider: AutoLayout, AnsiClass, Class, Public, HasSecurity, BeforeFieldInit
    Void .ctor(System.Guid): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
  Interfaces:
    System.IDisposable
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsEnabled(): PrivateScope, Public, HideBySig
    IsEnabled(Byte, Int64): PrivateScope, Public, HideBySig
    GetLastWriteEventError(): PrivateScope, Public, Static, HideBySig
    WriteMessageEvent(String, Byte, Int64): PrivateScope, Public, HideBySig
    WriteMessageEvent(String): PrivateScope, Public, HideBySig
    WriteEvent(EventDescriptor&, Object[]): PrivateScope, Public, HideBySig
    WriteEvent(EventDescriptor&, String): PrivateScope, Public, HideBySig
    WriteTransferEvent(EventDescriptor&, Guid, Object[]): PrivateScope, Public, HideBySig
    SetActivityId(Guid&): PrivateScope, Public, Static, HideBySig
    CreateActivityId(): PrivateScope, Public, Static, HideBySig
Struct System.Diagnostics.Eventing.EventProvider+WriteEventErrorCode: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    WriteEventErrorCode NoError = 0 : Public, Static, Literal, HasDefault
    WriteEventErrorCode NoFreeBuffers = 1 : Public, Static, Literal, HasDefault
    WriteEventErrorCode EventTooBig = 2 : Public, Static, Literal, HasDefault
Class System.Diagnostics.Eventing.EventProviderTraceListener: AutoLayout, AnsiClass, Class, Public, HasSecurity, BeforeFieldInit
  :System.Diagnostics.TraceListener
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Delimiter 'get set' : 
    Boolean IsThreadSafe 'get ' : 
  Methods:
    get_Delimiter(): PrivateScope, Public, HideBySig, SpecialName
    set_Delimiter(String): PrivateScope, Public, HideBySig, SpecialName
    Flush(): PrivateScope, Public, Final, Virtual, HideBySig
    get_IsThreadSafe(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig
    Write(String): PrivateScope, Public, Final, Virtual, HideBySig
    WriteLine(String): PrivateScope, Public, Final, Virtual, HideBySig
    TraceData(TraceEventCache, String, TraceEventType, Int32, Object): PrivateScope, Public, Final, Virtual, HideBySig
    TraceData(TraceEventCache, String, TraceEventType, Int32, Object[]): PrivateScope, Public, Final, Virtual, HideBySig
    TraceEvent(TraceEventCache, String, TraceEventType, Int32): PrivateScope, Public, Final, Virtual, HideBySig
    TraceEvent(TraceEventCache, String, TraceEventType, Int32, String): PrivateScope, Public, Final, Virtual, HideBySig
    TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[]): PrivateScope, Public, Final, Virtual, HideBySig
    Fail(String, String): PrivateScope, Public, Virtual, HideBySig
    TraceTransfer(TraceEventCache, String, Int32, String, Guid): PrivateScope, Public, Final, Virtual, HideBySig
Class System.Management.Instrumentation.ManagementEntityAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    Boolean External 'get set' : 
    Boolean Singleton 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_External(): PrivateScope, Public, HideBySig, SpecialName
    set_External(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Singleton(): PrivateScope, Public, HideBySig, SpecialName
    set_Singleton(Boolean): PrivateScope, Public, HideBySig, SpecialName
Struct System.Management.Instrumentation.ManagementHostingModel: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Management.Instrumentation.ManagementHostingModel Decoupled = 0 : Public, Static, Literal, HasDefault
    System.Management.Instrumentation.ManagementHostingModel NetworkService = 1 : Public, Static, Literal, HasDefault
    System.Management.Instrumentation.ManagementHostingModel LocalService = 2 : Public, Static, Literal, HasDefault
    System.Management.Instrumentation.ManagementHostingModel LocalSystem = 3 : Public, Static, Literal, HasDefault
Class System.Management.Instrumentation.WmiConfigurationAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String SecurityRestriction 'get set' : 
    System.String NamespaceSecurity 'get set' : 
    Boolean IdentifyLevel 'get set' : 
    System.Management.Instrumentation.ManagementHostingModel HostingModel 'get set' : 
    System.String HostingGroup 'get set' : 
    System.String Scope 'get ' : 
  Methods:
    get_SecurityRestriction(): PrivateScope, Public, HideBySig, SpecialName
    set_SecurityRestriction(String): PrivateScope, Public, HideBySig, SpecialName
    get_NamespaceSecurity(): PrivateScope, Public, HideBySig, SpecialName
    set_NamespaceSecurity(String): PrivateScope, Public, HideBySig, SpecialName
    get_IdentifyLevel(): PrivateScope, Public, HideBySig, SpecialName
    set_IdentifyLevel(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_HostingModel(): PrivateScope, Public, HideBySig, SpecialName
    set_HostingModel(ManagementHostingModel): PrivateScope, Public, HideBySig, SpecialName
    get_HostingGroup(): PrivateScope, Public, HideBySig, SpecialName
    set_HostingGroup(String): PrivateScope, Public, HideBySig, SpecialName
    get_Scope(): PrivateScope, Public, HideBySig, SpecialName
Class System.Management.Instrumentation.ManagementMemberAttribute: AutoLayout, AnsiClass, Class, Public, Abstract, HasSecurity, BeforeFieldInit
  :System.Attribute
  Properties:
    System.String Name 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
Class System.Management.Instrumentation.ManagementNewInstanceAttribute: AutoLayout, AnsiClass, Class, Public, Abstract, HasSecurity, BeforeFieldInit
  :System.Management.Instrumentation.ManagementMemberAttribute
Class System.Management.Instrumentation.ManagementBindAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Management.Instrumentation.ManagementNewInstanceAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type Schema 'get set' : 
  Methods:
    get_Schema(): PrivateScope, Public, HideBySig, SpecialName
    set_Schema(Type): PrivateScope, Public, HideBySig, SpecialName
Class System.Management.Instrumentation.ManagementCreateAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Management.Instrumentation.ManagementNewInstanceAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Management.Instrumentation.ManagementRemoveAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Management.Instrumentation.ManagementMemberAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type Schema 'get set' : 
  Methods:
    get_Schema(): PrivateScope, Public, HideBySig, SpecialName
    set_Schema(Type): PrivateScope, Public, HideBySig, SpecialName
Class System.Management.Instrumentation.ManagementEnumeratorAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Management.Instrumentation.ManagementNewInstanceAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type Schema 'get set' : 
  Methods:
    get_Schema(): PrivateScope, Public, HideBySig, SpecialName
    set_Schema(Type): PrivateScope, Public, HideBySig, SpecialName
Class System.Management.Instrumentation.ManagementProbeAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Management.Instrumentation.ManagementMemberAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type Schema 'get set' : 
  Methods:
    get_Schema(): PrivateScope, Public, HideBySig, SpecialName
    set_Schema(Type): PrivateScope, Public, HideBySig, SpecialName
Class System.Management.Instrumentation.ManagementTaskAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Management.Instrumentation.ManagementMemberAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type Schema 'get set' : 
  Methods:
    get_Schema(): PrivateScope, Public, HideBySig, SpecialName
    set_Schema(Type): PrivateScope, Public, HideBySig, SpecialName
Class System.Management.Instrumentation.ManagementKeyAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Management.Instrumentation.ManagementMemberAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Management.Instrumentation.ManagementReferenceAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Type 'get set' : 
  Methods:
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(String): PrivateScope, Public, HideBySig, SpecialName
Struct System.Management.Instrumentation.ManagementConfigurationType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Management.Instrumentation.ManagementConfigurationType Apply = 0 : Public, Static, Literal, HasDefault
    System.Management.Instrumentation.ManagementConfigurationType OnCommit = 1 : Public, Static, Literal, HasDefault
Class System.Management.Instrumentation.ManagementConfigurationAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Management.Instrumentation.ManagementMemberAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Management.Instrumentation.ManagementConfigurationType Mode 'get set' : 
    System.Type Schema 'get set' : 
  Methods:
    get_Mode(): PrivateScope, Public, HideBySig, SpecialName
    set_Mode(ManagementConfigurationType): PrivateScope, Public, HideBySig, SpecialName
    get_Schema(): PrivateScope, Public, HideBySig, SpecialName
    set_Schema(Type): PrivateScope, Public, HideBySig, SpecialName
Class System.Management.Instrumentation.ManagementCommitAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Management.Instrumentation.ManagementMemberAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Management.Instrumentation.ManagementNameAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
Class System.Management.Instrumentation.InstrumentationBaseException: AutoLayout, AnsiClass, Class, Public, Serializable, HasSecurity, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Management.Instrumentation.InstrumentationException: AutoLayout, AnsiClass, Class, Public, Serializable, HasSecurity, BeforeFieldInit
  :System.Management.Instrumentation.InstrumentationBaseException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Management.Instrumentation.InstanceNotFoundException: AutoLayout, AnsiClass, Class, Public, Serializable, HasSecurity, BeforeFieldInit
  :System.Management.Instrumentation.InstrumentationException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Diagnostics.Eventing.Reader.EventBookmark: AutoLayout, AnsiClass, Class, Public, Serializable, HasSecurity, BeforeFieldInit
  Interfaces:
    System.Runtime.Serialization.ISerializable
Struct System.Diagnostics.Eventing.Reader.EventLogType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Diagnostics.Eventing.Reader.EventLogType Administrative = 0 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.EventLogType Operational = 1 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.EventLogType Analytical = 2 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.EventLogType Debug = 3 : Public, Static, Literal, HasDefault
Struct System.Diagnostics.Eventing.Reader.EventLogIsolation: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Diagnostics.Eventing.Reader.EventLogIsolation Application = 0 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.EventLogIsolation System = 1 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.EventLogIsolation Custom = 2 : Public, Static, Literal, HasDefault
Struct System.Diagnostics.Eventing.Reader.EventLogMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Diagnostics.Eventing.Reader.EventLogMode Circular = 0 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.EventLogMode AutoBackup = 1 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.EventLogMode Retain = 2 : Public, Static, Literal, HasDefault
Class System.Diagnostics.Eventing.Reader.EventLogConfiguration: AutoLayout, AnsiClass, Class, Public, HasSecurity, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Diagnostics.Eventing.Reader.EventLogSession): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    System.String LogName 'get ' : 
    System.Diagnostics.Eventing.Reader.EventLogType LogType 'get ' : 
    System.Diagnostics.Eventing.Reader.EventLogIsolation LogIsolation 'get ' : 
    Boolean IsEnabled 'get set' : 
    Boolean IsClassicLog 'get ' : 
    System.String SecurityDescriptor 'get set' : 
    System.String LogFilePath 'get set' : 
    Int64 MaximumSizeInBytes 'get set' : 
    System.Diagnostics.Eventing.Reader.EventLogMode LogMode 'get set' : 
    System.String OwningProviderName 'get ' : 
    System.Collections.Generic.IEnumerable`1[System.String] ProviderNames 'get ' : 
    System.Nullable`1[System.Int32] ProviderLevel 'get set' : 
    System.Nullable`1[System.Int64] ProviderKeywords 'get set' : 
    System.Nullable`1[System.Int32] ProviderBufferSize 'get ' : 
    System.Nullable`1[System.Int32] ProviderMinimumNumberOfBuffers 'get ' : 
    System.Nullable`1[System.Int32] ProviderMaximumNumberOfBuffers 'get ' : 
    System.Nullable`1[System.Int32] ProviderLatency 'get ' : 
    System.Nullable`1[System.Guid] ProviderControlGuid 'get ' : 
  Methods:
    get_LogName(): PrivateScope, Public, HideBySig, SpecialName
    get_LogType(): PrivateScope, Public, HideBySig, SpecialName
    get_LogIsolation(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEnabled(): PrivateScope, Public, HideBySig, SpecialName
    set_IsEnabled(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsClassicLog(): PrivateScope, Public, HideBySig, SpecialName
    get_SecurityDescriptor(): PrivateScope, Public, HideBySig, SpecialName
    set_SecurityDescriptor(String): PrivateScope, Public, HideBySig, SpecialName
    get_LogFilePath(): PrivateScope, Public, HideBySig, SpecialName
    set_LogFilePath(String): PrivateScope, Public, HideBySig, SpecialName
    get_MaximumSizeInBytes(): PrivateScope, Public, HideBySig, SpecialName
    set_MaximumSizeInBytes(Int64): PrivateScope, Public, HideBySig, SpecialName
    get_LogMode(): PrivateScope, Public, HideBySig, SpecialName
    set_LogMode(EventLogMode): PrivateScope, Public, HideBySig, SpecialName
    get_OwningProviderName(): PrivateScope, Public, HideBySig, SpecialName
    get_ProviderNames(): PrivateScope, Public, HideBySig, SpecialName
    get_ProviderLevel(): PrivateScope, Public, HideBySig, SpecialName
    set_ProviderLevel(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_ProviderKeywords(): PrivateScope, Public, HideBySig, SpecialName
    set_ProviderKeywords(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_ProviderBufferSize(): PrivateScope, Public, HideBySig, SpecialName
    get_ProviderMinimumNumberOfBuffers(): PrivateScope, Public, HideBySig, SpecialName
    get_ProviderMaximumNumberOfBuffers(): PrivateScope, Public, HideBySig, SpecialName
    get_ProviderLatency(): PrivateScope, Public, HideBySig, SpecialName
    get_ProviderControlGuid(): PrivateScope, Public, HideBySig, SpecialName
    SaveChanges(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Diagnostics.Eventing.Reader.EventLogLink: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  Properties:
    System.String LogName 'get ' : 
    Boolean IsImported 'get ' : 
    System.String DisplayName 'get ' : 
  Methods:
    get_LogName(): PrivateScope, Public, HideBySig, SpecialName
    get_IsImported(): PrivateScope, Public, HideBySig, SpecialName
    get_DisplayName(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.Eventing.Reader.EventLogStatus: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  Properties:
    System.String LogName 'get ' : 
    Int32 StatusCode 'get ' : 
  Methods:
    get_LogName(): PrivateScope, Public, HideBySig, SpecialName
    get_StatusCode(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.Eventing.Reader.EventProperty: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  Properties:
    System.Object Value 'get ' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.Eventing.Reader.EventLogPropertySelector: AutoLayout, AnsiClass, Class, Public, HasSecurity, BeforeFieldInit
    Void .ctor(System.Collections.Generic.IEnumerable`1[System.String]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Diagnostics.Eventing.Reader.EventRecord: AutoLayout, AnsiClass, Class, Public, Abstract, HasSecurity, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Properties:
    Int32 Id   'get ' : 
    System.Nullable`1[System.Byte] Version 'get ' : 
    System.Nullable`1[System.Byte] Level 'get ' : 
    System.Nullable`1[System.Int32] Task 'get ' : 
    System.Nullable`1[System.Int16] Opcode 'get ' : 
    System.Nullable`1[System.Int64] Keywords 'get ' : 
    System.Nullable`1[System.Int64] RecordId 'get ' : 
    System.String ProviderName 'get ' : 
    System.Nullable`1[System.Guid] ProviderId 'get ' : 
    System.String LogName 'get ' : 
    System.Nullable`1[System.Int32] ProcessId 'get ' : 
    System.Nullable`1[System.Int32] ThreadId 'get ' : 
    System.String MachineName 'get ' : 
    System.Security.Principal.SecurityIdentifier UserId 'get ' : 
    System.Nullable`1[System.DateTime] TimeCreated 'get ' : 
    System.Nullable`1[System.Guid] ActivityId 'get ' : 
    System.Nullable`1[System.Guid] RelatedActivityId 'get ' : 
    System.Nullable`1[System.Int32] Qualifiers 'get ' : 
    System.String LevelDisplayName 'get ' : 
    System.String OpcodeDisplayName 'get ' : 
    System.String TaskDisplayName 'get ' : 
    System.Collections.Generic.IEnumerable`1[System.String] KeywordsDisplayNames 'get ' : 
    System.Diagnostics.Eventing.Reader.EventBookmark Bookmark 'get ' : 
    System.Collections.Generic.IList`1[System.Diagnostics.Eventing.Reader.EventProperty] Properties 'get ' : 
  Methods:
    get_Id(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Version(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Level(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Task(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Opcode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Keywords(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_RecordId(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ProviderName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ProviderId(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_LogName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ProcessId(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ThreadId(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_MachineName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_UserId(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_TimeCreated(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ActivityId(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_RelatedActivityId(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Qualifiers(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    FormatDescription(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FormatDescription(IEnumerable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_LevelDisplayName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_OpcodeDisplayName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_TaskDisplayName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_KeywordsDisplayNames(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Bookmark(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Properties(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    ToXml(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Diagnostics.Eventing.Reader.EventKeyword: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  Properties:
    System.String Name 'get ' : 
    Int64 Value 'get ' : 
    System.String DisplayName 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    get_DisplayName(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.Eventing.Reader.EventLevel: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  Properties:
    System.String Name 'get ' : 
    Int32 Value 'get ' : 
    System.String DisplayName 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    get_DisplayName(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.Eventing.Reader.EventLogRecord: AutoLayout, AnsiClass, Class, Public, HasSecurity, BeforeFieldInit
  :System.Diagnostics.Eventing.Reader.EventRecord
  Properties:
    Int32 Id   'get ' : 
    System.Nullable`1[System.Byte] Version 'get ' : 
    System.Nullable`1[System.Int32] Qualifiers 'get ' : 
    System.Nullable`1[System.Byte] Level 'get ' : 
    System.Nullable`1[System.Int32] Task 'get ' : 
    System.Nullable`1[System.Int16] Opcode 'get ' : 
    System.Nullable`1[System.Int64] Keywords 'get ' : 
    System.Nullable`1[System.Int64] RecordId 'get ' : 
    System.String ProviderName 'get ' : 
    System.Nullable`1[System.Guid] ProviderId 'get ' : 
    System.String LogName 'get ' : 
    System.Nullable`1[System.Int32] ProcessId 'get ' : 
    System.Nullable`1[System.Int32] ThreadId 'get ' : 
    System.String MachineName 'get ' : 
    System.Security.Principal.SecurityIdentifier UserId 'get ' : 
    System.Nullable`1[System.DateTime] TimeCreated 'get ' : 
    System.Nullable`1[System.Guid] ActivityId 'get ' : 
    System.Nullable`1[System.Guid] RelatedActivityId 'get ' : 
    System.String ContainerLog 'get ' : 
    System.Collections.Generic.IEnumerable`1[System.Int32] MatchedQueryIds 'get ' : 
    System.Diagnostics.Eventing.Reader.EventBookmark Bookmark 'get ' : 
    System.String LevelDisplayName 'get ' : 
    System.String OpcodeDisplayName 'get ' : 
    System.String TaskDisplayName 'get ' : 
    System.Collections.Generic.IEnumerable`1[System.String] KeywordsDisplayNames 'get ' : 
    System.Collections.Generic.IList`1[System.Diagnostics.Eventing.Reader.EventProperty] Properties 'get ' : 
  Methods:
    get_Id(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Version(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Qualifiers(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Level(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Task(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Opcode(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Keywords(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_RecordId(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ProviderName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ProviderId(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_LogName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ProcessId(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ThreadId(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_MachineName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_UserId(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_TimeCreated(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ActivityId(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_RelatedActivityId(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ContainerLog(): PrivateScope, Public, HideBySig, SpecialName
    get_MatchedQueryIds(): PrivateScope, Public, HideBySig, SpecialName
    get_Bookmark(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    FormatDescription(): PrivateScope, Public, Virtual, HideBySig
    FormatDescription(IEnumerable`1): PrivateScope, Public, Virtual, HideBySig
    get_LevelDisplayName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_OpcodeDisplayName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_TaskDisplayName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_KeywordsDisplayNames(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Properties(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetPropertyValues(EventLogPropertySelector): PrivateScope, Public, HideBySig
    ToXml(): PrivateScope, Public, Virtual, HideBySig
Class System.Diagnostics.Eventing.Reader.EventLogReader: AutoLayout, AnsiClass, Class, Public, HasSecurity, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Diagnostics.Eventing.Reader.PathType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Diagnostics.Eventing.Reader.EventLogQuery): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Diagnostics.Eventing.Reader.EventLogQuery, System.Diagnostics.Eventing.Reader.EventBookmark): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Int32 BatchSize 'get set' : 
    System.Collections.Generic.IList`1[System.Diagnostics.Eventing.Reader.EventLogStatus] LogStatus 'get ' : 
  Methods:
    get_BatchSize(): PrivateScope, Public, HideBySig, SpecialName
    set_BatchSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    ReadEvent(): PrivateScope, Public, HideBySig
    ReadEvent(TimeSpan): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Seek(EventBookmark): PrivateScope, Public, HideBySig
    Seek(EventBookmark, Int64): PrivateScope, Public, HideBySig
    Seek(SeekOrigin, Int64): PrivateScope, Public, HideBySig
    CancelReading(): PrivateScope, Public, HideBySig
    get_LogStatus(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.Eventing.Reader.EventLogWatcher: AutoLayout, AnsiClass, Class, Public, HasSecurity, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Diagnostics.Eventing.Reader.EventLogQuery): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Diagnostics.Eventing.Reader.EventLogQuery, System.Diagnostics.Eventing.Reader.EventBookmark): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Diagnostics.Eventing.Reader.EventLogQuery, System.Diagnostics.Eventing.Reader.EventBookmark, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Boolean Enabled 'get set' : 
  Events:
    System.EventHandler`1[System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs] EventRecordWritten: 
  Methods:
    add_EventRecordWritten(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_EventRecordWritten(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    get_Enabled(): PrivateScope, Public, HideBySig, SpecialName
    set_Enabled(Boolean): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.EventArgs
  Properties:
    System.Diagnostics.Eventing.Reader.EventRecord EventRecord 'get ' : 
    System.Exception EventException 'get ' : 
  Methods:
    get_EventRecord(): PrivateScope, Public, HideBySig, SpecialName
    get_EventException(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.Eventing.Reader.EventLogQuery: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String, System.Diagnostics.Eventing.Reader.PathType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Diagnostics.Eventing.Reader.PathType, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Diagnostics.Eventing.Reader.EventLogSession Session 'get set' : 
    Boolean TolerateQueryErrors 'get set' : 
    Boolean ReverseDirection 'get set' : 
  Methods:
    get_Session(): PrivateScope, Public, HideBySig, SpecialName
    set_Session(EventLogSession): PrivateScope, Public, HideBySig, SpecialName
    get_TolerateQueryErrors(): PrivateScope, Public, HideBySig, SpecialName
    set_TolerateQueryErrors(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ReverseDirection(): PrivateScope, Public, HideBySig, SpecialName
    set_ReverseDirection(Boolean): PrivateScope, Public, HideBySig, SpecialName
Struct System.Diagnostics.Eventing.Reader.SessionAuthentication: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Diagnostics.Eventing.Reader.SessionAuthentication Default = 0 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.SessionAuthentication Negotiate = 1 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.SessionAuthentication Kerberos = 2 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.SessionAuthentication Ntlm = 3 : Public, Static, Literal, HasDefault
Struct System.Diagnostics.Eventing.Reader.PathType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Diagnostics.Eventing.Reader.PathType LogName = 1 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.PathType FilePath = 2 : Public, Static, Literal, HasDefault
Class System.Diagnostics.Eventing.Reader.EventLogSession: AutoLayout, AnsiClass, Class, Public, HasSecurity, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, System.String, System.Security.SecureString, System.Diagnostics.Eventing.Reader.SessionAuthentication): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    System.Diagnostics.Eventing.Reader.EventLogSession GlobalSession 'get ' : 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CancelCurrentOperations(): PrivateScope, Public, HideBySig
    get_GlobalSession(): PrivateScope, Public, Static, HideBySig, SpecialName
    GetProviderNames(): PrivateScope, Public, HideBySig
    GetLogNames(): PrivateScope, Public, HideBySig
    GetLogInformation(String, PathType): PrivateScope, Public, HideBySig
    ExportLog(String, PathType, String, String): PrivateScope, Public, HideBySig
    ExportLog(String, PathType, String, String, Boolean): PrivateScope, Public, HideBySig
    ExportLogAndMessages(String, PathType, String, String): PrivateScope, Public, HideBySig
    ExportLogAndMessages(String, PathType, String, String, Boolean, CultureInfo): PrivateScope, Public, HideBySig
    ClearLog(String): PrivateScope, Public, HideBySig
    ClearLog(String, String): PrivateScope, Public, HideBySig
Class System.Diagnostics.Eventing.Reader.EventMetadata: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  Properties:
    Int64 Id   'get ' : 
    Byte Version 'get ' : 
    System.Diagnostics.Eventing.Reader.EventLogLink LogLink 'get ' : 
    System.Diagnostics.Eventing.Reader.EventLevel Level 'get ' : 
    System.Diagnostics.Eventing.Reader.EventOpcode Opcode 'get ' : 
    System.Diagnostics.Eventing.Reader.EventTask Task 'get ' : 
    System.Collections.Generic.IEnumerable`1[System.Diagnostics.Eventing.Reader.EventKeyword] Keywords 'get ' : 
    System.String Template 'get ' : 
    System.String Description 'get ' : 
  Methods:
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_LogLink(): PrivateScope, Public, HideBySig, SpecialName
    get_Level(): PrivateScope, Public, HideBySig, SpecialName
    get_Opcode(): PrivateScope, Public, HideBySig, SpecialName
    get_Task(): PrivateScope, Public, HideBySig, SpecialName
    get_Keywords(): PrivateScope, Public, HideBySig, SpecialName
    get_Template(): PrivateScope, Public, HideBySig, SpecialName
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.Eventing.Reader.EventOpcode: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  Properties:
    System.String Name 'get ' : 
    Int32 Value 'get ' : 
    System.String DisplayName 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    get_DisplayName(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.Eventing.Reader.EventTask: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  Properties:
    System.String Name 'get ' : 
    Int32 Value 'get ' : 
    System.String DisplayName 'get ' : 
    System.Guid EventGuid 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    get_DisplayName(): PrivateScope, Public, HideBySig, SpecialName
    get_EventGuid(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.Eventing.Reader.EventLogException: AutoLayout, AnsiClass, Class, Public, Serializable, HasSecurity, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Message 'get ' : 
  Methods:
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    get_Message(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class System.Diagnostics.Eventing.Reader.EventLogNotFoundException: AutoLayout, AnsiClass, Class, Public, Serializable, HasSecurity, BeforeFieldInit
  :System.Diagnostics.Eventing.Reader.EventLogException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Diagnostics.Eventing.Reader.EventLogReadingException: AutoLayout, AnsiClass, Class, Public, Serializable, HasSecurity, BeforeFieldInit
  :System.Diagnostics.Eventing.Reader.EventLogException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException: AutoLayout, AnsiClass, Class, Public, Serializable, HasSecurity, BeforeFieldInit
  :System.Diagnostics.Eventing.Reader.EventLogException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Diagnostics.Eventing.Reader.EventLogInvalidDataException: AutoLayout, AnsiClass, Class, Public, Serializable, HasSecurity, BeforeFieldInit
  :System.Diagnostics.Eventing.Reader.EventLogException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Diagnostics.Eventing.Reader.EventLogInformation: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  Properties:
    System.Nullable`1[System.DateTime] CreationTime 'get ' : 
    System.Nullable`1[System.DateTime] LastAccessTime 'get ' : 
    System.Nullable`1[System.DateTime] LastWriteTime 'get ' : 
    System.Nullable`1[System.Int64] FileSize 'get ' : 
    System.Nullable`1[System.Int32] Attributes 'get ' : 
    System.Nullable`1[System.Int64] RecordCount 'get ' : 
    System.Nullable`1[System.Int64] OldestRecordNumber 'get ' : 
    System.Nullable`1[System.Boolean] IsLogFull 'get ' : 
  Methods:
    get_CreationTime(): PrivateScope, Public, HideBySig, SpecialName
    get_LastAccessTime(): PrivateScope, Public, HideBySig, SpecialName
    get_LastWriteTime(): PrivateScope, Public, HideBySig, SpecialName
    get_FileSize(): PrivateScope, Public, HideBySig, SpecialName
    get_Attributes(): PrivateScope, Public, HideBySig, SpecialName
    get_RecordCount(): PrivateScope, Public, HideBySig, SpecialName
    get_OldestRecordNumber(): PrivateScope, Public, HideBySig, SpecialName
    get_IsLogFull(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.Eventing.Reader.ProviderMetadata: AutoLayout, AnsiClass, Class, Public, HasSecurity, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Diagnostics.Eventing.Reader.EventLogSession, System.Globalization.CultureInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    System.String Name 'get ' : 
    System.Guid Id 'get ' : 
    System.String MessageFilePath 'get ' : 
    System.String ResourceFilePath 'get ' : 
    System.String ParameterFilePath 'get ' : 
    System.Uri HelpLink 'get ' : 
    System.String DisplayName 'get ' : 
    System.Collections.Generic.IList`1[System.Diagnostics.Eventing.Reader.EventLogLink] LogLinks 'get ' : 
    System.Collections.Generic.IList`1[System.Diagnostics.Eventing.Reader.EventLevel] Levels 'get ' : 
    System.Collections.Generic.IList`1[System.Diagnostics.Eventing.Reader.EventOpcode] Opcodes 'get ' : 
    System.Collections.Generic.IList`1[System.Diagnostics.Eventing.Reader.EventKeyword] Keywords 'get ' : 
    System.Collections.Generic.IList`1[System.Diagnostics.Eventing.Reader.EventTask] Tasks 'get ' : 
    System.Collections.Generic.IEnumerable`1[System.Diagnostics.Eventing.Reader.EventMetadata] Events 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    get_MessageFilePath(): PrivateScope, Public, HideBySig, SpecialName
    get_ResourceFilePath(): PrivateScope, Public, HideBySig, SpecialName
    get_ParameterFilePath(): PrivateScope, Public, HideBySig, SpecialName
    get_HelpLink(): PrivateScope, Public, HideBySig, SpecialName
    get_DisplayName(): PrivateScope, Public, HideBySig, SpecialName
    get_LogLinks(): PrivateScope, Public, HideBySig, SpecialName
    get_Levels(): PrivateScope, Public, HideBySig, SpecialName
    get_Opcodes(): PrivateScope, Public, HideBySig, SpecialName
    get_Keywords(): PrivateScope, Public, HideBySig, SpecialName
    get_Tasks(): PrivateScope, Public, HideBySig, SpecialName
    get_Events(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct System.Diagnostics.Eventing.Reader.StandardEventLevel: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Diagnostics.Eventing.Reader.StandardEventLevel LogAlways = 0 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventLevel Critical = 1 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventLevel Error = 2 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventLevel Warning = 3 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventLevel Informational = 4 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventLevel Verbose = 5 : Public, Static, Literal, HasDefault
Struct System.Diagnostics.Eventing.Reader.StandardEventTask: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Diagnostics.Eventing.Reader.StandardEventTask None = 0 : Public, Static, Literal, HasDefault
Struct System.Diagnostics.Eventing.Reader.StandardEventOpcode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Diagnostics.Eventing.Reader.StandardEventOpcode Info = 0 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventOpcode Start = 1 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventOpcode Stop = 2 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventOpcode DataCollectionStart = 3 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventOpcode DataCollectionStop = 4 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventOpcode Extension = 5 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventOpcode Reply = 6 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventOpcode Resume = 7 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventOpcode Suspend = 8 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventOpcode Send = 9 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventOpcode Receive = 240 : Public, Static, Literal, HasDefault
Struct System.Diagnostics.Eventing.Reader.StandardEventKeywords: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int64 value__ : Public, SpecialName, RTSpecialName
    System.Diagnostics.Eventing.Reader.StandardEventKeywords None = 0 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventKeywords WdiContext = 562949953421312 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventKeywords WdiDiagnostic = 1125899906842624 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventKeywords Sqm = 2251799813685248 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventKeywords AuditFailure = 4503599627370496 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventKeywords AuditSuccess = 9007199254740992 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventKeywords CorrelationHint = 4503599627370496 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventKeywords EventLogClassic = 36028797018963968 : Public, Static, Literal, HasDefault
Interface System.Linq.IQueryable: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.Collections.IEnumerable
  Properties:
    System.Linq.Expressions.Expression Expression 'get ' : 
    System.Type ElementType 'get ' : 
    System.Linq.IQueryProvider Provider 'get ' : 
  Methods:
    get_Expression(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ElementType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Provider(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface System.Linq.IQueryable`1[T]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: T,  Covariant
  Interfaces:
    System.Collections.Generic.IEnumerable`1[T]
    System.Collections.IEnumerable
    System.Linq.IQueryable
Interface System.Linq.IQueryProvider: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    CreateQuery(Expression): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateQuery(Expression): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Execute(Expression): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Execute(Expression): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface System.Linq.IOrderedQueryable: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.Linq.IQueryable
    System.Collections.IEnumerable
Interface System.Linq.IOrderedQueryable`1[T]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: T,  Covariant
  Interfaces:
    System.Linq.IQueryable`1[T]
    System.Collections.Generic.IEnumerable`1[T]
    System.Collections.IEnumerable
    System.Linq.IQueryable
    System.Linq.IOrderedQueryable
Class System.Linq.Queryable: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Average(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Average(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Average(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Average(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Average(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Average(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Average(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Average(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Average(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Average(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Aggregate(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Aggregate(IQueryable`1, TAccumulate, Expression`1): PrivateScope, Public, Static, HideBySig
    Aggregate(IQueryable`1, TAccumulate, Expression`1, Expression`1): PrivateScope, Public, Static, HideBySig
    FirstOrDefault(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Last(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Last(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    LastOrDefault(IQueryable`1): PrivateScope, Public, Static, HideBySig
    LastOrDefault(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Single(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Single(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    SingleOrDefault(IQueryable`1): PrivateScope, Public, Static, HideBySig
    SingleOrDefault(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    ElementAt(IQueryable`1, Int32): PrivateScope, Public, Static, HideBySig
    ElementAtOrDefault(IQueryable`1, Int32): PrivateScope, Public, Static, HideBySig
    DefaultIfEmpty(IQueryable`1): PrivateScope, Public, Static, HideBySig
    DefaultIfEmpty(IQueryable`1, TSource): PrivateScope, Public, Static, HideBySig
    Contains(IQueryable`1, TSource): PrivateScope, Public, Static, HideBySig
    Contains(IQueryable`1, TSource, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    Reverse(IQueryable`1): PrivateScope, Public, Static, HideBySig
    SequenceEqual(IQueryable`1, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    SequenceEqual(IQueryable`1, IEnumerable`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    Any(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Any(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    All(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Count(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Count(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    LongCount(IQueryable`1): PrivateScope, Public, Static, HideBySig
    LongCount(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Min(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Min(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Max(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Max(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Sum(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Sum(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Sum(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Sum(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Sum(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Sum(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Sum(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Sum(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Sum(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Sum(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Sum(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Sum(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Sum(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Sum(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Sum(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Sum(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Sum(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Sum(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Sum(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Sum(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Average(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Average(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Average(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Average(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Average(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Average(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Average(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Average(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Average(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Average(IQueryable`1): PrivateScope, Public, Static, HideBySig
    AsQueryable(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    AsQueryable(IEnumerable): PrivateScope, Public, Static, HideBySig
    Where(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Where(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    OfType(IQueryable): PrivateScope, Public, Static, HideBySig
    Cast(IQueryable): PrivateScope, Public, Static, HideBySig
    Select(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Select(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    SelectMany(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    SelectMany(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    SelectMany(IQueryable`1, Expression`1, Expression`1): PrivateScope, Public, Static, HideBySig
    SelectMany(IQueryable`1, Expression`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Join(IQueryable`1, IEnumerable`1, Expression`1, Expression`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Join(IQueryable`1, IEnumerable`1, Expression`1, Expression`1, Expression`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    GroupJoin(IQueryable`1, IEnumerable`1, Expression`1, Expression`1, Expression`1): PrivateScope, Public, Static, HideBySig
    GroupJoin(IQueryable`1, IEnumerable`1, Expression`1, Expression`1, Expression`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    OrderBy(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    OrderBy(IQueryable`1, Expression`1, IComparer`1): PrivateScope, Public, Static, HideBySig
    OrderByDescending(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    OrderByDescending(IQueryable`1, Expression`1, IComparer`1): PrivateScope, Public, Static, HideBySig
    ThenBy(IOrderedQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    ThenBy(IOrderedQueryable`1, Expression`1, IComparer`1): PrivateScope, Public, Static, HideBySig
    ThenByDescending(IOrderedQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    ThenByDescending(IOrderedQueryable`1, Expression`1, IComparer`1): PrivateScope, Public, Static, HideBySig
    Take(IQueryable`1, Int32): PrivateScope, Public, Static, HideBySig
    TakeWhile(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    TakeWhile(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Skip(IQueryable`1, Int32): PrivateScope, Public, Static, HideBySig
    SkipWhile(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    SkipWhile(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    GroupBy(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    GroupBy(IQueryable`1, Expression`1, Expression`1): PrivateScope, Public, Static, HideBySig
    GroupBy(IQueryable`1, Expression`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    GroupBy(IQueryable`1, Expression`1, Expression`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    GroupBy(IQueryable`1, Expression`1, Expression`1, Expression`1): PrivateScope, Public, Static, HideBySig
    GroupBy(IQueryable`1, Expression`1, Expression`1): PrivateScope, Public, Static, HideBySig
    GroupBy(IQueryable`1, Expression`1, Expression`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    GroupBy(IQueryable`1, Expression`1, Expression`1, Expression`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    Distinct(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Distinct(IQueryable`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    Concat(IQueryable`1, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Zip(IQueryable`1, IEnumerable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Union(IQueryable`1, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Union(IQueryable`1, IEnumerable`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    Intersect(IQueryable`1, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Intersect(IQueryable`1, IEnumerable`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    Except(IQueryable`1, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Except(IQueryable`1, IEnumerable`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    First(IQueryable`1): PrivateScope, Public, Static, HideBySig
    First(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    FirstOrDefault(IQueryable`1): PrivateScope, Public, Static, HideBySig
Class System.Linq.Enumerable: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Average(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Average(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Average(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Average(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Average(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Average(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Sum(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Sum(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Sum(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Sum(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Sum(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Average(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Average(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Average(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Average(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Average(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Average(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Average(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Average(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Average(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Average(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Average(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Average(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Average(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Average(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    ToDictionary(IEnumerable`1, Func`2, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    ToDictionary(IEnumerable`1, Func`2, Func`2): PrivateScope, Public, Static, HideBySig
    ToDictionary(IEnumerable`1, Func`2, Func`2, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    ToLookup(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    ToLookup(IEnumerable`1, Func`2, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    ToLookup(IEnumerable`1, Func`2, Func`2): PrivateScope, Public, Static, HideBySig
    ToLookup(IEnumerable`1, Func`2, Func`2, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    DefaultIfEmpty(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    DefaultIfEmpty(IEnumerable`1, TSource): PrivateScope, Public, Static, HideBySig
    OfType(IEnumerable): PrivateScope, Public, Static, HideBySig
    Cast(IEnumerable): PrivateScope, Public, Static, HideBySig
    First(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    First(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    FirstOrDefault(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    FirstOrDefault(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Last(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Last(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    LastOrDefault(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    LastOrDefault(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Single(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Single(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    SingleOrDefault(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    SingleOrDefault(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    ElementAt(IEnumerable`1, Int32): PrivateScope, Public, Static, HideBySig
    ElementAtOrDefault(IEnumerable`1, Int32): PrivateScope, Public, Static, HideBySig
    Range(Int32, Int32): PrivateScope, Public, Static, HideBySig
    Repeat(TResult, Int32): PrivateScope, Public, Static, HideBySig
    Empty(): PrivateScope, Public, Static, HideBySig
    Any(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Any(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    All(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Count(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Count(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    LongCount(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    LongCount(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Contains(IEnumerable`1, TSource): PrivateScope, Public, Static, HideBySig
    Contains(IEnumerable`1, TSource, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    Aggregate(IEnumerable`1, Func`3): PrivateScope, Public, Static, HideBySig
    Aggregate(IEnumerable`1, TAccumulate, Func`3): PrivateScope, Public, Static, HideBySig
    Aggregate(IEnumerable`1, TAccumulate, Func`3, Func`2): PrivateScope, Public, Static, HideBySig
    Sum(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Sum(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Sum(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Sum(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Sum(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Sum(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Sum(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Sum(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Sum(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Sum(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Sum(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Sum(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Sum(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Sum(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Sum(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Where(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Where(IEnumerable`1, Func`3): PrivateScope, Public, Static, HideBySig
    Select(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Select(IEnumerable`1, Func`3): PrivateScope, Public, Static, HideBySig
    SelectMany(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    SelectMany(IEnumerable`1, Func`3): PrivateScope, Public, Static, HideBySig
    SelectMany(IEnumerable`1, Func`3, Func`3): PrivateScope, Public, Static, HideBySig
    SelectMany(IEnumerable`1, Func`2, Func`3): PrivateScope, Public, Static, HideBySig
    Take(IEnumerable`1, Int32): PrivateScope, Public, Static, HideBySig
    TakeWhile(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    TakeWhile(IEnumerable`1, Func`3): PrivateScope, Public, Static, HideBySig
    Skip(IEnumerable`1, Int32): PrivateScope, Public, Static, HideBySig
    SkipWhile(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    SkipWhile(IEnumerable`1, Func`3): PrivateScope, Public, Static, HideBySig
    Join(IEnumerable`1, IEnumerable`1, Func`2, Func`2, Func`3): PrivateScope, Public, Static, HideBySig
    Join(IEnumerable`1, IEnumerable`1, Func`2, Func`2, Func`3, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    GroupJoin(IEnumerable`1, IEnumerable`1, Func`2, Func`2, Func`3): PrivateScope, Public, Static, HideBySig
    GroupJoin(IEnumerable`1, IEnumerable`1, Func`2, Func`2, Func`3, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    OrderBy(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    OrderBy(IEnumerable`1, Func`2, IComparer`1): PrivateScope, Public, Static, HideBySig
    OrderByDescending(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    OrderByDescending(IEnumerable`1, Func`2, IComparer`1): PrivateScope, Public, Static, HideBySig
    ThenBy(IOrderedEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    ThenBy(IOrderedEnumerable`1, Func`2, IComparer`1): PrivateScope, Public, Static, HideBySig
    ThenByDescending(IOrderedEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    ThenByDescending(IOrderedEnumerable`1, Func`2, IComparer`1): PrivateScope, Public, Static, HideBySig
    GroupBy(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    GroupBy(IEnumerable`1, Func`2, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    GroupBy(IEnumerable`1, Func`2, Func`2): PrivateScope, Public, Static, HideBySig
    GroupBy(IEnumerable`1, Func`2, Func`2, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    GroupBy(IEnumerable`1, Func`2, Func`3): PrivateScope, Public, Static, HideBySig
    GroupBy(IEnumerable`1, Func`2, Func`2, Func`3): PrivateScope, Public, Static, HideBySig
    GroupBy(IEnumerable`1, Func`2, Func`3, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    GroupBy(IEnumerable`1, Func`2, Func`2, Func`3, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    Concat(IEnumerable`1, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Zip(IEnumerable`1, IEnumerable`1, Func`3): PrivateScope, Public, Static, HideBySig
    Distinct(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Distinct(IEnumerable`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    Union(IEnumerable`1, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Union(IEnumerable`1, IEnumerable`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    Intersect(IEnumerable`1, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Intersect(IEnumerable`1, IEnumerable`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    Except(IEnumerable`1, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Except(IEnumerable`1, IEnumerable`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    Reverse(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    SequenceEqual(IEnumerable`1, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    SequenceEqual(IEnumerable`1, IEnumerable`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    AsEnumerable(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    ToArray(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    ToList(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    ToDictionary(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
Interface System.Linq.IOrderedEnumerable`1[TElement]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: TElement
  Interfaces:
    System.Collections.Generic.IEnumerable`1[TElement]
    System.Collections.IEnumerable
  Methods:
    CreateOrderedEnumerable(Func`2, IComparer`1, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface System.Linq.IGrouping`2[TKey,TElement]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: TKey,  Covariant
  Type parameter: TElement,  Covariant
  Interfaces:
    System.Collections.Generic.IEnumerable`1[TElement]
    System.Collections.IEnumerable
  Properties:
    TKey Key   'get ' : 
  Methods:
    get_Key(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface System.Linq.ILookup`2[TKey,TElement]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: TKey
  Type parameter: TElement
  Interfaces:
    System.Collections.Generic.IEnumerable`1[System.Linq.IGrouping`2[TKey,TElement]]
    System.Collections.IEnumerable
  Properties:
    Int32 Count 'get ' : 
    System.Collections.Generic.IEnumerable`1[TElement] Item [TKey] 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Item(TKey): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Contains(TKey): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class System.Linq.Lookup`2[TKey,TElement]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TKey
  Type parameter: TElement
  Interfaces:
    System.Linq.ILookup`2[TKey,TElement]
    System.Collections.Generic.IEnumerable`1[System.Linq.IGrouping`2[TKey,TElement]]
    System.Collections.IEnumerable
  Properties:
    Int32 Count 'get ' : 
    System.Collections.Generic.IEnumerable`1[TElement] Item [TKey] 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(TKey): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Contains(TKey): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ApplyResultSelector(Func`3): PrivateScope, Public, HideBySig
Class System.Linq.ParallelEnumerable: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Except(ParallelQuery`1, IEnumerable`1): PrivateScope, Public, Static, HideBySig (Obsolete)
    Except(ParallelQuery`1, ParallelQuery`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    Except(ParallelQuery`1, IEnumerable`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig (Obsolete)
    AsEnumerable(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    ToArray(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    ToList(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    ToDictionary(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    ToDictionary(ParallelQuery`1, Func`2, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    ToDictionary(ParallelQuery`1, Func`2, Func`2): PrivateScope, Public, Static, HideBySig
    ToDictionary(ParallelQuery`1, Func`2, Func`2, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    ToLookup(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    ToLookup(ParallelQuery`1, Func`2, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    ToLookup(ParallelQuery`1, Func`2, Func`2): PrivateScope, Public, Static, HideBySig
    ToLookup(ParallelQuery`1, Func`2, Func`2, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    Reverse(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    OfType(ParallelQuery): PrivateScope, Public, Static, HideBySig
    Cast(ParallelQuery): PrivateScope, Public, Static, HideBySig
    First(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    First(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    FirstOrDefault(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    FirstOrDefault(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Last(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Last(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    LastOrDefault(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    LastOrDefault(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Single(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Single(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    SingleOrDefault(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    SingleOrDefault(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    DefaultIfEmpty(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    DefaultIfEmpty(ParallelQuery`1, TSource): PrivateScope, Public, Static, HideBySig
    ElementAt(ParallelQuery`1, Int32): PrivateScope, Public, Static, HideBySig
    ElementAtOrDefault(ParallelQuery`1, Int32): PrivateScope, Public, Static, HideBySig
    Max(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Max(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Max(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Max(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Max(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Max(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Max(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Average(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Average(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Average(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Average(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Average(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Average(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Average(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Average(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Average(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Average(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Average(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Average(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Average(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Average(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Average(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Average(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Average(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Average(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Average(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Average(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Any(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Any(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    All(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Contains(ParallelQuery`1, TSource): PrivateScope, Public, Static, HideBySig
    Contains(ParallelQuery`1, TSource, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    Take(ParallelQuery`1, Int32): PrivateScope, Public, Static, HideBySig
    TakeWhile(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    TakeWhile(ParallelQuery`1, Func`3): PrivateScope, Public, Static, HideBySig
    Skip(ParallelQuery`1, Int32): PrivateScope, Public, Static, HideBySig
    SkipWhile(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    SkipWhile(ParallelQuery`1, Func`3): PrivateScope, Public, Static, HideBySig
    Concat(ParallelQuery`1, ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Concat(ParallelQuery`1, IEnumerable`1): PrivateScope, Public, Static, HideBySig (Obsolete)
    SequenceEqual(ParallelQuery`1, ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    SequenceEqual(ParallelQuery`1, IEnumerable`1): PrivateScope, Public, Static, HideBySig (Obsolete)
    SequenceEqual(ParallelQuery`1, ParallelQuery`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    SequenceEqual(ParallelQuery`1, IEnumerable`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig (Obsolete)
    Distinct(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Distinct(ParallelQuery`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    Union(ParallelQuery`1, ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Union(ParallelQuery`1, IEnumerable`1): PrivateScope, Public, Static, HideBySig (Obsolete)
    Union(ParallelQuery`1, ParallelQuery`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    Union(ParallelQuery`1, IEnumerable`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig (Obsolete)
    Intersect(ParallelQuery`1, ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Intersect(ParallelQuery`1, IEnumerable`1): PrivateScope, Public, Static, HideBySig (Obsolete)
    Intersect(ParallelQuery`1, ParallelQuery`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    Intersect(ParallelQuery`1, IEnumerable`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig (Obsolete)
    Except(ParallelQuery`1, ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Aggregate(ParallelQuery`1, TAccumulate, Func`3, Func`3, Func`2): PrivateScope, Public, Static, HideBySig
    Aggregate(ParallelQuery`1, Func`1, Func`3, Func`3, Func`2): PrivateScope, Public, Static, HideBySig
    Count(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Count(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    LongCount(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    LongCount(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Sum(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Sum(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Sum(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Sum(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Sum(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Sum(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Sum(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Sum(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Sum(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Sum(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Sum(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Sum(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Sum(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Sum(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Sum(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Sum(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Sum(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Sum(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Sum(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Sum(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Min(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Min(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Min(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Min(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Min(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Min(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Min(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Min(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Min(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Min(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Min(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Min(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Min(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Min(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Min(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Min(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Min(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Min(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Min(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Min(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Min(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Min(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Max(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Max(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Max(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Max(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Max(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Max(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Max(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Max(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Max(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Max(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Max(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    Max(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Max(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Max(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Max(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    AsParallel(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    AsParallel(Partitioner`1): PrivateScope, Public, Static, HideBySig
    AsOrdered(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    AsOrdered(ParallelQuery): PrivateScope, Public, Static, HideBySig
    AsUnordered(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    AsParallel(IEnumerable): PrivateScope, Public, Static, HideBySig
    AsSequential(ParallelQuery`1): PrivateScope, Public, Static, HideBySig
    WithDegreeOfParallelism(ParallelQuery`1, Int32): PrivateScope, Public, Static, HideBySig
    WithCancellation(ParallelQuery`1, CancellationToken): PrivateScope, Public, Static, HideBySig
    WithExecutionMode(ParallelQuery`1, ParallelExecutionMode): PrivateScope, Public, Static, HideBySig
    WithMergeOptions(ParallelQuery`1, ParallelMergeOptions): PrivateScope, Public, Static, HideBySig
    Range(Int32, Int32): PrivateScope, Public, Static, HideBySig
    Repeat(TResult, Int32): PrivateScope, Public, Static, HideBySig
    Empty(): PrivateScope, Public, Static, HideBySig
    ForAll(ParallelQuery`1, Action`1): PrivateScope, Public, Static, HideBySig
    Where(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Where(ParallelQuery`1, Func`3): PrivateScope, Public, Static, HideBySig
    Select(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    Select(ParallelQuery`1, Func`3): PrivateScope, Public, Static, HideBySig
    Zip(ParallelQuery`1, ParallelQuery`1, Func`3): PrivateScope, Public, Static, HideBySig
    Zip(ParallelQuery`1, IEnumerable`1, Func`3): PrivateScope, Public, Static, HideBySig (Obsolete)
    Join(ParallelQuery`1, ParallelQuery`1, Func`2, Func`2, Func`3): PrivateScope, Public, Static, HideBySig
    Join(ParallelQuery`1, IEnumerable`1, Func`2, Func`2, Func`3): PrivateScope, Public, Static, HideBySig (Obsolete)
    Join(ParallelQuery`1, ParallelQuery`1, Func`2, Func`2, Func`3, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    Join(ParallelQuery`1, IEnumerable`1, Func`2, Func`2, Func`3, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig (Obsolete)
    GroupJoin(ParallelQuery`1, ParallelQuery`1, Func`2, Func`2, Func`3): PrivateScope, Public, Static, HideBySig
    GroupJoin(ParallelQuery`1, IEnumerable`1, Func`2, Func`2, Func`3): PrivateScope, Public, Static, HideBySig (Obsolete)
    GroupJoin(ParallelQuery`1, ParallelQuery`1, Func`2, Func`2, Func`3, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    GroupJoin(ParallelQuery`1, IEnumerable`1, Func`2, Func`2, Func`3, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig (Obsolete)
    SelectMany(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    SelectMany(ParallelQuery`1, Func`3): PrivateScope, Public, Static, HideBySig
    SelectMany(ParallelQuery`1, Func`2, Func`3): PrivateScope, Public, Static, HideBySig
    SelectMany(ParallelQuery`1, Func`3, Func`3): PrivateScope, Public, Static, HideBySig
    OrderBy(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    OrderBy(ParallelQuery`1, Func`2, IComparer`1): PrivateScope, Public, Static, HideBySig
    OrderByDescending(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    OrderByDescending(ParallelQuery`1, Func`2, IComparer`1): PrivateScope, Public, Static, HideBySig
    ThenBy(OrderedParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    ThenBy(OrderedParallelQuery`1, Func`2, IComparer`1): PrivateScope, Public, Static, HideBySig
    ThenByDescending(OrderedParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    ThenByDescending(OrderedParallelQuery`1, Func`2, IComparer`1): PrivateScope, Public, Static, HideBySig
    GroupBy(ParallelQuery`1, Func`2): PrivateScope, Public, Static, HideBySig
    GroupBy(ParallelQuery`1, Func`2, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    GroupBy(ParallelQuery`1, Func`2, Func`2): PrivateScope, Public, Static, HideBySig
    GroupBy(ParallelQuery`1, Func`2, Func`2, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    GroupBy(ParallelQuery`1, Func`2, Func`3): PrivateScope, Public, Static, HideBySig
    GroupBy(ParallelQuery`1, Func`2, Func`3, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    GroupBy(ParallelQuery`1, Func`2, Func`2, Func`3): PrivateScope, Public, Static, HideBySig
    GroupBy(ParallelQuery`1, Func`2, Func`2, Func`3, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    Aggregate(ParallelQuery`1, Func`3): PrivateScope, Public, Static, HideBySig
    Aggregate(ParallelQuery`1, TAccumulate, Func`3): PrivateScope, Public, Static, HideBySig
    Aggregate(ParallelQuery`1, TAccumulate, Func`3, Func`2): PrivateScope, Public, Static, HideBySig
Class System.Runtime.CompilerServices.ExecutionScope: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
  Fields:
    System.Runtime.CompilerServices.ExecutionScope Parent : Public
    System.Object[] Globals : Public
    System.Object[] Locals : Public
  Methods:
    CreateHoistedLocals(): PrivateScope, Public, HideBySig
    CreateDelegate(Int32, Object[]): PrivateScope, Public, HideBySig
    IsolateExpression(Expression, Object[]): PrivateScope, Public, HideBySig
Class System.Linq.EnumerableQuery: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
Class System.Linq.EnumerableQuery`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T
  :System.Linq.EnumerableQuery
    Void .ctor(System.Collections.Generic.IEnumerable`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Linq.Expressions.Expression): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Linq.IOrderedQueryable`1[T]
    System.Linq.IQueryable`1[T]
    System.Collections.Generic.IEnumerable`1[T]
    System.Collections.IEnumerable
    System.Linq.IQueryable
    System.Linq.IOrderedQueryable
    System.Linq.IQueryProvider
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class System.Linq.EnumerableExecutor: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
Class System.Linq.EnumerableExecutor`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T
  :System.Linq.EnumerableExecutor
    Void .ctor(System.Linq.Expressions.Expression): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Runtime.CompilerServices.DynamicAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.IList`1[System.Boolean] TransformFlags 'get ' : 
  Methods:
    get_TransformFlags(): PrivateScope, Public, HideBySig, SpecialName
Struct System.Linq.ParallelMergeOptions: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Linq.ParallelMergeOptions Default = 0 : Public, Static, Literal, HasDefault
    System.Linq.ParallelMergeOptions NotBuffered = 1 : Public, Static, Literal, HasDefault
    System.Linq.ParallelMergeOptions AutoBuffered = 2 : Public, Static, Literal, HasDefault
    System.Linq.ParallelMergeOptions FullyBuffered = 3 : Public, Static, Literal, HasDefault
Struct System.Linq.ParallelExecutionMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Linq.ParallelExecutionMode Default = 0 : Public, Static, Literal, HasDefault
    System.Linq.ParallelExecutionMode ForceParallelism = 1 : Public, Static, Literal, HasDefault
Class System.Linq.ParallelQuery: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Interfaces:
    System.Collections.IEnumerable
Class System.Linq.ParallelQuery`1[TSource]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TSource
  :System.Linq.ParallelQuery
  Interfaces:
    System.Collections.Generic.IEnumerable`1[TSource]
  Methods:
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Win32.SafeHandles.SafeNCryptHandle: AutoLayout, AnsiClass, Class, Public, Abstract, HasSecurity, BeforeFieldInit
  :Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
Class Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :Microsoft.Win32.SafeHandles.SafeNCryptHandle
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :Microsoft.Win32.SafeHandles.SafeNCryptHandle
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :Microsoft.Win32.SafeHandles.SafeNCryptHandle
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct System.Security.ManifestKinds: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.ManifestKinds None = 0 : Public, Static, Literal, HasDefault
    System.Security.ManifestKinds Deployment = 1 : Public, Static, Literal, HasDefault
    System.Security.ManifestKinds Application = 2 : Public, Static, Literal, HasDefault
    System.Security.ManifestKinds ApplicationAndDeployment = 3 : Public, Static, Literal, HasDefault
Class System.Security.Cryptography.AesCryptoServiceProvider: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Security.Cryptography.Aes
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Byte[] Key 'get set' : 
    Int32 KeySize 'get set' : 
  Methods:
    get_Key(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Key(Byte[]): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_KeySize(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_KeySize(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    CreateDecryptor(): PrivateScope, Public, Virtual, HideBySig
    CreateDecryptor(Byte[], Byte[]): PrivateScope, Public, Virtual, HideBySig
    CreateEncryptor(): PrivateScope, Public, Virtual, HideBySig
    CreateEncryptor(Byte[], Byte[]): PrivateScope, Public, Virtual, HideBySig
    GenerateKey(): PrivateScope, Public, Virtual, HideBySig
    GenerateIV(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Cryptography.AesManaged: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Security.Cryptography.Aes
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 FeedbackSize 'get set' : 
    Byte[] IV  'get set' : 
    Byte[] Key 'get set' : 
    Int32 KeySize 'get set' : 
    System.Security.Cryptography.CipherMode Mode 'get set' : 
    System.Security.Cryptography.PaddingMode Padding 'get set' : 
  Methods:
    get_FeedbackSize(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_FeedbackSize(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IV(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IV(Byte[]): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Key(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Key(Byte[]): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_KeySize(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_KeySize(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Mode(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Mode(CipherMode): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Padding(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Padding(PaddingMode): PrivateScope, Public, Virtual, HideBySig, SpecialName
    CreateDecryptor(): PrivateScope, Public, Virtual, HideBySig
    CreateDecryptor(Byte[], Byte[]): PrivateScope, Public, Virtual, HideBySig
    CreateEncryptor(): PrivateScope, Public, Virtual, HideBySig
    CreateEncryptor(Byte[], Byte[]): PrivateScope, Public, Virtual, HideBySig
    GenerateIV(): PrivateScope, Public, Virtual, HideBySig
    GenerateKey(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Cryptography.CngAlgorithm: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, HasSecurity, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[System.Security.Cryptography.CngAlgorithm]
  Properties:
    System.String Algorithm 'get ' : 
    System.Security.Cryptography.CngAlgorithm ECDiffieHellmanP256 'get ' : 
    System.Security.Cryptography.CngAlgorithm ECDiffieHellmanP384 'get ' : 
    System.Security.Cryptography.CngAlgorithm ECDiffieHellmanP521 'get ' : 
    System.Security.Cryptography.CngAlgorithm ECDsaP256 'get ' : 
    System.Security.Cryptography.CngAlgorithm ECDsaP384 'get ' : 
    System.Security.Cryptography.CngAlgorithm ECDsaP521 'get ' : 
    System.Security.Cryptography.CngAlgorithm MD5 'get ' : 
    System.Security.Cryptography.CngAlgorithm Sha1 'get ' : 
    System.Security.Cryptography.CngAlgorithm Sha256 'get ' : 
    System.Security.Cryptography.CngAlgorithm Sha384 'get ' : 
    System.Security.Cryptography.CngAlgorithm Sha512 'get ' : 
  Methods:
    get_Algorithm(): PrivateScope, Public, HideBySig, SpecialName
    op_Equality(CngAlgorithm, CngAlgorithm): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(CngAlgorithm, CngAlgorithm): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(CngAlgorithm): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    get_ECDiffieHellmanP256(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ECDiffieHellmanP384(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ECDiffieHellmanP521(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ECDsaP256(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ECDsaP384(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ECDsaP521(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MD5(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Sha1(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Sha256(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Sha384(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Sha512(): PrivateScope, Public, Static, HideBySig, SpecialName
Class System.Security.Cryptography.CngAlgorithmGroup: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, HasSecurity, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[System.Security.Cryptography.CngAlgorithmGroup]
  Properties:
    System.String AlgorithmGroup 'get ' : 
    System.Security.Cryptography.CngAlgorithmGroup DiffieHellman 'get ' : 
    System.Security.Cryptography.CngAlgorithmGroup Dsa 'get ' : 
    System.Security.Cryptography.CngAlgorithmGroup ECDiffieHellman 'get ' : 
    System.Security.Cryptography.CngAlgorithmGroup ECDsa 'get ' : 
    System.Security.Cryptography.CngAlgorithmGroup Rsa 'get ' : 
  Methods:
    get_AlgorithmGroup(): PrivateScope, Public, HideBySig, SpecialName
    op_Equality(CngAlgorithmGroup, CngAlgorithmGroup): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(CngAlgorithmGroup, CngAlgorithmGroup): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(CngAlgorithmGroup): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    get_DiffieHellman(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Dsa(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ECDiffieHellman(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ECDsa(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Rsa(): PrivateScope, Public, Static, HideBySig, SpecialName
Struct System.Security.Cryptography.CngKeyHandleOpenOptions: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Cryptography.CngKeyHandleOpenOptions None = 0 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CngKeyHandleOpenOptions EphemeralKey = 1 : Public, Static, Literal, HasDefault
Class System.Security.Cryptography.CngKey: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Properties:
    System.Security.Cryptography.CngAlgorithmGroup AlgorithmGroup 'get ' : 
    System.Security.Cryptography.CngAlgorithm Algorithm 'get ' : 
    System.Security.Cryptography.CngExportPolicies ExportPolicy 'get ' : 
    Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle Handle 'get ' : 
    Boolean IsEphemeral 'get set' : 
    Boolean IsMachineKey 'get ' : 
    System.String KeyName 'get ' : 
    Int32 KeySize 'get ' : 
    System.Security.Cryptography.CngKeyUsages KeyUsage 'get ' : 
    IntPtr ParentWindowHandle 'get set' : 
    System.Security.Cryptography.CngProvider Provider 'get ' : 
    Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle ProviderHandle 'get ' : 
    System.String UniqueName 'get ' : 
    System.Security.Cryptography.CngUIPolicy UIPolicy 'get ' : 
  Methods:
    get_AlgorithmGroup(): PrivateScope, Public, HideBySig, SpecialName
    get_Algorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_ExportPolicy(): PrivateScope, Public, HideBySig, SpecialName
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
    get_IsEphemeral(): PrivateScope, Public, HideBySig, SpecialName
    get_IsMachineKey(): PrivateScope, Public, HideBySig, SpecialName
    get_KeyName(): PrivateScope, Public, HideBySig, SpecialName
    get_KeySize(): PrivateScope, Public, HideBySig, SpecialName
    get_KeyUsage(): PrivateScope, Public, HideBySig, SpecialName
    get_ParentWindowHandle(): PrivateScope, Public, HideBySig, SpecialName
    set_ParentWindowHandle(IntPtr): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
    get_Provider(): PrivateScope, Public, HideBySig, SpecialName
    get_ProviderHandle(): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
    get_UniqueName(): PrivateScope, Public, HideBySig, SpecialName
    get_UIPolicy(): PrivateScope, Public, HideBySig, SpecialName
    Create(CngAlgorithm): PrivateScope, Public, Static, HideBySig
    Create(CngAlgorithm, String): PrivateScope, Public, Static, HideBySig
    Create(CngAlgorithm, String, CngKeyCreationParameters): PrivateScope, Public, Static, HideBySig
    Delete(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Exists(String): PrivateScope, Public, Static, HideBySig
    Exists(String, CngProvider): PrivateScope, Public, Static, HideBySig
    Exists(String, CngProvider, CngKeyOpenOptions): PrivateScope, Public, Static, HideBySig
    Import(Byte[], CngKeyBlobFormat): PrivateScope, Public, Static, HideBySig
    Import(Byte[], CngKeyBlobFormat, CngProvider): PrivateScope, Public, Static, HideBySig
    Export(CngKeyBlobFormat): PrivateScope, Public, HideBySig
    GetProperty(String, CngPropertyOptions): PrivateScope, Public, HideBySig, HasSecurity
    HasProperty(String, CngPropertyOptions): PrivateScope, Public, HideBySig, HasSecurity
    Open(String): PrivateScope, Public, Static, HideBySig
    Open(String, CngProvider): PrivateScope, Public, Static, HideBySig
    Open(String, CngProvider, CngKeyOpenOptions): PrivateScope, Public, Static, HideBySig
    Open(SafeNCryptKeyHandle, CngKeyHandleOpenOptions): PrivateScope, Public, Static, HideBySig, HasSecurity
    SetProperty(CngProperty): PrivateScope, Public, HideBySig, HasSecurity
Class System.Security.Cryptography.CngKeyBlobFormat: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, HasSecurity, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[System.Security.Cryptography.CngKeyBlobFormat]
  Properties:
    System.String Format 'get ' : 
    System.Security.Cryptography.CngKeyBlobFormat EccPrivateBlob 'get ' : 
    System.Security.Cryptography.CngKeyBlobFormat EccPublicBlob 'get ' : 
    System.Security.Cryptography.CngKeyBlobFormat GenericPrivateBlob 'get ' : 
    System.Security.Cryptography.CngKeyBlobFormat GenericPublicBlob 'get ' : 
    System.Security.Cryptography.CngKeyBlobFormat OpaqueTransportBlob 'get ' : 
    System.Security.Cryptography.CngKeyBlobFormat Pkcs8PrivateBlob 'get ' : 
  Methods:
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    op_Equality(CngKeyBlobFormat, CngKeyBlobFormat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(CngKeyBlobFormat, CngKeyBlobFormat): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(CngKeyBlobFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    get_EccPrivateBlob(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_EccPublicBlob(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_GenericPrivateBlob(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_GenericPublicBlob(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_OpaqueTransportBlob(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Pkcs8PrivateBlob(): PrivateScope, Public, Static, HideBySig, SpecialName
Class System.Security.Cryptography.CngKeyCreationParameters: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Nullable`1[System.Security.Cryptography.CngExportPolicies] ExportPolicy 'get set' : 
    System.Security.Cryptography.CngKeyCreationOptions KeyCreationOptions 'get set' : 
    System.Nullable`1[System.Security.Cryptography.CngKeyUsages] KeyUsage 'get set' : 
    IntPtr ParentWindowHandle 'get set' : 
    System.Security.Cryptography.CngPropertyCollection Parameters 'get ' : 
    System.Security.Cryptography.CngProvider Provider 'get set' : 
    System.Security.Cryptography.CngUIPolicy UIPolicy 'get set' : 
  Methods:
    get_ExportPolicy(): PrivateScope, Public, HideBySig, SpecialName
    set_ExportPolicy(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_KeyCreationOptions(): PrivateScope, Public, HideBySig, SpecialName
    set_KeyCreationOptions(CngKeyCreationOptions): PrivateScope, Public, HideBySig, SpecialName
    get_KeyUsage(): PrivateScope, Public, HideBySig, SpecialName
    set_KeyUsage(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_ParentWindowHandle(): PrivateScope, Public, HideBySig, SpecialName
    set_ParentWindowHandle(IntPtr): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
    get_Parameters(): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
    get_Provider(): PrivateScope, Public, HideBySig, SpecialName
    set_Provider(CngProvider): PrivateScope, Public, HideBySig, SpecialName
    get_UIPolicy(): PrivateScope, Public, HideBySig, SpecialName
    set_UIPolicy(CngUIPolicy): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
Struct System.Security.Cryptography.CngProperty: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, HasSecurity, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.String, Byte[], System.Security.Cryptography.CngPropertyOptions): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[System.Security.Cryptography.CngProperty]
  Properties:
    System.String Name 'get ' : 
    System.Security.Cryptography.CngPropertyOptions Options 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Options(): PrivateScope, Public, HideBySig, SpecialName
    GetValue(): PrivateScope, Public, HideBySig
    op_Equality(CngProperty, CngProperty): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(CngProperty, CngProperty): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(CngProperty): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Cryptography.CngPropertyCollection: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Collections.ObjectModel.Collection`1[System.Security.Cryptography.CngProperty]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Security.Cryptography.CngProvider: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, HasSecurity, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[System.Security.Cryptography.CngProvider]
  Properties:
    System.String Provider 'get ' : 
    System.Security.Cryptography.CngProvider MicrosoftSmartCardKeyStorageProvider 'get ' : 
    System.Security.Cryptography.CngProvider MicrosoftSoftwareKeyStorageProvider 'get ' : 
  Methods:
    get_Provider(): PrivateScope, Public, HideBySig, SpecialName
    op_Equality(CngProvider, CngProvider): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(CngProvider, CngProvider): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(CngProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    get_MicrosoftSmartCardKeyStorageProvider(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MicrosoftSoftwareKeyStorageProvider(): PrivateScope, Public, Static, HideBySig, SpecialName
Class System.Security.Cryptography.CngUIPolicy: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
    Void .ctor(System.Security.Cryptography.CngUIProtectionLevels): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Cryptography.CngUIProtectionLevels, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Cryptography.CngUIProtectionLevels, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Cryptography.CngUIProtectionLevels, System.String, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Cryptography.CngUIProtectionLevels, System.String, System.String, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String CreationTitle 'get ' : 
    System.String Description 'get ' : 
    System.String FriendlyName 'get ' : 
    System.Security.Cryptography.CngUIProtectionLevels ProtectionLevel 'get ' : 
    System.String UseContext 'get ' : 
  Methods:
    get_CreationTitle(): PrivateScope, Public, HideBySig, SpecialName
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    get_FriendlyName(): PrivateScope, Public, HideBySig, SpecialName
    get_ProtectionLevel(): PrivateScope, Public, HideBySig, SpecialName
    get_UseContext(): PrivateScope, Public, HideBySig, SpecialName
Class System.Security.Cryptography.ECDiffieHellman: AutoLayout, AnsiClass, Class, Public, Abstract, HasSecurity, BeforeFieldInit
  :System.Security.Cryptography.AsymmetricAlgorithm
  Properties:
    System.String KeyExchangeAlgorithm 'get ' : 
    System.String SignatureAlgorithm 'get ' : 
    System.Security.Cryptography.ECDiffieHellmanPublicKey PublicKey 'get ' : 
  Methods:
    get_KeyExchangeAlgorithm(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_SignatureAlgorithm(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Create(): PrivateScope, Public, Static, HideBySig
    Create(String): PrivateScope, Public, Static, HideBySig
    get_PublicKey(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    DeriveKeyMaterial(ECDiffieHellmanPublicKey): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class System.Security.Cryptography.ECDiffieHellmanPublicKey: AutoLayout, AnsiClass, Class, Public, Abstract, Serializable, HasSecurity, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToByteArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToXmlString(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction Hash = 0 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction Hmac = 1 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction Tls = 2 : Public, Static, Literal, HasDefault
Class System.Security.Cryptography.ECDiffieHellmanCng: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Security.Cryptography.ECDiffieHellman
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Cryptography.CngKey): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.Cryptography.CngAlgorithm HashAlgorithm 'get set' : 
    Byte[] HmacKey 'get set' : 
    System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction KeyDerivationFunction 'get set' : 
    Byte[] Label 'get set' : 
    Byte[] SecretAppend 'get set' : 
    Byte[] SecretPrepend 'get set' : 
    Byte[] Seed 'get set' : 
    System.Security.Cryptography.CngKey Key 'get set' : 
    System.Security.Cryptography.ECDiffieHellmanPublicKey PublicKey 'get ' : 
    Boolean UseSecretAgreementAsHmacKey 'get ' : 
  Methods:
    get_HashAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    set_HashAlgorithm(CngAlgorithm): PrivateScope, Public, HideBySig, SpecialName
    get_HmacKey(): PrivateScope, Public, HideBySig, SpecialName
    set_HmacKey(Byte[]): PrivateScope, Public, HideBySig, SpecialName
    get_KeyDerivationFunction(): PrivateScope, Public, HideBySig, SpecialName
    set_KeyDerivationFunction(ECDiffieHellmanKeyDerivationFunction): PrivateScope, Public, HideBySig, SpecialName
    get_Label(): PrivateScope, Public, HideBySig, SpecialName
    set_Label(Byte[]): PrivateScope, Public, HideBySig, SpecialName
    get_SecretAppend(): PrivateScope, Public, HideBySig, SpecialName
    set_SecretAppend(Byte[]): PrivateScope, Public, HideBySig, SpecialName
    get_SecretPrepend(): PrivateScope, Public, HideBySig, SpecialName
    set_SecretPrepend(Byte[]): PrivateScope, Public, HideBySig, SpecialName
    get_Seed(): PrivateScope, Public, HideBySig, SpecialName
    set_Seed(Byte[]): PrivateScope, Public, HideBySig, SpecialName
    get_Key(): PrivateScope, Public, HideBySig, SpecialName
    get_PublicKey(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_UseSecretAgreementAsHmacKey(): PrivateScope, Public, HideBySig, SpecialName
    DeriveKeyMaterial(ECDiffieHellmanPublicKey): PrivateScope, Public, Virtual, HideBySig
    DeriveKeyMaterial(CngKey): PrivateScope, Public, HideBySig
    DeriveSecretAgreementHandle(ECDiffieHellmanPublicKey): PrivateScope, Public, HideBySig
    DeriveSecretAgreementHandle(CngKey): PrivateScope, Public, HideBySig, HasSecurity
    FromXmlString(String): PrivateScope, Public, Virtual, HideBySig
    FromXmlString(String, ECKeyXmlFormat): PrivateScope, Public, HideBySig
    ToXmlString(Boolean): PrivateScope, Public, Virtual, HideBySig
    ToXmlString(ECKeyXmlFormat): PrivateScope, Public, HideBySig
Class System.Security.Cryptography.ECDiffieHellmanCngPublicKey: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, HasSecurity, BeforeFieldInit
  :System.Security.Cryptography.ECDiffieHellmanPublicKey
  Properties:
    System.Security.Cryptography.CngKeyBlobFormat BlobFormat 'get ' : 
  Methods:
    get_BlobFormat(): PrivateScope, Public, HideBySig, SpecialName
    FromByteArray(Byte[], CngKeyBlobFormat): PrivateScope, Public, Static, HideBySig
    FromXmlString(String): PrivateScope, Public, Static, HideBySig
    Import(): PrivateScope, Public, HideBySig
    ToXmlString(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Cryptography.ECDsa: AutoLayout, AnsiClass, Class, Public, Abstract, HasSecurity, BeforeFieldInit
  :System.Security.Cryptography.AsymmetricAlgorithm
  Properties:
    System.String KeyExchangeAlgorithm 'get ' : 
    System.String SignatureAlgorithm 'get ' : 
  Methods:
    get_KeyExchangeAlgorithm(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_SignatureAlgorithm(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Create(): PrivateScope, Public, Static, HideBySig
    Create(String): PrivateScope, Public, Static, HideBySig
    SignHash(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    VerifyHash(Byte[], Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class System.Security.Cryptography.ECDsaCng: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Security.Cryptography.ECDsa
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Cryptography.CngKey): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.Cryptography.CngAlgorithm HashAlgorithm 'get set' : 
    System.Security.Cryptography.CngKey Key 'get set' : 
  Methods:
    get_HashAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    set_HashAlgorithm(CngAlgorithm): PrivateScope, Public, HideBySig, SpecialName
    get_Key(): PrivateScope, Public, HideBySig, SpecialName
    FromXmlString(String): PrivateScope, Public, Virtual, HideBySig
    FromXmlString(String, ECKeyXmlFormat): PrivateScope, Public, HideBySig
    SignData(Byte[]): PrivateScope, Public, HideBySig
    SignData(Byte[], Int32, Int32): PrivateScope, Public, HideBySig
    SignData(Stream): PrivateScope, Public, HideBySig
    SignHash(Byte[]): PrivateScope, Public, Virtual, HideBySig
    ToXmlString(Boolean): PrivateScope, Public, Virtual, HideBySig
    ToXmlString(ECKeyXmlFormat): PrivateScope, Public, HideBySig
    VerifyData(Byte[], Byte[]): PrivateScope, Public, HideBySig
    VerifyData(Byte[], Int32, Int32, Byte[]): PrivateScope, Public, HideBySig
    VerifyData(Stream, Byte[]): PrivateScope, Public, HideBySig
    VerifyHash(Byte[], Byte[]): PrivateScope, Public, Virtual, HideBySig
Struct System.Security.Cryptography.ECKeyXmlFormat: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Cryptography.ECKeyXmlFormat Rfc4050 = 0 : Public, Static, Literal, HasDefault
Class System.Security.Cryptography.ManifestSignatureInformation: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  Properties:
    System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation AuthenticodeSignature 'get ' : 
    System.Security.ManifestKinds Manifest 'get ' : 
    System.Security.Cryptography.StrongNameSignatureInformation StrongNameSignature 'get ' : 
  Methods:
    get_AuthenticodeSignature(): PrivateScope, Public, HideBySig, SpecialName
    get_Manifest(): PrivateScope, Public, HideBySig, SpecialName
    get_StrongNameSignature(): PrivateScope, Public, HideBySig, SpecialName
    VerifySignature(ActivationContext): PrivateScope, Public, Static, HideBySig
    VerifySignature(ActivationContext, ManifestKinds): PrivateScope, Public, Static, HideBySig
    VerifySignature(ActivationContext, ManifestKinds, X509RevocationFlag, X509RevocationMode): PrivateScope, Public, Static, HideBySig
Class System.Security.Cryptography.ManifestSignatureInformationCollection: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Collections.ObjectModel.ReadOnlyCollection`1[System.Security.Cryptography.ManifestSignatureInformation]
Class System.Security.Cryptography.MD5Cng: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Security.Cryptography.MD5
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Initialize(): PrivateScope, Public, Virtual, HideBySig
Struct System.Security.Cryptography.CngExportPolicies: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Cryptography.CngExportPolicies None = 0 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CngExportPolicies AllowExport = 1 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CngExportPolicies AllowPlaintextExport = 2 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CngExportPolicies AllowArchiving = 4 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CngExportPolicies AllowPlaintextArchiving = 8 : Public, Static, Literal, HasDefault
Struct System.Security.Cryptography.CngKeyCreationOptions: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Cryptography.CngKeyCreationOptions None = 0 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CngKeyCreationOptions MachineKey = 32 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CngKeyCreationOptions OverwriteExistingKey = 128 : Public, Static, Literal, HasDefault
Struct System.Security.Cryptography.CngKeyOpenOptions: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Cryptography.CngKeyOpenOptions None = 0 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CngKeyOpenOptions UserKey = 0 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CngKeyOpenOptions MachineKey = 32 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CngKeyOpenOptions Silent = 64 : Public, Static, Literal, HasDefault
Struct System.Security.Cryptography.CngKeyUsages: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Cryptography.CngKeyUsages None = 0 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CngKeyUsages Decryption = 1 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CngKeyUsages Signing = 2 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CngKeyUsages KeyAgreement = 4 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CngKeyUsages AllUsages = 16777215 : Public, Static, Literal, HasDefault
Struct System.Security.Cryptography.CngPropertyOptions: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Cryptography.CngPropertyOptions None = 0 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CngPropertyOptions CustomProperty = 1073741824 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CngPropertyOptions Persist = -2147483648 : Public, Static, Literal, HasDefault
Struct System.Security.Cryptography.CngUIProtectionLevels: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Cryptography.CngUIProtectionLevels None = 0 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CngUIProtectionLevels ProtectKey = 1 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CngUIProtectionLevels ForceHighProtection = 2 : Public, Static, Literal, HasDefault
Class System.Security.Cryptography.SHA1Cng: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Security.Cryptography.SHA1
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Initialize(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Cryptography.SHA256Cng: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Security.Cryptography.SHA256
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Initialize(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Cryptography.SHA256CryptoServiceProvider: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Security.Cryptography.SHA256
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Initialize(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Cryptography.SHA384Cng: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Security.Cryptography.SHA384
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Initialize(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Cryptography.SHA384CryptoServiceProvider: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Security.Cryptography.SHA384
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Initialize(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Cryptography.SHA512Cng: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Security.Cryptography.SHA512
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Initialize(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Cryptography.SHA512CryptoServiceProvider: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Security.Cryptography.SHA512
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Initialize(): PrivateScope, Public, Virtual, HideBySig
Struct System.Security.Cryptography.SignatureVerificationResult: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Cryptography.SignatureVerificationResult Valid = 0 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult AssemblyIdentityMismatch = 1 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult ContainingSignatureInvalid = 2 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult PublicKeyTokenMismatch = 3 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult PublisherMismatch = 4 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult SystemError = -2146869247 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult InvalidSignerCertificate = -2146869246 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult InvalidCountersignature = -2146869245 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult InvalidCertificateSignature = -2146869244 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult InvalidTimestamp = -2146869243 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult BadDigest = -2146869232 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult BasicConstraintsNotObserved = -2146869223 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult UnknownTrustProvider = -2146762751 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult UnknownVerificationAction = -2146762750 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult BadSignatureFormat = -2146762749 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult CertificateNotExplicitlyTrusted = -2146762748 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult MissingSignature = -2146762496 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult CertificateExpired = -2146762495 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult InvalidTimePeriodNesting = -2146762494 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult InvalidCertificateRole = -2146762493 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult PathLengthConstraintViolated = -2146762492 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult UnknownCriticalExtension = -2146762491 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult CertificateUsageNotAllowed = -2146762490 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult IssuerChainingError = -2146762489 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult CertificateMalformed = -2146762488 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult UntrustedRootCertificate = -2146762487 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult CouldNotBuildChain = -2146762486 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult GenericTrustFailure = -2146762485 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult CertificateRevoked = -2146762484 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult UntrustedTestRootCertificate = -2146762483 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult RevocationCheckFailure = -2146762482 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult InvalidCertificateUsage = -2146762480 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult CertificateExplicitlyDistrusted = -2146762479 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult UntrustedCertificationAuthority = -2146762478 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult InvalidCertificatePolicy = -2146762477 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult InvalidCertificateName = -2146762476 : Public, Static, Literal, HasDefault
Class System.Security.Cryptography.StrongNameSignatureInformation: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  Properties:
    System.String HashAlgorithm 'get ' : 
    Int32 HResult 'get ' : 
    Boolean IsValid 'get ' : 
    System.Security.Cryptography.AsymmetricAlgorithm PublicKey 'get ' : 
    System.Security.Cryptography.SignatureVerificationResult VerificationResult 'get ' : 
  Methods:
    get_HashAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_HResult(): PrivateScope, Public, HideBySig, SpecialName
    get_IsValid(): PrivateScope, Public, HideBySig, SpecialName
    get_PublicKey(): PrivateScope, Public, HideBySig, SpecialName
    get_VerificationResult(): PrivateScope, Public, HideBySig, SpecialName
Class System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  Properties:
    System.String Description 'get ' : 
    System.Uri DescriptionUrl 'get ' : 
    System.String HashAlgorithm 'get ' : 
    Int32 HResult 'get ' : 
    System.Security.Cryptography.X509Certificates.X509Chain SignatureChain 'get ' : 
    System.Security.Cryptography.X509Certificates.X509Certificate2 SigningCertificate 'get ' : 
    System.Security.Cryptography.X509Certificates.TimestampInformation Timestamp 'get ' : 
    System.Security.Cryptography.X509Certificates.TrustStatus TrustStatus 'get ' : 
    System.Security.Cryptography.SignatureVerificationResult VerificationResult 'get ' : 
  Methods:
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    get_DescriptionUrl(): PrivateScope, Public, HideBySig, SpecialName
    get_HashAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_HResult(): PrivateScope, Public, HideBySig, SpecialName
    get_SignatureChain(): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
    get_SigningCertificate(): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
    get_Timestamp(): PrivateScope, Public, HideBySig, SpecialName
    get_TrustStatus(): PrivateScope, Public, HideBySig, SpecialName
    get_VerificationResult(): PrivateScope, Public, HideBySig, SpecialName
Class System.Security.Cryptography.X509Certificates.TimestampInformation: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  Properties:
    System.String HashAlgorithm 'get ' : 
    Int32 HResult 'get ' : 
    Boolean IsValid 'get ' : 
    System.Security.Cryptography.X509Certificates.X509Chain SignatureChain 'get ' : 
    System.Security.Cryptography.X509Certificates.X509Certificate2 SigningCertificate 'get ' : 
    System.DateTime Timestamp 'get ' : 
    System.Security.Cryptography.SignatureVerificationResult VerificationResult 'get ' : 
  Methods:
    get_HashAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_HResult(): PrivateScope, Public, HideBySig, SpecialName
    get_IsValid(): PrivateScope, Public, HideBySig, SpecialName
    get_SignatureChain(): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
    get_SigningCertificate(): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
    get_Timestamp(): PrivateScope, Public, HideBySig, SpecialName
    get_VerificationResult(): PrivateScope, Public, HideBySig, SpecialName
Struct System.Security.Cryptography.X509Certificates.TrustStatus: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Cryptography.X509Certificates.TrustStatus Untrusted = 0 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.X509Certificates.TrustStatus UnknownIdentity = 1 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.X509Certificates.TrustStatus KnownIdentity = 2 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.X509Certificates.TrustStatus Trusted = 3 : Public, Static, Literal, HasDefault
Class Microsoft.Win32.SafeHandles.SafePipeHandle: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
    Void .ctor(IntPtr, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Runtime.CompilerServices.CallSiteBinder: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    System.Linq.Expressions.LabelTarget UpdateLabel 'get ' : 
  Methods:
    get_UpdateLabel(): PrivateScope, Public, Static, HideBySig, SpecialName
    Bind(Object[], ReadOnlyCollection`1, LabelTarget): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    BindDelegate(CallSite`1, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Dynamic.DynamicMetaObjectBinder: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Runtime.CompilerServices.CallSiteBinder
  Properties:
    System.Type ReturnType 'get ' : 
  Methods:
    get_ReturnType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Bind(Object[], ReadOnlyCollection`1, LabelTarget): PrivateScope, Public, Final, Virtual, HideBySig
    Bind(DynamicMetaObject, DynamicMetaObject[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetUpdateExpression(Type): PrivateScope, Public, HideBySig
    Defer(DynamicMetaObject, DynamicMetaObject[]): PrivateScope, Public, HideBySig
    Defer(DynamicMetaObject[]): PrivateScope, Public, HideBySig
Class System.Dynamic.BinaryOperationBinder: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Dynamic.DynamicMetaObjectBinder
  Properties:
    System.Type ReturnType 'get ' : 
    System.Linq.Expressions.ExpressionType Operation 'get ' : 
  Methods:
    get_ReturnType(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Operation(): PrivateScope, Public, HideBySig, SpecialName
    FallbackBinaryOperation(DynamicMetaObject, DynamicMetaObject): PrivateScope, Public, HideBySig
    FallbackBinaryOperation(DynamicMetaObject, DynamicMetaObject, DynamicMetaObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Bind(DynamicMetaObject, DynamicMetaObject[]): PrivateScope, Public, Final, Virtual, HideBySig
Class System.Dynamic.BindingRestrictions: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    System.Dynamic.BindingRestrictions Empty : Public, Static, InitOnly
  Methods:
    Merge(BindingRestrictions): PrivateScope, Public, HideBySig
    GetTypeRestriction(Expression, Type): PrivateScope, Public, Static, HideBySig
    GetInstanceRestriction(Expression, Object): PrivateScope, Public, Static, HideBySig
    GetExpressionRestriction(Expression): PrivateScope, Public, Static, HideBySig
    Combine(IList`1): PrivateScope, Public, Static, HideBySig
    ToExpression(): PrivateScope, Public, HideBySig
Class System.Dynamic.CallInfo: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(Int32, System.String[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, System.Collections.Generic.IEnumerable`1[System.String]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 ArgumentCount 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.String] ArgumentNames 'get ' : 
  Methods:
    get_ArgumentCount(): PrivateScope, Public, HideBySig, SpecialName
    get_ArgumentNames(): PrivateScope, Public, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
Class System.Runtime.CompilerServices.CallSite: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Properties:
    System.Runtime.CompilerServices.CallSiteBinder Binder 'get ' : 
  Methods:
    get_Binder(): PrivateScope, Public, HideBySig, SpecialName
    Create(Type, CallSiteBinder): PrivateScope, Public, Static, HideBySig
Class System.Runtime.CompilerServices.CallSite`1[T]: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Type parameter: T,  ReferenceType
  :System.Runtime.CompilerServices.CallSite
  Fields:
    T Target : Public
  Properties:
    T Update   'get ' : 
  Methods:
    get_Update(): PrivateScope, Public, HideBySig, SpecialName
    Create(CallSiteBinder): PrivateScope, Public, Static, HideBySig
Class System.Runtime.CompilerServices.CallSiteHelpers: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    IsInternalFrame(MethodBase): PrivateScope, Public, Static, HideBySig
Class System.Runtime.CompilerServices.CallSiteOps: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    CreateMatchmaker(CallSite`1): PrivateScope, Public, Static, HideBySig (Obsolete)
    SetNotMatched(CallSite): PrivateScope, Public, Static, HideBySig (Obsolete)
    GetMatch(CallSite): PrivateScope, Public, Static, HideBySig (Obsolete)
    ClearMatch(CallSite): PrivateScope, Public, Static, HideBySig (Obsolete)
    AddRule(CallSite`1, T): PrivateScope, Public, Static, HideBySig (Obsolete)
    UpdateRules(CallSite`1, Int32): PrivateScope, Public, Static, HideBySig (Obsolete)
    GetRules(CallSite`1): PrivateScope, Public, Static, HideBySig (Obsolete)
    GetRuleCache(CallSite`1): PrivateScope, Public, Static, HideBySig (Obsolete)
    MoveRule(RuleCache`1, T, Int32): PrivateScope, Public, Static, HideBySig (Obsolete)
    GetCachedRules(RuleCache`1): PrivateScope, Public, Static, HideBySig (Obsolete)
    Bind(CallSiteBinder, CallSite`1, Object[]): PrivateScope, Public, Static, HideBySig (Obsolete)
Class System.Dynamic.ConvertBinder: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Dynamic.DynamicMetaObjectBinder
  Properties:
    System.Type Type 'get ' : 
    Boolean Explicit 'get ' : 
    System.Type ReturnType 'get ' : 
  Methods:
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    get_Explicit(): PrivateScope, Public, HideBySig, SpecialName
    FallbackConvert(DynamicMetaObject): PrivateScope, Public, HideBySig
    FallbackConvert(DynamicMetaObject, DynamicMetaObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Bind(DynamicMetaObject, DynamicMetaObject[]): PrivateScope, Public, Final, Virtual, HideBySig
    get_ReturnType(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
Class System.Dynamic.CreateInstanceBinder: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Dynamic.DynamicMetaObjectBinder
  Properties:
    System.Type ReturnType 'get ' : 
    System.Dynamic.CallInfo CallInfo 'get ' : 
  Methods:
    get_ReturnType(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_CallInfo(): PrivateScope, Public, HideBySig, SpecialName
    FallbackCreateInstance(DynamicMetaObject, DynamicMetaObject[]): PrivateScope, Public, HideBySig
    FallbackCreateInstance(DynamicMetaObject, DynamicMetaObject[], DynamicMetaObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Bind(DynamicMetaObject, DynamicMetaObject[]): PrivateScope, Public, Final, Virtual, HideBySig
Class System.Dynamic.DeleteIndexBinder: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Dynamic.DynamicMetaObjectBinder
  Properties:
    System.Type ReturnType 'get ' : 
    System.Dynamic.CallInfo CallInfo 'get ' : 
  Methods:
    get_ReturnType(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_CallInfo(): PrivateScope, Public, HideBySig, SpecialName
    Bind(DynamicMetaObject, DynamicMetaObject[]): PrivateScope, Public, Final, Virtual, HideBySig
    FallbackDeleteIndex(DynamicMetaObject, DynamicMetaObject[]): PrivateScope, Public, HideBySig
    FallbackDeleteIndex(DynamicMetaObject, DynamicMetaObject[], DynamicMetaObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class System.Dynamic.DeleteMemberBinder: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Dynamic.DynamicMetaObjectBinder
  Properties:
    System.String Name 'get ' : 
    Boolean IgnoreCase 'get ' : 
    System.Type ReturnType 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_IgnoreCase(): PrivateScope, Public, HideBySig, SpecialName
    get_ReturnType(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    FallbackDeleteMember(DynamicMetaObject): PrivateScope, Public, HideBySig
    FallbackDeleteMember(DynamicMetaObject, DynamicMetaObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Bind(DynamicMetaObject, DynamicMetaObject[]): PrivateScope, Public, Final, Virtual, HideBySig
Class System.Dynamic.DynamicMetaObject: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Linq.Expressions.Expression, System.Dynamic.BindingRestrictions): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Linq.Expressions.Expression, System.Dynamic.BindingRestrictions, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Dynamic.DynamicMetaObject[] EmptyMetaObjects : Public, Static, InitOnly
  Properties:
    System.Linq.Expressions.Expression Expression 'get ' : 
    System.Dynamic.BindingRestrictions Restrictions 'get ' : 
    System.Object Value 'get ' : 
    Boolean HasValue 'get ' : 
    System.Type RuntimeType 'get ' : 
    System.Type LimitType 'get ' : 
  Methods:
    get_Expression(): PrivateScope, Public, HideBySig, SpecialName
    get_Restrictions(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    get_HasValue(): PrivateScope, Public, HideBySig, SpecialName
    get_RuntimeType(): PrivateScope, Public, HideBySig, SpecialName
    get_LimitType(): PrivateScope, Public, HideBySig, SpecialName
    BindConvert(ConvertBinder): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BindGetMember(GetMemberBinder): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BindSetMember(SetMemberBinder, DynamicMetaObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BindDeleteMember(DeleteMemberBinder): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BindGetIndex(GetIndexBinder, DynamicMetaObject[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BindSetIndex(SetIndexBinder, DynamicMetaObject[], DynamicMetaObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BindDeleteIndex(DeleteIndexBinder, DynamicMetaObject[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BindInvokeMember(InvokeMemberBinder, DynamicMetaObject[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BindInvoke(InvokeBinder, DynamicMetaObject[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BindCreateInstance(CreateInstanceBinder, DynamicMetaObject[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BindUnaryOperation(UnaryOperationBinder): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BindBinaryOperation(BinaryOperationBinder, DynamicMetaObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetDynamicMemberNames(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Create(Object, Expression): PrivateScope, Public, Static, HideBySig
Interface System.Dynamic.IDynamicMetaObjectProvider: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetMetaObject(Expression): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class System.Dynamic.DynamicObject: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Interfaces:
    System.Dynamic.IDynamicMetaObjectProvider
  Methods:
    TryGetMember(GetMemberBinder, Object&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TrySetMember(SetMemberBinder, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TryDeleteMember(DeleteMemberBinder): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TryInvokeMember(InvokeMemberBinder, Object[], Object&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TryConvert(ConvertBinder, Object&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TryCreateInstance(CreateInstanceBinder, Object[], Object&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TryInvoke(InvokeBinder, Object[], Object&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TryBinaryOperation(BinaryOperationBinder, Object, Object&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TryUnaryOperation(UnaryOperationBinder, Object&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TryGetIndex(GetIndexBinder, Object[], Object&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TrySetIndex(SetIndexBinder, Object[], Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TryDeleteIndex(DeleteIndexBinder, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetDynamicMemberNames(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMetaObject(Expression): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Dynamic.GetMemberBinder: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Dynamic.DynamicMetaObjectBinder
  Properties:
    System.Type ReturnType 'get ' : 
    System.String Name 'get ' : 
    Boolean IgnoreCase 'get ' : 
  Methods:
    get_ReturnType(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_IgnoreCase(): PrivateScope, Public, HideBySig, SpecialName
    FallbackGetMember(DynamicMetaObject): PrivateScope, Public, HideBySig
    FallbackGetMember(DynamicMetaObject, DynamicMetaObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Bind(DynamicMetaObject, DynamicMetaObject[]): PrivateScope, Public, Final, Virtual, HideBySig
Class System.Dynamic.ExpandoObject: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Dynamic.IDynamicMetaObjectProvider
    System.Collections.Generic.IDictionary`2[System.String,System.Object]
    System.Collections.Generic.ICollection`1[System.Collections.Generic.KeyValuePair`2[System.String,System.Object]]
    System.Collections.Generic.IEnumerable`1[System.Collections.Generic.KeyValuePair`2[System.String,System.Object]]
    System.Collections.IEnumerable
    System.ComponentModel.INotifyPropertyChanged
Class System.Runtime.CompilerServices.RuntimeOps: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    ExpandoTryGetValue(ExpandoObject, Object, Int32, String, Boolean, Object&(Out)): PrivateScope, Public, Static, HideBySig (Obsolete)
    ExpandoTrySetValue(ExpandoObject, Object, Int32, Object, String, Boolean): PrivateScope, Public, Static, HideBySig (Obsolete)
    ExpandoTryDeleteValue(ExpandoObject, Object, Int32, String, Boolean): PrivateScope, Public, Static, HideBySig (Obsolete)
    ExpandoCheckVersion(ExpandoObject, Object): PrivateScope, Public, Static, HideBySig (Obsolete)
    ExpandoPromoteClass(ExpandoObject, Object, Object): PrivateScope, Public, Static, HideBySig (Obsolete)
    Quote(Expression, Object, Object[]): PrivateScope, Public, Static, HideBySig (Obsolete)
    MergeRuntimeVariables(IRuntimeVariables, IRuntimeVariables, Int32[]): PrivateScope, Public, Static, HideBySig (Obsolete)
    CreateRuntimeVariables(Object[], Int64[]): PrivateScope, Public, Static, HideBySig (Obsolete)
    CreateRuntimeVariables(): PrivateScope, Public, Static, HideBySig (Obsolete)
Class System.Linq.Expressions.ExpressionVisitor: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Methods:
    Visit(Expression): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(ReadOnlyCollection`1): PrivateScope, Public, HideBySig
    Visit(ReadOnlyCollection`1, Func`2): PrivateScope, Public, Static, HideBySig
    VisitAndConvert(T, String): PrivateScope, Public, HideBySig
    VisitAndConvert(ReadOnlyCollection`1, String): PrivateScope, Public, HideBySig
Interface System.Runtime.CompilerServices.IRuntimeVariables: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Int32 Count 'get ' : 
    System.Object Item [Int32] 'get set' : 
  Methods:
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Item(Int32, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class System.Dynamic.GetIndexBinder: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Dynamic.DynamicMetaObjectBinder
  Properties:
    System.Type ReturnType 'get ' : 
    System.Dynamic.CallInfo CallInfo 'get ' : 
  Methods:
    get_ReturnType(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_CallInfo(): PrivateScope, Public, HideBySig, SpecialName
    Bind(DynamicMetaObject, DynamicMetaObject[]): PrivateScope, Public, Final, Virtual, HideBySig
    FallbackGetIndex(DynamicMetaObject, DynamicMetaObject[]): PrivateScope, Public, HideBySig
    FallbackGetIndex(DynamicMetaObject, DynamicMetaObject[], DynamicMetaObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface System.Dynamic.IInvokeOnGetBinder: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Boolean InvokeOnGet 'get ' : 
  Methods:
    get_InvokeOnGet(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class System.Dynamic.InvokeBinder: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Dynamic.DynamicMetaObjectBinder
  Properties:
    System.Type ReturnType 'get ' : 
    System.Dynamic.CallInfo CallInfo 'get ' : 
  Methods:
    get_ReturnType(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_CallInfo(): PrivateScope, Public, HideBySig, SpecialName
    FallbackInvoke(DynamicMetaObject, DynamicMetaObject[]): PrivateScope, Public, HideBySig
    FallbackInvoke(DynamicMetaObject, DynamicMetaObject[], DynamicMetaObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Bind(DynamicMetaObject, DynamicMetaObject[]): PrivateScope, Public, Final, Virtual, HideBySig
Class System.Dynamic.InvokeMemberBinder: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Dynamic.DynamicMetaObjectBinder
  Properties:
    System.Type ReturnType 'get ' : 
    System.String Name 'get ' : 
    Boolean IgnoreCase 'get ' : 
    System.Dynamic.CallInfo CallInfo 'get ' : 
  Methods:
    get_ReturnType(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_IgnoreCase(): PrivateScope, Public, HideBySig, SpecialName
    get_CallInfo(): PrivateScope, Public, HideBySig, SpecialName
    Bind(DynamicMetaObject, DynamicMetaObject[]): PrivateScope, Public, Final, Virtual, HideBySig
    FallbackInvokeMember(DynamicMetaObject, DynamicMetaObject[]): PrivateScope, Public, HideBySig
    FallbackInvokeMember(DynamicMetaObject, DynamicMetaObject[], DynamicMetaObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FallbackInvoke(DynamicMetaObject, DynamicMetaObject[], DynamicMetaObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class System.Runtime.CompilerServices.RuleCache`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T,  ReferenceType
Class System.Dynamic.SetIndexBinder: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Dynamic.DynamicMetaObjectBinder
  Properties:
    System.Type ReturnType 'get ' : 
    System.Dynamic.CallInfo CallInfo 'get ' : 
  Methods:
    get_ReturnType(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_CallInfo(): PrivateScope, Public, HideBySig, SpecialName
    Bind(DynamicMetaObject, DynamicMetaObject[]): PrivateScope, Public, Final, Virtual, HideBySig
    FallbackSetIndex(DynamicMetaObject, DynamicMetaObject[], DynamicMetaObject): PrivateScope, Public, HideBySig
    FallbackSetIndex(DynamicMetaObject, DynamicMetaObject[], DynamicMetaObject, DynamicMetaObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class System.Dynamic.SetMemberBinder: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Dynamic.DynamicMetaObjectBinder
  Properties:
    System.Type ReturnType 'get ' : 
    System.String Name 'get ' : 
    Boolean IgnoreCase 'get ' : 
  Methods:
    get_ReturnType(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_IgnoreCase(): PrivateScope, Public, HideBySig, SpecialName
    Bind(DynamicMetaObject, DynamicMetaObject[]): PrivateScope, Public, Final, Virtual, HideBySig
    FallbackSetMember(DynamicMetaObject, DynamicMetaObject): PrivateScope, Public, HideBySig
    FallbackSetMember(DynamicMetaObject, DynamicMetaObject, DynamicMetaObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class System.Dynamic.UnaryOperationBinder: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Dynamic.DynamicMetaObjectBinder
  Properties:
    System.Type ReturnType 'get ' : 
    System.Linq.Expressions.ExpressionType Operation 'get ' : 
  Methods:
    get_ReturnType(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Operation(): PrivateScope, Public, HideBySig, SpecialName
    FallbackUnaryOperation(DynamicMetaObject): PrivateScope, Public, HideBySig
    FallbackUnaryOperation(DynamicMetaObject, DynamicMetaObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Bind(DynamicMetaObject, DynamicMetaObject[]): PrivateScope, Public, Final, Virtual, HideBySig
Class System.Linq.Expressions.Expression: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    System.Linq.Expressions.ExpressionType NodeType 'get ' : 
    System.Type Type 'get ' : 
    Boolean CanReduce 'get ' : 
  Methods:
    New(Type): PrivateScope, Public, Static, HideBySig
    Parameter(Type): PrivateScope, Public, Static, HideBySig
    Variable(Type): PrivateScope, Public, Static, HideBySig
    Parameter(Type, String): PrivateScope, Public, Static, HideBySig
    Variable(Type, String): PrivateScope, Public, Static, HideBySig
    RuntimeVariables(ParameterExpression[]): PrivateScope, Public, Static, HideBySig
    RuntimeVariables(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    SwitchCase(Expression, Expression[]): PrivateScope, Public, Static, HideBySig
    SwitchCase(Expression, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Switch(Expression, SwitchCase[]): PrivateScope, Public, Static, HideBySig
    Switch(Expression, Expression, SwitchCase[]): PrivateScope, Public, Static, HideBySig
    Switch(Expression, Expression, MethodInfo, SwitchCase[]): PrivateScope, Public, Static, HideBySig
    Switch(Type, Expression, Expression, MethodInfo, SwitchCase[]): PrivateScope, Public, Static, HideBySig
    Switch(Expression, Expression, MethodInfo, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Switch(Type, Expression, Expression, MethodInfo, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    SymbolDocument(String): PrivateScope, Public, Static, HideBySig
    SymbolDocument(String, Guid): PrivateScope, Public, Static, HideBySig
    SymbolDocument(String, Guid, Guid): PrivateScope, Public, Static, HideBySig
    SymbolDocument(String, Guid, Guid, Guid): PrivateScope, Public, Static, HideBySig
    TryFault(Expression, Expression): PrivateScope, Public, Static, HideBySig
    TryFinally(Expression, Expression): PrivateScope, Public, Static, HideBySig
    TryCatch(Expression, CatchBlock[]): PrivateScope, Public, Static, HideBySig
    TryCatchFinally(Expression, Expression, CatchBlock[]): PrivateScope, Public, Static, HideBySig
    MakeTry(Type, Expression, Expression, Expression, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    TypeIs(Expression, Type): PrivateScope, Public, Static, HideBySig
    TypeEqual(Expression, Type): PrivateScope, Public, Static, HideBySig
    MakeUnary(ExpressionType, Expression, Type): PrivateScope, Public, Static, HideBySig
    MakeUnary(ExpressionType, Expression, Type, MethodInfo): PrivateScope, Public, Static, HideBySig
    Negate(Expression): PrivateScope, Public, Static, HideBySig
    Negate(Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    UnaryPlus(Expression): PrivateScope, Public, Static, HideBySig
    UnaryPlus(Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    NegateChecked(Expression): PrivateScope, Public, Static, HideBySig
    NegateChecked(Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    Not(Expression): PrivateScope, Public, Static, HideBySig
    Not(Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    IsFalse(Expression): PrivateScope, Public, Static, HideBySig
    IsFalse(Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    IsTrue(Expression): PrivateScope, Public, Static, HideBySig
    IsTrue(Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    OnesComplement(Expression): PrivateScope, Public, Static, HideBySig
    OnesComplement(Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    TypeAs(Expression, Type): PrivateScope, Public, Static, HideBySig
    Unbox(Expression, Type): PrivateScope, Public, Static, HideBySig
    Convert(Expression, Type): PrivateScope, Public, Static, HideBySig
    Convert(Expression, Type, MethodInfo): PrivateScope, Public, Static, HideBySig
    ConvertChecked(Expression, Type): PrivateScope, Public, Static, HideBySig
    ConvertChecked(Expression, Type, MethodInfo): PrivateScope, Public, Static, HideBySig
    ArrayLength(Expression): PrivateScope, Public, Static, HideBySig
    Quote(Expression): PrivateScope, Public, Static, HideBySig
    Rethrow(): PrivateScope, Public, Static, HideBySig
    Rethrow(Type): PrivateScope, Public, Static, HideBySig
    Throw(Expression): PrivateScope, Public, Static, HideBySig
    Throw(Expression, Type): PrivateScope, Public, Static, HideBySig
    Increment(Expression): PrivateScope, Public, Static, HideBySig
    Increment(Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    Decrement(Expression): PrivateScope, Public, Static, HideBySig
    Decrement(Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    PreIncrementAssign(Expression): PrivateScope, Public, Static, HideBySig
    PreIncrementAssign(Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    PreDecrementAssign(Expression): PrivateScope, Public, Static, HideBySig
    PreDecrementAssign(Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    PostIncrementAssign(Expression): PrivateScope, Public, Static, HideBySig
    PostIncrementAssign(Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    PostDecrementAssign(Expression): PrivateScope, Public, Static, HideBySig
    PostDecrementAssign(Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    Label(String): PrivateScope, Public, Static, HideBySig
    Label(Type): PrivateScope, Public, Static, HideBySig
    Label(Type, String): PrivateScope, Public, Static, HideBySig
    Lambda(Expression, ParameterExpression[]): PrivateScope, Public, Static, HideBySig
    Lambda(Expression, Boolean, ParameterExpression[]): PrivateScope, Public, Static, HideBySig
    Lambda(Expression, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Lambda(Expression, Boolean, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Lambda(Expression, String, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Lambda(Expression, String, Boolean, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Lambda(Expression, ParameterExpression[]): PrivateScope, Public, Static, HideBySig
    Lambda(Expression, Boolean, ParameterExpression[]): PrivateScope, Public, Static, HideBySig
    Lambda(Expression, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Lambda(Expression, Boolean, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Lambda(Type, Expression, ParameterExpression[]): PrivateScope, Public, Static, HideBySig
    Lambda(Type, Expression, Boolean, ParameterExpression[]): PrivateScope, Public, Static, HideBySig
    Lambda(Type, Expression, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Lambda(Type, Expression, Boolean, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Lambda(Expression, String, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Lambda(Expression, String, Boolean, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Lambda(Type, Expression, String, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Lambda(Type, Expression, String, Boolean, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    GetFuncType(Type[]): PrivateScope, Public, Static, HideBySig
    TryGetFuncType(Type[], Type&(Out)): PrivateScope, Public, Static, HideBySig
    GetActionType(Type[]): PrivateScope, Public, Static, HideBySig
    TryGetActionType(Type[], Type&(Out)): PrivateScope, Public, Static, HideBySig
    GetDelegateType(Type[]): PrivateScope, Public, Static, HideBySig
    ListInit(NewExpression, Expression[]): PrivateScope, Public, Static, HideBySig
    ListInit(NewExpression, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    ListInit(NewExpression, MethodInfo, Expression[]): PrivateScope, Public, Static, HideBySig
    ListInit(NewExpression, MethodInfo, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    ListInit(NewExpression, ElementInit[]): PrivateScope, Public, Static, HideBySig
    ListInit(NewExpression, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Loop(Expression): PrivateScope, Public, Static, HideBySig
    Loop(Expression, LabelTarget): PrivateScope, Public, Static, HideBySig
    Loop(Expression, LabelTarget, LabelTarget): PrivateScope, Public, Static, HideBySig
    Bind(MemberInfo, Expression): PrivateScope, Public, Static, HideBySig
    Bind(MethodInfo, Expression): PrivateScope, Public, Static, HideBySig
    Field(Expression, FieldInfo): PrivateScope, Public, Static, HideBySig
    Field(Expression, String): PrivateScope, Public, Static, HideBySig
    Field(Expression, Type, String): PrivateScope, Public, Static, HideBySig
    Property(Expression, String): PrivateScope, Public, Static, HideBySig
    Property(Expression, Type, String): PrivateScope, Public, Static, HideBySig
    Property(Expression, PropertyInfo): PrivateScope, Public, Static, HideBySig
    Property(Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    PropertyOrField(Expression, String): PrivateScope, Public, Static, HideBySig
    MakeMemberAccess(Expression, MemberInfo): PrivateScope, Public, Static, HideBySig
    MemberInit(NewExpression, MemberBinding[]): PrivateScope, Public, Static, HideBySig
    MemberInit(NewExpression, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    ListBind(MemberInfo, ElementInit[]): PrivateScope, Public, Static, HideBySig
    ListBind(MemberInfo, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    ListBind(MethodInfo, ElementInit[]): PrivateScope, Public, Static, HideBySig
    ListBind(MethodInfo, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    MemberBind(MemberInfo, MemberBinding[]): PrivateScope, Public, Static, HideBySig
    MemberBind(MemberInfo, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    MemberBind(MethodInfo, MemberBinding[]): PrivateScope, Public, Static, HideBySig
    MemberBind(MethodInfo, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Call(MethodInfo, Expression): PrivateScope, Public, Static, HideBySig
    Call(MethodInfo, Expression, Expression): PrivateScope, Public, Static, HideBySig
    Call(MethodInfo, Expression, Expression, Expression): PrivateScope, Public, Static, HideBySig
    Call(MethodInfo, Expression, Expression, Expression, Expression): PrivateScope, Public, Static, HideBySig
    Call(MethodInfo, Expression, Expression, Expression, Expression, Expression): PrivateScope, Public, Static, HideBySig
    Call(MethodInfo, Expression[]): PrivateScope, Public, Static, HideBySig
    Call(MethodInfo, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Call(Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    Call(Expression, MethodInfo, Expression[]): PrivateScope, Public, Static, HideBySig
    Call(Expression, MethodInfo, Expression, Expression): PrivateScope, Public, Static, HideBySig
    Call(Expression, MethodInfo, Expression, Expression, Expression): PrivateScope, Public, Static, HideBySig
    Call(Expression, String, Type[], Expression[]): PrivateScope, Public, Static, HideBySig
    Call(Type, String, Type[], Expression[]): PrivateScope, Public, Static, HideBySig
    Call(Expression, MethodInfo, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    ArrayIndex(Expression, Expression[]): PrivateScope, Public, Static, HideBySig
    ArrayIndex(Expression, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    NewArrayInit(Type, Expression[]): PrivateScope, Public, Static, HideBySig
    NewArrayInit(Type, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    NewArrayBounds(Type, Expression[]): PrivateScope, Public, Static, HideBySig
    NewArrayBounds(Type, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    New(ConstructorInfo): PrivateScope, Public, Static, HideBySig
    New(ConstructorInfo, Expression[]): PrivateScope, Public, Static, HideBySig
    New(ConstructorInfo, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    New(ConstructorInfo, IEnumerable`1, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    New(ConstructorInfo, IEnumerable`1, MemberInfo[]): PrivateScope, Public, Static, HideBySig
    ExclusiveOr(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    ExclusiveOrAssign(Expression, Expression): PrivateScope, Public, Static, HideBySig
    ExclusiveOrAssign(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    ExclusiveOrAssign(Expression, Expression, MethodInfo, LambdaExpression): PrivateScope, Public, Static, HideBySig
    Power(Expression, Expression): PrivateScope, Public, Static, HideBySig
    Power(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    PowerAssign(Expression, Expression): PrivateScope, Public, Static, HideBySig
    PowerAssign(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    PowerAssign(Expression, Expression, MethodInfo, LambdaExpression): PrivateScope, Public, Static, HideBySig
    ArrayIndex(Expression, Expression): PrivateScope, Public, Static, HideBySig
    Block(Expression, Expression): PrivateScope, Public, Static, HideBySig
    Block(Expression, Expression, Expression): PrivateScope, Public, Static, HideBySig
    Block(Expression, Expression, Expression, Expression): PrivateScope, Public, Static, HideBySig
    Block(Expression, Expression, Expression, Expression, Expression): PrivateScope, Public, Static, HideBySig
    Block(Expression[]): PrivateScope, Public, Static, HideBySig
    Block(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Block(Type, Expression[]): PrivateScope, Public, Static, HideBySig
    Block(Type, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Block(IEnumerable`1, Expression[]): PrivateScope, Public, Static, HideBySig
    Block(Type, IEnumerable`1, Expression[]): PrivateScope, Public, Static, HideBySig
    Block(IEnumerable`1, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Block(Type, IEnumerable`1, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Catch(Type, Expression): PrivateScope, Public, Static, HideBySig
    Catch(ParameterExpression, Expression): PrivateScope, Public, Static, HideBySig
    Catch(Type, Expression, Expression): PrivateScope, Public, Static, HideBySig
    Catch(ParameterExpression, Expression, Expression): PrivateScope, Public, Static, HideBySig
    MakeCatchBlock(Type, ParameterExpression, Expression, Expression): PrivateScope, Public, Static, HideBySig
    Condition(Expression, Expression, Expression): PrivateScope, Public, Static, HideBySig
    Condition(Expression, Expression, Expression, Type): PrivateScope, Public, Static, HideBySig
    IfThen(Expression, Expression): PrivateScope, Public, Static, HideBySig
    IfThenElse(Expression, Expression, Expression): PrivateScope, Public, Static, HideBySig
    Constant(Object): PrivateScope, Public, Static, HideBySig
    Constant(Object, Type): PrivateScope, Public, Static, HideBySig
    DebugInfo(SymbolDocumentInfo, Int32, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    ClearDebugInfo(SymbolDocumentInfo): PrivateScope, Public, Static, HideBySig
    Empty(): PrivateScope, Public, Static, HideBySig
    Default(Type): PrivateScope, Public, Static, HideBySig
    MakeDynamic(Type, CallSiteBinder, Expression[]): PrivateScope, Public, Static, HideBySig
    MakeDynamic(Type, CallSiteBinder, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    MakeDynamic(Type, CallSiteBinder, Expression): PrivateScope, Public, Static, HideBySig
    MakeDynamic(Type, CallSiteBinder, Expression, Expression): PrivateScope, Public, Static, HideBySig
    MakeDynamic(Type, CallSiteBinder, Expression, Expression, Expression): PrivateScope, Public, Static, HideBySig
    MakeDynamic(Type, CallSiteBinder, Expression, Expression, Expression, Expression): PrivateScope, Public, Static, HideBySig
    Dynamic(CallSiteBinder, Type, Expression[]): PrivateScope, Public, Static, HideBySig
    Dynamic(CallSiteBinder, Type, Expression): PrivateScope, Public, Static, HideBySig
    Dynamic(CallSiteBinder, Type, Expression, Expression): PrivateScope, Public, Static, HideBySig
    Dynamic(CallSiteBinder, Type, Expression, Expression, Expression): PrivateScope, Public, Static, HideBySig
    Dynamic(CallSiteBinder, Type, Expression, Expression, Expression, Expression): PrivateScope, Public, Static, HideBySig
    Dynamic(CallSiteBinder, Type, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    ElementInit(MethodInfo, Expression[]): PrivateScope, Public, Static, HideBySig
    ElementInit(MethodInfo, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    get_NodeType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Type(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CanReduce(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Reduce(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReduceAndCheck(): PrivateScope, Public, HideBySig
    ReduceExtensions(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Break(LabelTarget): PrivateScope, Public, Static, HideBySig
    Break(LabelTarget, Expression): PrivateScope, Public, Static, HideBySig
    Break(LabelTarget, Type): PrivateScope, Public, Static, HideBySig
    Break(LabelTarget, Expression, Type): PrivateScope, Public, Static, HideBySig
    Continue(LabelTarget): PrivateScope, Public, Static, HideBySig
    Continue(LabelTarget, Type): PrivateScope, Public, Static, HideBySig
    Return(LabelTarget): PrivateScope, Public, Static, HideBySig
    Return(LabelTarget, Type): PrivateScope, Public, Static, HideBySig
    Return(LabelTarget, Expression): PrivateScope, Public, Static, HideBySig
    Return(LabelTarget, Expression, Type): PrivateScope, Public, Static, HideBySig
    Goto(LabelTarget): PrivateScope, Public, Static, HideBySig
    Goto(LabelTarget, Type): PrivateScope, Public, Static, HideBySig
    Goto(LabelTarget, Expression): PrivateScope, Public, Static, HideBySig
    Goto(LabelTarget, Expression, Type): PrivateScope, Public, Static, HideBySig
    MakeGoto(GotoExpressionKind, LabelTarget, Expression, Type): PrivateScope, Public, Static, HideBySig
    MakeIndex(Expression, PropertyInfo, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    ArrayAccess(Expression, Expression[]): PrivateScope, Public, Static, HideBySig
    ArrayAccess(Expression, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Property(Expression, String, Expression[]): PrivateScope, Public, Static, HideBySig
    Property(Expression, PropertyInfo, Expression[]): PrivateScope, Public, Static, HideBySig
    Property(Expression, PropertyInfo, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Invoke(Expression, Expression[]): PrivateScope, Public, Static, HideBySig
    Invoke(Expression, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Label(LabelTarget): PrivateScope, Public, Static, HideBySig
    Label(LabelTarget, Expression): PrivateScope, Public, Static, HideBySig
    Label(): PrivateScope, Public, Static, HideBySig
    Assign(Expression, Expression): PrivateScope, Public, Static, HideBySig
    MakeBinary(ExpressionType, Expression, Expression): PrivateScope, Public, Static, HideBySig
    MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo): PrivateScope, Public, Static, HideBySig
    MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo, LambdaExpression): PrivateScope, Public, Static, HideBySig
    Equal(Expression, Expression): PrivateScope, Public, Static, HideBySig
    Equal(Expression, Expression, Boolean, MethodInfo): PrivateScope, Public, Static, HideBySig
    ReferenceEqual(Expression, Expression): PrivateScope, Public, Static, HideBySig
    NotEqual(Expression, Expression): PrivateScope, Public, Static, HideBySig
    NotEqual(Expression, Expression, Boolean, MethodInfo): PrivateScope, Public, Static, HideBySig
    ReferenceNotEqual(Expression, Expression): PrivateScope, Public, Static, HideBySig
    GreaterThan(Expression, Expression): PrivateScope, Public, Static, HideBySig
    GreaterThan(Expression, Expression, Boolean, MethodInfo): PrivateScope, Public, Static, HideBySig
    LessThan(Expression, Expression): PrivateScope, Public, Static, HideBySig
    LessThan(Expression, Expression, Boolean, MethodInfo): PrivateScope, Public, Static, HideBySig
    GreaterThanOrEqual(Expression, Expression): PrivateScope, Public, Static, HideBySig
    GreaterThanOrEqual(Expression, Expression, Boolean, MethodInfo): PrivateScope, Public, Static, HideBySig
    LessThanOrEqual(Expression, Expression): PrivateScope, Public, Static, HideBySig
    LessThanOrEqual(Expression, Expression, Boolean, MethodInfo): PrivateScope, Public, Static, HideBySig
    AndAlso(Expression, Expression): PrivateScope, Public, Static, HideBySig
    AndAlso(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    OrElse(Expression, Expression): PrivateScope, Public, Static, HideBySig
    OrElse(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    Coalesce(Expression, Expression): PrivateScope, Public, Static, HideBySig
    Coalesce(Expression, Expression, LambdaExpression): PrivateScope, Public, Static, HideBySig
    Add(Expression, Expression): PrivateScope, Public, Static, HideBySig
    Add(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    AddAssign(Expression, Expression): PrivateScope, Public, Static, HideBySig
    AddAssign(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    AddAssign(Expression, Expression, MethodInfo, LambdaExpression): PrivateScope, Public, Static, HideBySig
    AddAssignChecked(Expression, Expression): PrivateScope, Public, Static, HideBySig
    AddAssignChecked(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    AddAssignChecked(Expression, Expression, MethodInfo, LambdaExpression): PrivateScope, Public, Static, HideBySig
    AddChecked(Expression, Expression): PrivateScope, Public, Static, HideBySig
    AddChecked(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    Subtract(Expression, Expression): PrivateScope, Public, Static, HideBySig
    Subtract(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    SubtractAssign(Expression, Expression): PrivateScope, Public, Static, HideBySig
    SubtractAssign(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    SubtractAssign(Expression, Expression, MethodInfo, LambdaExpression): PrivateScope, Public, Static, HideBySig
    SubtractAssignChecked(Expression, Expression): PrivateScope, Public, Static, HideBySig
    SubtractAssignChecked(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    SubtractAssignChecked(Expression, Expression, MethodInfo, LambdaExpression): PrivateScope, Public, Static, HideBySig
    SubtractChecked(Expression, Expression): PrivateScope, Public, Static, HideBySig
    SubtractChecked(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    Divide(Expression, Expression): PrivateScope, Public, Static, HideBySig
    Divide(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    DivideAssign(Expression, Expression): PrivateScope, Public, Static, HideBySig
    DivideAssign(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    DivideAssign(Expression, Expression, MethodInfo, LambdaExpression): PrivateScope, Public, Static, HideBySig
    Modulo(Expression, Expression): PrivateScope, Public, Static, HideBySig
    Modulo(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    ModuloAssign(Expression, Expression): PrivateScope, Public, Static, HideBySig
    ModuloAssign(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    ModuloAssign(Expression, Expression, MethodInfo, LambdaExpression): PrivateScope, Public, Static, HideBySig
    Multiply(Expression, Expression): PrivateScope, Public, Static, HideBySig
    Multiply(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    MultiplyAssign(Expression, Expression): PrivateScope, Public, Static, HideBySig
    MultiplyAssign(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    MultiplyAssign(Expression, Expression, MethodInfo, LambdaExpression): PrivateScope, Public, Static, HideBySig
    MultiplyAssignChecked(Expression, Expression): PrivateScope, Public, Static, HideBySig
    MultiplyAssignChecked(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    MultiplyAssignChecked(Expression, Expression, MethodInfo, LambdaExpression): PrivateScope, Public, Static, HideBySig
    MultiplyChecked(Expression, Expression): PrivateScope, Public, Static, HideBySig
    MultiplyChecked(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    LeftShift(Expression, Expression): PrivateScope, Public, Static, HideBySig
    LeftShift(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    LeftShiftAssign(Expression, Expression): PrivateScope, Public, Static, HideBySig
    LeftShiftAssign(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    LeftShiftAssign(Expression, Expression, MethodInfo, LambdaExpression): PrivateScope, Public, Static, HideBySig
    RightShift(Expression, Expression): PrivateScope, Public, Static, HideBySig
    RightShift(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    RightShiftAssign(Expression, Expression): PrivateScope, Public, Static, HideBySig
    RightShiftAssign(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    RightShiftAssign(Expression, Expression, MethodInfo, LambdaExpression): PrivateScope, Public, Static, HideBySig
    And(Expression, Expression): PrivateScope, Public, Static, HideBySig
    And(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    AndAssign(Expression, Expression): PrivateScope, Public, Static, HideBySig
    AndAssign(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    AndAssign(Expression, Expression, MethodInfo, LambdaExpression): PrivateScope, Public, Static, HideBySig
    Or(Expression, Expression): PrivateScope, Public, Static, HideBySig
    Or(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    OrAssign(Expression, Expression): PrivateScope, Public, Static, HideBySig
    OrAssign(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    OrAssign(Expression, Expression, MethodInfo, LambdaExpression): PrivateScope, Public, Static, HideBySig
    ExclusiveOr(Expression, Expression): PrivateScope, Public, Static, HideBySig
Class System.Linq.Expressions.BinaryExpression: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Linq.Expressions.Expression
  Properties:
    Boolean CanReduce 'get ' : 
    System.Linq.Expressions.Expression Right 'get ' : 
    System.Linq.Expressions.Expression Left 'get ' : 
    System.Reflection.MethodInfo Method 'get ' : 
    System.Linq.Expressions.LambdaExpression Conversion 'get ' : 
    Boolean IsLifted 'get ' : 
    Boolean IsLiftedToNull 'get ' : 
  Methods:
    get_CanReduce(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, HideBySig, SpecialName
    get_Method(): PrivateScope, Public, HideBySig, SpecialName
    Update(Expression, LambdaExpression, Expression): PrivateScope, Public, HideBySig
    Reduce(): PrivateScope, Public, Virtual, HideBySig
    get_Conversion(): PrivateScope, Public, HideBySig, SpecialName
    get_IsLifted(): PrivateScope, Public, HideBySig, SpecialName
    get_IsLiftedToNull(): PrivateScope, Public, HideBySig, SpecialName
Class System.Linq.Expressions.BlockExpression: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Linq.Expressions.Expression
  Properties:
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.Expression] Expressions 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.ParameterExpression] Variables 'get ' : 
    System.Linq.Expressions.Expression Result 'get ' : 
    System.Linq.Expressions.ExpressionType NodeType 'get ' : 
    System.Type Type 'get ' : 
  Methods:
    get_Expressions(): PrivateScope, Public, HideBySig, SpecialName
    get_Variables(): PrivateScope, Public, HideBySig, SpecialName
    get_Result(): PrivateScope, Public, HideBySig, SpecialName
    get_NodeType(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Update(IEnumerable`1, IEnumerable`1): PrivateScope, Public, HideBySig
Class System.Linq.Expressions.CatchBlock: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Properties:
    System.Linq.Expressions.ParameterExpression Variable 'get ' : 
    System.Type Test 'get ' : 
    System.Linq.Expressions.Expression Body 'get ' : 
    System.Linq.Expressions.Expression Filter 'get ' : 
  Methods:
    get_Variable(): PrivateScope, Public, HideBySig, SpecialName
    get_Test(): PrivateScope, Public, HideBySig, SpecialName
    get_Body(): PrivateScope, Public, HideBySig, SpecialName
    get_Filter(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Update(ParameterExpression, Expression, Expression): PrivateScope, Public, HideBySig
Class System.Linq.Expressions.ConditionalExpression: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Linq.Expressions.Expression
  Properties:
    System.Linq.Expressions.ExpressionType NodeType 'get ' : 
    System.Type Type 'get ' : 
    System.Linq.Expressions.Expression Test 'get ' : 
    System.Linq.Expressions.Expression IfTrue 'get ' : 
    System.Linq.Expressions.Expression IfFalse 'get ' : 
  Methods:
    get_NodeType(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Test(): PrivateScope, Public, HideBySig, SpecialName
    get_IfTrue(): PrivateScope, Public, HideBySig, SpecialName
    get_IfFalse(): PrivateScope, Public, HideBySig, SpecialName
    Update(Expression, Expression, Expression): PrivateScope, Public, HideBySig
Class System.Linq.Expressions.ConstantExpression: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Linq.Expressions.Expression
  Properties:
    System.Type Type 'get ' : 
    System.Linq.Expressions.ExpressionType NodeType 'get ' : 
    System.Object Value 'get ' : 
  Methods:
    get_Type(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_NodeType(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
Class System.Linq.Expressions.DebugInfoExpression: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Linq.Expressions.Expression
  Properties:
    System.Type Type 'get ' : 
    System.Linq.Expressions.ExpressionType NodeType 'get ' : 
    Int32 StartLine 'get ' : 
    Int32 StartColumn 'get ' : 
    Int32 EndLine 'get ' : 
    Int32 EndColumn 'get ' : 
    System.Linq.Expressions.SymbolDocumentInfo Document 'get ' : 
    Boolean IsClear 'get ' : 
  Methods:
    get_Type(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_NodeType(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_StartLine(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_StartColumn(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_EndLine(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_EndColumn(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Document(): PrivateScope, Public, HideBySig, SpecialName
    get_IsClear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class System.Linq.Expressions.DefaultExpression: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Linq.Expressions.Expression
  Properties:
    System.Type Type 'get ' : 
    System.Linq.Expressions.ExpressionType NodeType 'get ' : 
  Methods:
    get_Type(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_NodeType(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
Class System.Linq.Expressions.DynamicExpression: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Linq.Expressions.Expression
  Properties:
    System.Type Type 'get ' : 
    System.Linq.Expressions.ExpressionType NodeType 'get ' : 
    System.Runtime.CompilerServices.CallSiteBinder Binder 'get ' : 
    System.Type DelegateType 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.Expression] Arguments 'get ' : 
  Methods:
    get_Type(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_NodeType(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Binder(): PrivateScope, Public, HideBySig, SpecialName
    get_DelegateType(): PrivateScope, Public, HideBySig, SpecialName
    get_Arguments(): PrivateScope, Public, HideBySig, SpecialName
    Update(IEnumerable`1): PrivateScope, Public, HideBySig
Class System.Linq.Expressions.ElementInit: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Properties:
    System.Reflection.MethodInfo AddMethod 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.Expression] Arguments 'get ' : 
  Methods:
    get_AddMethod(): PrivateScope, Public, HideBySig, SpecialName
    get_Arguments(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Update(IEnumerable`1): PrivateScope, Public, HideBySig
Struct System.Linq.Expressions.ExpressionType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Linq.Expressions.ExpressionType Add = 0 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType AddChecked = 1 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType And = 2 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType AndAlso = 3 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType ArrayLength = 4 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType ArrayIndex = 5 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Call = 6 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Coalesce = 7 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Conditional = 8 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Constant = 9 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Convert = 10 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType ConvertChecked = 11 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Divide = 12 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Equal = 13 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType ExclusiveOr = 14 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType GreaterThan = 15 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType GreaterThanOrEqual = 16 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Invoke = 17 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Lambda = 18 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType LeftShift = 19 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType LessThan = 20 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType LessThanOrEqual = 21 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType ListInit = 22 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType MemberAccess = 23 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType MemberInit = 24 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Modulo = 25 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Multiply = 26 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType MultiplyChecked = 27 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Negate = 28 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType UnaryPlus = 29 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType NegateChecked = 30 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType New = 31 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType NewArrayInit = 32 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType NewArrayBounds = 33 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Not = 34 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType NotEqual = 35 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Or = 36 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType OrElse = 37 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Parameter = 38 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Power = 39 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Quote = 40 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType RightShift = 41 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Subtract = 42 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType SubtractChecked = 43 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType TypeAs = 44 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType TypeIs = 45 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Assign = 46 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Block = 47 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType DebugInfo = 48 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Decrement = 49 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Dynamic = 50 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Default = 51 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Extension = 52 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Goto = 53 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Increment = 54 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Index = 55 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Label = 56 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType RuntimeVariables = 57 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Loop = 58 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Switch = 59 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Throw = 60 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Try = 61 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Unbox = 62 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType AddAssign = 63 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType AndAssign = 64 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType DivideAssign = 65 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType ExclusiveOrAssign = 66 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType LeftShiftAssign = 67 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType ModuloAssign = 68 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType MultiplyAssign = 69 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType OrAssign = 70 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType PowerAssign = 71 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType RightShiftAssign = 72 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType SubtractAssign = 73 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType AddAssignChecked = 74 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType MultiplyAssignChecked = 75 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType SubtractAssignChecked = 76 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType PreIncrementAssign = 77 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType PreDecrementAssign = 78 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType PostIncrementAssign = 79 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType PostDecrementAssign = 80 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType TypeEqual = 81 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType OnesComplement = 82 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType IsTrue = 83 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType IsFalse = 84 : Public, Static, Literal, HasDefault
Struct System.Linq.Expressions.GotoExpressionKind: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Linq.Expressions.GotoExpressionKind Goto = 0 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.GotoExpressionKind Return = 1 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.GotoExpressionKind Break = 2 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.GotoExpressionKind Continue = 3 : Public, Static, Literal, HasDefault
Class System.Linq.Expressions.GotoExpression: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Linq.Expressions.Expression
  Properties:
    System.Type Type 'get ' : 
    System.Linq.Expressions.ExpressionType NodeType 'get ' : 
    System.Linq.Expressions.Expression Value 'get ' : 
    System.Linq.Expressions.LabelTarget Target 'get ' : 
    System.Linq.Expressions.GotoExpressionKind Kind 'get ' : 
  Methods:
    get_Type(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_NodeType(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    get_Target(): PrivateScope, Public, HideBySig, SpecialName
    get_Kind(): PrivateScope, Public, HideBySig, SpecialName
    Update(LabelTarget, Expression): PrivateScope, Public, HideBySig
Class System.Linq.Expressions.IndexExpression: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Linq.Expressions.Expression
  Properties:
    System.Linq.Expressions.ExpressionType NodeType 'get ' : 
    System.Type Type 'get ' : 
    System.Linq.Expressions.Expression Object 'get ' : 
    System.Reflection.PropertyInfo Indexer 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.Expression] Arguments 'get ' : 
  Methods:
    get_NodeType(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Object(): PrivateScope, Public, HideBySig, SpecialName
    get_Indexer(): PrivateScope, Public, HideBySig, SpecialName
    get_Arguments(): PrivateScope, Public, HideBySig, SpecialName
    Update(Expression, IEnumerable`1): PrivateScope, Public, HideBySig
Class System.Linq.Expressions.InvocationExpression: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Linq.Expressions.Expression
  Properties:
    System.Type Type 'get ' : 
    System.Linq.Expressions.ExpressionType NodeType 'get ' : 
    System.Linq.Expressions.Expression Expression 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.Expression] Arguments 'get ' : 
  Methods:
    get_Type(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_NodeType(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Expression(): PrivateScope, Public, HideBySig, SpecialName
    get_Arguments(): PrivateScope, Public, HideBySig, SpecialName
    Update(Expression, IEnumerable`1): PrivateScope, Public, HideBySig
Class System.Linq.Expressions.LabelExpression: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Linq.Expressions.Expression
  Properties:
    System.Type Type 'get ' : 
    System.Linq.Expressions.ExpressionType NodeType 'get ' : 
    System.Linq.Expressions.LabelTarget Target 'get ' : 
    System.Linq.Expressions.Expression DefaultValue 'get ' : 
  Methods:
    get_Type(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_NodeType(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Target(): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultValue(): PrivateScope, Public, HideBySig, SpecialName
    Update(LabelTarget, Expression): PrivateScope, Public, HideBySig
Class System.Linq.Expressions.LabelTarget: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Properties:
    System.String Name 'get ' : 
    System.Type Type 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class System.Linq.Expressions.LambdaExpression: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Linq.Expressions.Expression
  Properties:
    System.Type Type 'get ' : 
    System.Linq.Expressions.ExpressionType NodeType 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.ParameterExpression] Parameters 'get ' : 
    System.String Name 'get ' : 
    System.Linq.Expressions.Expression Body 'get ' : 
    System.Type ReturnType 'get ' : 
    Boolean TailCall 'get ' : 
  Methods:
    get_Type(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_NodeType(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Parameters(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Body(): PrivateScope, Public, HideBySig, SpecialName
    get_ReturnType(): PrivateScope, Public, HideBySig, SpecialName
    get_TailCall(): PrivateScope, Public, HideBySig, SpecialName
    Compile(): PrivateScope, Public, HideBySig
    Compile(DebugInfoGenerator): PrivateScope, Public, HideBySig
    CompileToMethod(MethodBuilder): PrivateScope, Public, HideBySig
    CompileToMethod(MethodBuilder, DebugInfoGenerator): PrivateScope, Public, HideBySig
Class System.Linq.Expressions.Expression`1[TDelegate]: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Type parameter: TDelegate
  :System.Linq.Expressions.LambdaExpression
  Methods:
    Compile(): PrivateScope, Public, HideBySig
    Compile(DebugInfoGenerator): PrivateScope, Public, HideBySig
    Update(Expression, IEnumerable`1): PrivateScope, Public, HideBySig
Class System.Linq.Expressions.ListInitExpression: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Linq.Expressions.Expression
  Properties:
    System.Linq.Expressions.ExpressionType NodeType 'get ' : 
    System.Type Type 'get ' : 
    Boolean CanReduce 'get ' : 
    System.Linq.Expressions.NewExpression NewExpression 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.ElementInit] Initializers 'get ' : 
  Methods:
    get_NodeType(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_CanReduce(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_NewExpression(): PrivateScope, Public, HideBySig, SpecialName
    get_Initializers(): PrivateScope, Public, HideBySig, SpecialName
    Reduce(): PrivateScope, Public, Virtual, HideBySig
    Update(NewExpression, IEnumerable`1): PrivateScope, Public, HideBySig
Class System.Linq.Expressions.LoopExpression: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Linq.Expressions.Expression
  Properties:
    System.Type Type 'get ' : 
    System.Linq.Expressions.ExpressionType NodeType 'get ' : 
    System.Linq.Expressions.Expression Body 'get ' : 
    System.Linq.Expressions.LabelTarget BreakLabel 'get ' : 
    System.Linq.Expressions.LabelTarget ContinueLabel 'get ' : 
  Methods:
    get_Type(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_NodeType(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Body(): PrivateScope, Public, HideBySig, SpecialName
    get_BreakLabel(): PrivateScope, Public, HideBySig, SpecialName
    get_ContinueLabel(): PrivateScope, Public, HideBySig, SpecialName
    Update(LabelTarget, LabelTarget, Expression): PrivateScope, Public, HideBySig
Class System.Linq.Expressions.MemberBinding: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    System.Linq.Expressions.MemberBindingType BindingType 'get ' : 
    System.Reflection.MemberInfo Member 'get ' : 
  Methods:
    get_BindingType(): PrivateScope, Public, HideBySig, SpecialName
    get_Member(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class System.Linq.Expressions.MemberAssignment: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Linq.Expressions.MemberBinding
  Properties:
    System.Linq.Expressions.Expression Expression 'get ' : 
  Methods:
    get_Expression(): PrivateScope, Public, HideBySig, SpecialName
    Update(Expression): PrivateScope, Public, HideBySig
Struct System.Linq.Expressions.MemberBindingType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Linq.Expressions.MemberBindingType Assignment = 0 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.MemberBindingType MemberBinding = 1 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.MemberBindingType ListBinding = 2 : Public, Static, Literal, HasDefault
Class System.Linq.Expressions.MemberExpression: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Linq.Expressions.Expression
  Properties:
    System.Reflection.MemberInfo Member 'get ' : 
    System.Linq.Expressions.Expression Expression 'get ' : 
    System.Linq.Expressions.ExpressionType NodeType 'get ' : 
  Methods:
    get_Member(): PrivateScope, Public, HideBySig, SpecialName
    get_Expression(): PrivateScope, Public, HideBySig, SpecialName
    get_NodeType(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    Update(Expression): PrivateScope, Public, HideBySig
Class System.Linq.Expressions.MemberInitExpression: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Linq.Expressions.Expression
  Properties:
    System.Type Type 'get ' : 
    Boolean CanReduce 'get ' : 
    System.Linq.Expressions.ExpressionType NodeType 'get ' : 
    System.Linq.Expressions.NewExpression NewExpression 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.MemberBinding] Bindings 'get ' : 
  Methods:
    get_Type(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_CanReduce(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_NodeType(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_NewExpression(): PrivateScope, Public, HideBySig, SpecialName
    get_Bindings(): PrivateScope, Public, HideBySig, SpecialName
    Reduce(): PrivateScope, Public, Virtual, HideBySig
    Update(NewExpression, IEnumerable`1): PrivateScope, Public, HideBySig
Class System.Linq.Expressions.MemberListBinding: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Linq.Expressions.MemberBinding
  Properties:
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.ElementInit] Initializers 'get ' : 
  Methods:
    get_Initializers(): PrivateScope, Public, HideBySig, SpecialName
    Update(IEnumerable`1): PrivateScope, Public, HideBySig
Class System.Linq.Expressions.MemberMemberBinding: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Linq.Expressions.MemberBinding
  Properties:
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.MemberBinding] Bindings 'get ' : 
  Methods:
    get_Bindings(): PrivateScope, Public, HideBySig, SpecialName
    Update(IEnumerable`1): PrivateScope, Public, HideBySig
Class System.Linq.Expressions.MethodCallExpression: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Linq.Expressions.Expression
  Properties:
    System.Linq.Expressions.ExpressionType NodeType 'get ' : 
    System.Type Type 'get ' : 
    System.Reflection.MethodInfo Method 'get ' : 
    System.Linq.Expressions.Expression Object 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.Expression] Arguments 'get ' : 
  Methods:
    get_NodeType(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Method(): PrivateScope, Public, HideBySig, SpecialName
    get_Object(): PrivateScope, Public, HideBySig, SpecialName
    get_Arguments(): PrivateScope, Public, HideBySig, SpecialName
    Update(Expression, IEnumerable`1): PrivateScope, Public, HideBySig
Class System.Linq.Expressions.NewArrayExpression: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Linq.Expressions.Expression
  Properties:
    System.Type Type 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.Expression] Expressions 'get ' : 
  Methods:
    get_Type(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Expressions(): PrivateScope, Public, HideBySig, SpecialName
    Update(IEnumerable`1): PrivateScope, Public, HideBySig
Class System.Linq.Expressions.NewExpression: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Linq.Expressions.Expression
  Properties:
    System.Type Type 'get ' : 
    System.Linq.Expressions.ExpressionType NodeType 'get ' : 
    System.Reflection.ConstructorInfo Constructor 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.Expression] Arguments 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.Reflection.MemberInfo] Members 'get ' : 
  Methods:
    get_Type(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_NodeType(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Constructor(): PrivateScope, Public, HideBySig, SpecialName
    get_Arguments(): PrivateScope, Public, HideBySig, SpecialName
    get_Members(): PrivateScope, Public, HideBySig, SpecialName
    Update(IEnumerable`1): PrivateScope, Public, HideBySig
Class System.Linq.Expressions.ParameterExpression: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Linq.Expressions.Expression
  Properties:
    System.Type Type 'get ' : 
    System.Linq.Expressions.ExpressionType NodeType 'get ' : 
    System.String Name 'get ' : 
    Boolean IsByRef 'get ' : 
  Methods:
    get_Type(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_NodeType(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_IsByRef(): PrivateScope, Public, HideBySig, SpecialName
Class System.Linq.Expressions.RuntimeVariablesExpression: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Linq.Expressions.Expression
  Properties:
    System.Type Type 'get ' : 
    System.Linq.Expressions.ExpressionType NodeType 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.ParameterExpression] Variables 'get ' : 
  Methods:
    get_Type(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_NodeType(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Variables(): PrivateScope, Public, HideBySig, SpecialName
    Update(IEnumerable`1): PrivateScope, Public, HideBySig
Class System.Linq.Expressions.SwitchCase: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Properties:
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.Expression] TestValues 'get ' : 
    System.Linq.Expressions.Expression Body 'get ' : 
  Methods:
    get_TestValues(): PrivateScope, Public, HideBySig, SpecialName
    get_Body(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Update(IEnumerable`1, Expression): PrivateScope, Public, HideBySig
Class System.Linq.Expressions.SwitchExpression: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Linq.Expressions.Expression
  Properties:
    System.Type Type 'get ' : 
    System.Linq.Expressions.ExpressionType NodeType 'get ' : 
    System.Linq.Expressions.Expression SwitchValue 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.SwitchCase] Cases 'get ' : 
    System.Linq.Expressions.Expression DefaultBody 'get ' : 
    System.Reflection.MethodInfo Comparison 'get ' : 
  Methods:
    get_Type(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_NodeType(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_SwitchValue(): PrivateScope, Public, HideBySig, SpecialName
    get_Cases(): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultBody(): PrivateScope, Public, HideBySig, SpecialName
    get_Comparison(): PrivateScope, Public, HideBySig, SpecialName
    Update(Expression, IEnumerable`1, Expression): PrivateScope, Public, HideBySig
Class System.Linq.Expressions.SymbolDocumentInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Properties:
    System.String FileName 'get ' : 
    System.Guid Language 'get ' : 
    System.Guid LanguageVendor 'get ' : 
    System.Guid DocumentType 'get ' : 
  Methods:
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
    get_Language(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LanguageVendor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DocumentType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class System.Linq.Expressions.TryExpression: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Linq.Expressions.Expression
  Properties:
    System.Type Type 'get ' : 
    System.Linq.Expressions.ExpressionType NodeType 'get ' : 
    System.Linq.Expressions.Expression Body 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.CatchBlock] Handlers 'get ' : 
    System.Linq.Expressions.Expression Finally 'get ' : 
    System.Linq.Expressions.Expression Fault 'get ' : 
  Methods:
    get_Type(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_NodeType(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Body(): PrivateScope, Public, HideBySig, SpecialName
    get_Handlers(): PrivateScope, Public, HideBySig, SpecialName
    get_Finally(): PrivateScope, Public, HideBySig, SpecialName
    get_Fault(): PrivateScope, Public, HideBySig, SpecialName
    Update(Expression, IEnumerable`1, Expression, Expression): PrivateScope, Public, HideBySig
Class System.Linq.Expressions.TypeBinaryExpression: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Linq.Expressions.Expression
  Properties:
    System.Type Type 'get ' : 
    System.Linq.Expressions.ExpressionType NodeType 'get ' : 
    System.Linq.Expressions.Expression Expression 'get ' : 
    System.Type TypeOperand 'get ' : 
  Methods:
    get_Type(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_NodeType(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Expression(): PrivateScope, Public, HideBySig, SpecialName
    get_TypeOperand(): PrivateScope, Public, HideBySig, SpecialName
    Update(Expression): PrivateScope, Public, HideBySig
Class System.Linq.Expressions.UnaryExpression: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Linq.Expressions.Expression
  Properties:
    System.Type Type 'get ' : 
    System.Linq.Expressions.ExpressionType NodeType 'get ' : 
    System.Linq.Expressions.Expression Operand 'get ' : 
    System.Reflection.MethodInfo Method 'get ' : 
    Boolean IsLifted 'get ' : 
    Boolean IsLiftedToNull 'get ' : 
    Boolean CanReduce 'get ' : 
  Methods:
    get_Type(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_NodeType(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Operand(): PrivateScope, Public, HideBySig, SpecialName
    get_Method(): PrivateScope, Public, HideBySig, SpecialName
    get_IsLifted(): PrivateScope, Public, HideBySig, SpecialName
    get_IsLiftedToNull(): PrivateScope, Public, HideBySig, SpecialName
    get_CanReduce(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Reduce(): PrivateScope, Public, Virtual, HideBySig
    Update(Expression): PrivateScope, Public, HideBySig
Class System.Runtime.CompilerServices.Closure: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(System.Object[], System.Object[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Object[] Constants : Public, InitOnly
    System.Object[] Locals : Public, InitOnly
Class System.Runtime.CompilerServices.DebugInfoGenerator: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Methods:
    CreatePdbGenerator(): PrivateScope, Public, Static, HideBySig
    MarkSequencePoint(LambdaExpression, Int32, DebugInfoExpression): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class System.Action`9[T1,T2,T3,T4,T5,T6,T7,T8,T9]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T1,  Contravariant
  Type parameter: T2,  Contravariant
  Type parameter: T3,  Contravariant
  Type parameter: T4,  Contravariant
  Type parameter: T5,  Contravariant
  Type parameter: T6,  Contravariant
  Type parameter: T7,  Contravariant
  Type parameter: T8,  Contravariant
  Type parameter: T9,  Contravariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T1, T2, T3, T4, T5, T6, T7, T8, T9): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T1, T2, T3, T4, T5, T6, T7, T8, T9, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Action`10[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T1,  Contravariant
  Type parameter: T2,  Contravariant
  Type parameter: T3,  Contravariant
  Type parameter: T4,  Contravariant
  Type parameter: T5,  Contravariant
  Type parameter: T6,  Contravariant
  Type parameter: T7,  Contravariant
  Type parameter: T8,  Contravariant
  Type parameter: T9,  Contravariant
  Type parameter: T10,  Contravariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Action`11[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T1,  Contravariant
  Type parameter: T2,  Contravariant
  Type parameter: T3,  Contravariant
  Type parameter: T4,  Contravariant
  Type parameter: T5,  Contravariant
  Type parameter: T6,  Contravariant
  Type parameter: T7,  Contravariant
  Type parameter: T8,  Contravariant
  Type parameter: T9,  Contravariant
  Type parameter: T10,  Contravariant
  Type parameter: T11,  Contravariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Action`12[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T1,  Contravariant
  Type parameter: T2,  Contravariant
  Type parameter: T3,  Contravariant
  Type parameter: T4,  Contravariant
  Type parameter: T5,  Contravariant
  Type parameter: T6,  Contravariant
  Type parameter: T7,  Contravariant
  Type parameter: T8,  Contravariant
  Type parameter: T9,  Contravariant
  Type parameter: T10,  Contravariant
  Type parameter: T11,  Contravariant
  Type parameter: T12,  Contravariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Action`13[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T1,  Contravariant
  Type parameter: T2,  Contravariant
  Type parameter: T3,  Contravariant
  Type parameter: T4,  Contravariant
  Type parameter: T5,  Contravariant
  Type parameter: T6,  Contravariant
  Type parameter: T7,  Contravariant
  Type parameter: T8,  Contravariant
  Type parameter: T9,  Contravariant
  Type parameter: T10,  Contravariant
  Type parameter: T11,  Contravariant
  Type parameter: T12,  Contravariant
  Type parameter: T13,  Contravariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Action`14[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T1,  Contravariant
  Type parameter: T2,  Contravariant
  Type parameter: T3,  Contravariant
  Type parameter: T4,  Contravariant
  Type parameter: T5,  Contravariant
  Type parameter: T6,  Contravariant
  Type parameter: T7,  Contravariant
  Type parameter: T8,  Contravariant
  Type parameter: T9,  Contravariant
  Type parameter: T10,  Contravariant
  Type parameter: T11,  Contravariant
  Type parameter: T12,  Contravariant
  Type parameter: T13,  Contravariant
  Type parameter: T14,  Contravariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Action`15[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T1,  Contravariant
  Type parameter: T2,  Contravariant
  Type parameter: T3,  Contravariant
  Type parameter: T4,  Contravariant
  Type parameter: T5,  Contravariant
  Type parameter: T6,  Contravariant
  Type parameter: T7,  Contravariant
  Type parameter: T8,  Contravariant
  Type parameter: T9,  Contravariant
  Type parameter: T10,  Contravariant
  Type parameter: T11,  Contravariant
  Type parameter: T12,  Contravariant
  Type parameter: T13,  Contravariant
  Type parameter: T14,  Contravariant
  Type parameter: T15,  Contravariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Action`16[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T1,  Contravariant
  Type parameter: T2,  Contravariant
  Type parameter: T3,  Contravariant
  Type parameter: T4,  Contravariant
  Type parameter: T5,  Contravariant
  Type parameter: T6,  Contravariant
  Type parameter: T7,  Contravariant
  Type parameter: T8,  Contravariant
  Type parameter: T9,  Contravariant
  Type parameter: T10,  Contravariant
  Type parameter: T11,  Contravariant
  Type parameter: T12,  Contravariant
  Type parameter: T13,  Contravariant
  Type parameter: T14,  Contravariant
  Type parameter: T15,  Contravariant
  Type parameter: T16,  Contravariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Runtime.CompilerServices.ExtensionAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Func`10[T1,T2,T3,T4,T5,T6,T7,T8,T9,TResult]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T1,  Contravariant
  Type parameter: T2,  Contravariant
  Type parameter: T3,  Contravariant
  Type parameter: T4,  Contravariant
  Type parameter: T5,  Contravariant
  Type parameter: T6,  Contravariant
  Type parameter: T7,  Contravariant
  Type parameter: T8,  Contravariant
  Type parameter: T9,  Contravariant
  Type parameter: TResult,  Covariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T1, T2, T3, T4, T5, T6, T7, T8, T9): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T1, T2, T3, T4, T5, T6, T7, T8, T9, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Func`11[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,TResult]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T1,  Contravariant
  Type parameter: T2,  Contravariant
  Type parameter: T3,  Contravariant
  Type parameter: T4,  Contravariant
  Type parameter: T5,  Contravariant
  Type parameter: T6,  Contravariant
  Type parameter: T7,  Contravariant
  Type parameter: T8,  Contravariant
  Type parameter: T9,  Contravariant
  Type parameter: T10,  Contravariant
  Type parameter: TResult,  Covariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Func`12[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,TResult]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T1,  Contravariant
  Type parameter: T2,  Contravariant
  Type parameter: T3,  Contravariant
  Type parameter: T4,  Contravariant
  Type parameter: T5,  Contravariant
  Type parameter: T6,  Contravariant
  Type parameter: T7,  Contravariant
  Type parameter: T8,  Contravariant
  Type parameter: T9,  Contravariant
  Type parameter: T10,  Contravariant
  Type parameter: T11,  Contravariant
  Type parameter: TResult,  Covariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Func`13[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,TResult]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T1,  Contravariant
  Type parameter: T2,  Contravariant
  Type parameter: T3,  Contravariant
  Type parameter: T4,  Contravariant
  Type parameter: T5,  Contravariant
  Type parameter: T6,  Contravariant
  Type parameter: T7,  Contravariant
  Type parameter: T8,  Contravariant
  Type parameter: T9,  Contravariant
  Type parameter: T10,  Contravariant
  Type parameter: T11,  Contravariant
  Type parameter: T12,  Contravariant
  Type parameter: TResult,  Covariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Func`14[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,TResult]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T1,  Contravariant
  Type parameter: T2,  Contravariant
  Type parameter: T3,  Contravariant
  Type parameter: T4,  Contravariant
  Type parameter: T5,  Contravariant
  Type parameter: T6,  Contravariant
  Type parameter: T7,  Contravariant
  Type parameter: T8,  Contravariant
  Type parameter: T9,  Contravariant
  Type parameter: T10,  Contravariant
  Type parameter: T11,  Contravariant
  Type parameter: T12,  Contravariant
  Type parameter: T13,  Contravariant
  Type parameter: TResult,  Covariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Func`15[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T1,  Contravariant
  Type parameter: T2,  Contravariant
  Type parameter: T3,  Contravariant
  Type parameter: T4,  Contravariant
  Type parameter: T5,  Contravariant
  Type parameter: T6,  Contravariant
  Type parameter: T7,  Contravariant
  Type parameter: T8,  Contravariant
  Type parameter: T9,  Contravariant
  Type parameter: T10,  Contravariant
  Type parameter: T11,  Contravariant
  Type parameter: T12,  Contravariant
  Type parameter: T13,  Contravariant
  Type parameter: T14,  Contravariant
  Type parameter: TResult,  Covariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Func`16[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,TResult]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T1,  Contravariant
  Type parameter: T2,  Contravariant
  Type parameter: T3,  Contravariant
  Type parameter: T4,  Contravariant
  Type parameter: T5,  Contravariant
  Type parameter: T6,  Contravariant
  Type parameter: T7,  Contravariant
  Type parameter: T8,  Contravariant
  Type parameter: T9,  Contravariant
  Type parameter: T10,  Contravariant
  Type parameter: T11,  Contravariant
  Type parameter: T12,  Contravariant
  Type parameter: T13,  Contravariant
  Type parameter: T14,  Contravariant
  Type parameter: T15,  Contravariant
  Type parameter: TResult,  Covariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Func`17[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T1,  Contravariant
  Type parameter: T2,  Contravariant
  Type parameter: T3,  Contravariant
  Type parameter: T4,  Contravariant
  Type parameter: T5,  Contravariant
  Type parameter: T6,  Contravariant
  Type parameter: T7,  Contravariant
  Type parameter: T8,  Contravariant
  Type parameter: T9,  Contravariant
  Type parameter: T10,  Contravariant
  Type parameter: T11,  Contravariant
  Type parameter: T12,  Contravariant
  Type parameter: T13,  Contravariant
  Type parameter: T14,  Contravariant
  Type parameter: T15,  Contravariant
  Type parameter: T16,  Contravariant
  Type parameter: TResult,  Covariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1[T]: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  Type parameter: T
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IList`1[T]
    System.Collections.Generic.ICollection`1[T]
    System.Collections.Generic.IEnumerable`1[T]
    System.Collections.IEnumerable
    System.Collections.IList
    System.Collections.ICollection
  Properties:
    Int32 Capacity 'get set' : 
    Int32 Count 'get ' : 
    T Item [Int32] 'get set' : 
  Methods:
    get_Capacity(): PrivateScope, Public, HideBySig, SpecialName
    set_Capacity(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IndexOf(T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Insert(Int32, T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RemoveAt(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Add(T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Contains(T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(T[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Remove(T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reverse(): PrivateScope, Public, HideBySig
    Reverse(Int32, Int32): PrivateScope, Public, HideBySig
    ToArray(): PrivateScope, Public, HideBySig
    ToReadOnlyCollection(): PrivateScope, Public, HideBySig
Interface System.Runtime.CompilerServices.IStrongBox: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    System.Object Value 'get set' : 
  Methods:
    get_Value(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Value(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class System.Runtime.CompilerServices.StrongBox`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(T): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Runtime.CompilerServices.IStrongBox
  Fields:
    T Value : Public
Class System.Diagnostics.EventSchemaTraceListener: AutoLayout, AnsiClass, Class, Public, HasSecurity, BeforeFieldInit
  :System.Diagnostics.TextWriterTraceListener
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, Int32, System.Diagnostics.TraceLogRetentionOption): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, Int32, System.Diagnostics.TraceLogRetentionOption, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, Int32, System.Diagnostics.TraceLogRetentionOption, Int64, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.IO.TextWriter Writer 'get set' : 
    Boolean IsThreadSafe 'get ' : 
    Int32 BufferSize 'get ' : 
    System.Diagnostics.TraceLogRetentionOption TraceLogRetentionOption 'get ' : 
    Int64 MaximumFileSize 'get ' : 
    Int32 MaximumNumberOfFiles 'get ' : 
  Methods:
    get_Writer(): PrivateScope, Public, HideBySig, SpecialName
    set_Writer(TextWriter): PrivateScope, Public, HideBySig, SpecialName
    get_IsThreadSafe(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_BufferSize(): PrivateScope, Public, HideBySig, SpecialName
    get_TraceLogRetentionOption(): PrivateScope, Public, HideBySig, SpecialName
    get_MaximumFileSize(): PrivateScope, Public, HideBySig, SpecialName
    get_MaximumNumberOfFiles(): PrivateScope, Public, HideBySig, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig
    Write(String): PrivateScope, Public, Virtual, HideBySig
    WriteLine(String): PrivateScope, Public, Virtual, HideBySig
    Fail(String, String): PrivateScope, Public, Virtual, HideBySig
    TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[]): PrivateScope, Public, Virtual, HideBySig
    TraceEvent(TraceEventCache, String, TraceEventType, Int32, String): PrivateScope, Public, Virtual, HideBySig
    TraceData(TraceEventCache, String, TraceEventType, Int32, Object): PrivateScope, Public, Virtual, HideBySig
    TraceData(TraceEventCache, String, TraceEventType, Int32, Object[]): PrivateScope, Public, Virtual, HideBySig
    TraceTransfer(TraceEventCache, String, Int32, String, Guid): PrivateScope, Public, Virtual, HideBySig
Struct System.Diagnostics.TraceLogRetentionOption: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Diagnostics.TraceLogRetentionOption SingleFileUnboundedSize = 2 : Public, Static, Literal, HasDefault
    System.Diagnostics.TraceLogRetentionOption SingleFileBoundedSize = 4 : Public, Static, Literal, HasDefault
    System.Diagnostics.TraceLogRetentionOption UnlimitedSequentialFiles = 0 : Public, Static, Literal, HasDefault
    System.Diagnostics.TraceLogRetentionOption LimitedSequentialFiles = 3 : Public, Static, Literal, HasDefault
    System.Diagnostics.TraceLogRetentionOption LimitedCircularFiles = 1 : Public, Static, Literal, HasDefault
Class System.Diagnostics.UnescapedXmlDiagnosticData: AutoLayout, AnsiClass, Class, Public, HasSecurity, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String UnescapedXml 'get set' : 
  Methods:
    get_UnescapedXml(): PrivateScope, Public, HideBySig, SpecialName
    set_UnescapedXml(String): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class System.Diagnostics.PerformanceData.CounterData: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  Properties:
    Int64 Value 'get set' : 
    Int64 RawValue 'get set' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Int64): PrivateScope, Public, HideBySig, SpecialName
    Increment(): PrivateScope, Public, HideBySig
    Decrement(): PrivateScope, Public, HideBySig
    IncrementBy(Int64): PrivateScope, Public, HideBySig
    get_RawValue(): PrivateScope, Public, HideBySig, SpecialName
    set_RawValue(Int64): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Properties:
    System.Diagnostics.PerformanceData.CounterData Item [Int32] 'get ' : 
    System.Diagnostics.PerformanceData.CounterData Item [System.String] 'get ' : 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Item(String): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.PerformanceData.CounterSet: AutoLayout, AnsiClass, Class, Public, HasSecurity, BeforeFieldInit
    Void .ctor(System.Guid, System.Guid, System.Diagnostics.PerformanceData.CounterSetInstanceType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
  Interfaces:
    System.IDisposable
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddCounter(Int32, CounterType): PrivateScope, Public, HideBySig
    AddCounter(Int32, CounterType, String): PrivateScope, Public, HideBySig
    CreateCounterSetInstance(String): PrivateScope, Public, HideBySig, HasSecurity
Class System.Diagnostics.PerformanceData.CounterSetInstance: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Properties:
    System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet Counters 'get ' : 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Counters(): PrivateScope, Public, HideBySig, SpecialName
Struct System.Diagnostics.PerformanceData.CounterSetInstanceType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Diagnostics.PerformanceData.CounterSetInstanceType Single = 0 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterSetInstanceType Multiple = 2 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterSetInstanceType GlobalAggregate = 4 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterSetInstanceType GlobalAggregateWithHistory = 11 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterSetInstanceType MultipleAggregate = 6 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterSetInstanceType InstanceAggregate = 22 : Public, Static, Literal, HasDefault
Struct System.Diagnostics.PerformanceData.CounterType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Diagnostics.PerformanceData.CounterType QueueLength = 4523008 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType LargeQueueLength = 4523264 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType QueueLength100Ns = 5571840 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType QueueLengthObjectTime = 6620416 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType RawData32 = 65536 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType RawData64 = 65792 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType RawDataHex32 = 0 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType RawDataHex64 = 256 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType RateOfCountPerSecond32 = 272696320 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType RateOfCountPerSecond64 = 272696576 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType RawFraction32 = 537003008 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType RawFraction64 = 537003264 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType RawBase32 = 1073939459 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType RawBase64 = 1073939712 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType SampleFraction = 549585920 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType SampleCounter = 4260864 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType SampleBase = 1073939457 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType AverageTimer32 = 805438464 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType AverageBase = 1073939458 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType AverageCount64 = 1073874176 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType PercentageActive = 541132032 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType PercentageNotActive = 557909248 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType PercentageActive100Ns = 542180608 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType PercentageNotActive100Ns = 558957824 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType ElapsedTime = 807666944 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType MultiTimerPercentageActive = 574686464 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType MultiTimerPercentageNotActive = 591463680 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType MultiTimerPercentageActive100Ns = 575735040 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType MultiTimerPercentageNotActive100Ns = 592512256 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType MultiTimerBase = 1107494144 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType Delta32 = 4195328 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType Delta64 = 4195584 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType ObjectSpecificTimer = 543229184 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType PrecisionSystemTimer = 541525248 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType PrecisionTimer100Ns = 542573824 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType PrecisionObjectSpecificTimer = 543622400 : Public, Static, Literal, HasDefault
Class System.Collections.Generic.HashSet`1[T]: AutoLayout, AnsiClass, Class, Public, Serializable, HasSecurity, BeforeFieldInit
  Type parameter: T
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEqualityComparer`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[T], System.Collections.Generic.IEqualityComparer`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Runtime.Serialization.ISerializable
    System.Runtime.Serialization.IDeserializationCallback
    System.Collections.Generic.ISet`1[T]
    System.Collections.Generic.ICollection`1[T]
    System.Collections.Generic.IEnumerable`1[T]
    System.Collections.IEnumerable
  Properties:
    Int32 Count 'get ' : 
    System.Collections.Generic.IEqualityComparer`1[T] Comparer 'get ' : 
  Methods:
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Contains(T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(T[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Remove(T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEnumerator(): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    OnDeserialization(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Add(T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    UnionWith(IEnumerable`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IntersectWith(IEnumerable`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ExceptWith(IEnumerable`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SymmetricExceptWith(IEnumerable`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsSubsetOf(IEnumerable`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsProperSubsetOf(IEnumerable`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsSupersetOf(IEnumerable`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsProperSupersetOf(IEnumerable`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Overlaps(IEnumerable`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetEquals(IEnumerable`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(T[]): PrivateScope, Public, HideBySig
    CopyTo(T[], Int32, Int32): PrivateScope, Public, HideBySig
    RemoveWhere(Predicate`1): PrivateScope, Public, HideBySig
    get_Comparer(): PrivateScope, Public, HideBySig, SpecialName
    TrimExcess(): PrivateScope, Public, HideBySig
    CreateSetComparer(): PrivateScope, Public, Static, HideBySig
Struct System.Collections.Generic.HashSet`1+Enumerator[T]: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, Serializable, HasSecurity, BeforeFieldInit
  Type parameter: T
  :System.ValueType
  Interfaces:
    System.Collections.Generic.IEnumerator`1[T]
    System.IDisposable
    System.Collections.IEnumerator
  Properties:
    T Current  'get ' : 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Current(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Struct System.IO.HandleInheritability: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.IO.HandleInheritability None = 0 : Public, Static, Literal, HasDefault
    System.IO.HandleInheritability Inheritable = 1 : Public, Static, Literal, HasDefault
Struct System.IO.Pipes.PipeDirection: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.IO.Pipes.PipeDirection In = 1 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeDirection Out = 2 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeDirection InOut = 3 : Public, Static, Literal, HasDefault
Struct System.IO.Pipes.PipeTransmissionMode: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.IO.Pipes.PipeTransmissionMode Byte = 0 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeTransmissionMode Message = 1 : Public, Static, Literal, HasDefault
Struct System.IO.Pipes.PipeOptions: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.IO.Pipes.PipeOptions None = 0 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeOptions WriteThrough = -2147483648 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeOptions Asynchronous = 1073741824 : Public, Static, Literal, HasDefault
Class System.IO.Pipes.PipeStream: AutoLayout, AnsiClass, Class, Public, Abstract, HasSecurity
  :System.IO.Stream
  Properties:
    Boolean IsConnected 'get set' : 
    Boolean IsAsync 'get ' : 
    Boolean IsMessageComplete 'get ' : 
    System.IO.Pipes.PipeTransmissionMode TransmissionMode 'get ' : 
    Int32 InBufferSize 'get ' : 
    Int32 OutBufferSize 'get ' : 
    System.IO.Pipes.PipeTransmissionMode ReadMode 'get set' : 
    Microsoft.Win32.SafeHandles.SafePipeHandle SafePipeHandle 'get ' : 
    Boolean CanRead 'get ' : 
    Boolean CanWrite 'get ' : 
    Boolean CanSeek 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    Read(Byte[](In, Out), Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    BeginRead(Byte[], Int32, Int32, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    EndRead(IAsyncResult): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    EndWrite(IAsyncResult): PrivateScope, Public, Virtual, HideBySig
    ReadByte(): PrivateScope, Public, Virtual, HideBySig
    WriteByte(Byte): PrivateScope, Public, Virtual, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig
    WaitForPipeDrain(): PrivateScope, Public, HideBySig
    get_IsConnected(): PrivateScope, Public, HideBySig, SpecialName
    get_IsAsync(): PrivateScope, Public, HideBySig, SpecialName
    get_IsMessageComplete(): PrivateScope, Public, HideBySig, SpecialName
    get_TransmissionMode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_InBufferSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_OutBufferSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ReadMode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ReadMode(PipeTransmissionMode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetAccessControl(): PrivateScope, Public, HideBySig
    SetAccessControl(PipeSecurity): PrivateScope, Public, HideBySig
    get_SafePipeHandle(): PrivateScope, Public, HideBySig, SpecialName
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
Class System.IO.Pipes.AnonymousPipeServerStream: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.IO.Pipes.PipeStream
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.IO.Pipes.PipeDirection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.IO.Pipes.PipeDirection, System.IO.HandleInheritability): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.IO.Pipes.PipeDirection, System.IO.HandleInheritability, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.IO.Pipes.PipeDirection, System.IO.HandleInheritability, Int32, System.IO.Pipes.PipeSecurity): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.IO.Pipes.PipeDirection, Microsoft.Win32.SafeHandles.SafePipeHandle, Microsoft.Win32.SafeHandles.SafePipeHandle): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
  Properties:
    Microsoft.Win32.SafeHandles.SafePipeHandle ClientSafePipeHandle 'get ' : 
    System.IO.Pipes.PipeTransmissionMode TransmissionMode 'get ' : 
    System.IO.Pipes.PipeTransmissionMode ReadMode 'set' : 
  Methods:
    GetClientHandleAsString(): PrivateScope, Public, HideBySig
    get_ClientSafePipeHandle(): PrivateScope, Public, HideBySig, SpecialName
    DisposeLocalCopyOfClientHandle(): PrivateScope, Public, HideBySig
    get_TransmissionMode(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_ReadMode(PipeTransmissionMode): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class System.IO.Pipes.AnonymousPipeClientStream: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.IO.Pipes.PipeStream
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.IO.Pipes.PipeDirection, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.IO.Pipes.PipeDirection, Microsoft.Win32.SafeHandles.SafePipeHandle): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
  Properties:
    System.IO.Pipes.PipeTransmissionMode TransmissionMode 'get ' : 
    System.IO.Pipes.PipeTransmissionMode ReadMode 'set' : 
  Methods:
    get_TransmissionMode(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_ReadMode(PipeTransmissionMode): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class System.IO.Pipes.PipeStreamImpersonationWorker: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.IO.Pipes.NamedPipeServerStream: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity
  :System.IO.Pipes.PipeStream
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.String, System.IO.Pipes.PipeDirection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.String, System.IO.Pipes.PipeDirection, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.String, System.IO.Pipes.PipeDirection, Int32, System.IO.Pipes.PipeTransmissionMode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.String, System.IO.Pipes.PipeDirection, Int32, System.IO.Pipes.PipeTransmissionMode, System.IO.Pipes.PipeOptions): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.String, System.IO.Pipes.PipeDirection, Int32, System.IO.Pipes.PipeTransmissionMode, System.IO.Pipes.PipeOptions, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.String, System.IO.Pipes.PipeDirection, Int32, System.IO.Pipes.PipeTransmissionMode, System.IO.Pipes.PipeOptions, Int32, Int32, System.IO.Pipes.PipeSecurity): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.String, System.IO.Pipes.PipeDirection, Int32, System.IO.Pipes.PipeTransmissionMode, System.IO.Pipes.PipeOptions, Int32, Int32, System.IO.Pipes.PipeSecurity, System.IO.HandleInheritability): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.String, System.IO.Pipes.PipeDirection, Int32, System.IO.Pipes.PipeTransmissionMode, System.IO.Pipes.PipeOptions, Int32, Int32, System.IO.Pipes.PipeSecurity, System.IO.HandleInheritability, System.IO.Pipes.PipeAccessRights): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.IO.Pipes.PipeDirection, Boolean, Boolean, Microsoft.Win32.SafeHandles.SafePipeHandle): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
  Fields:
    Int32 MaxAllowedServerInstances = -1 : Public, Static, Literal, HasDefault
  Methods:
    WaitForConnection(): PrivateScope, Public, HideBySig
    BeginWaitForConnection(AsyncCallback, Object): PrivateScope, Public, HideBySig, HasSecurity
    EndWaitForConnection(IAsyncResult): PrivateScope, Public, HideBySig
    Disconnect(): PrivateScope, Public, HideBySig
    RunAsClient(PipeStreamImpersonationWorker): PrivateScope, Public, HideBySig, HasSecurity
    GetImpersonationUserName(): PrivateScope, Public, HideBySig, HasSecurity
Class System.IO.Pipes.NamedPipeClientStream: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.IO.Pipes.PipeStream
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.String, System.String, System.IO.Pipes.PipeDirection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.String, System.String, System.IO.Pipes.PipeDirection, System.IO.Pipes.PipeOptions): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.String, System.String, System.IO.Pipes.PipeDirection, System.IO.Pipes.PipeOptions, System.Security.Principal.TokenImpersonationLevel): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.String, System.String, System.IO.Pipes.PipeDirection, System.IO.Pipes.PipeOptions, System.Security.Principal.TokenImpersonationLevel, System.IO.HandleInheritability): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.String, System.String, System.IO.Pipes.PipeAccessRights, System.IO.Pipes.PipeOptions, System.Security.Principal.TokenImpersonationLevel, System.IO.HandleInheritability): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.IO.Pipes.PipeDirection, Boolean, Boolean, Microsoft.Win32.SafeHandles.SafePipeHandle): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
  Properties:
    Int32 NumberOfServerInstances 'get ' : 
  Methods:
    Connect(): PrivateScope, Public, HideBySig
    Connect(Int32): PrivateScope, Public, HideBySig
    get_NumberOfServerInstances(): PrivateScope, Public, HideBySig, SpecialName
Struct System.IO.Pipes.PipeAccessRights: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.IO.Pipes.PipeAccessRights ReadData = 1 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeAccessRights WriteData = 2 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeAccessRights ReadAttributes = 128 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeAccessRights WriteAttributes = 256 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeAccessRights ReadExtendedAttributes = 8 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeAccessRights WriteExtendedAttributes = 16 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeAccessRights CreateNewInstance = 4 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeAccessRights Delete = 65536 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeAccessRights ReadPermissions = 131072 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeAccessRights ChangePermissions = 262144 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeAccessRights TakeOwnership = 524288 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeAccessRights Synchronize = 1048576 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeAccessRights FullControl = 2032031 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeAccessRights Read = 131209 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeAccessRights Write = 274 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeAccessRights ReadWrite = 131483 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeAccessRights AccessSystemSecurity = 16777216 : Public, Static, Literal, HasDefault
Class System.IO.Pipes.PipeAccessRule: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Security.AccessControl.AccessRule
    Void .ctor(System.String, System.IO.Pipes.PipeAccessRights, System.Security.AccessControl.AccessControlType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Principal.IdentityReference, System.IO.Pipes.PipeAccessRights, System.Security.AccessControl.AccessControlType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.IO.Pipes.PipeAccessRights PipeAccessRights 'get ' : 
  Methods:
    get_PipeAccessRights(): PrivateScope, Public, HideBySig, SpecialName
Class System.IO.Pipes.PipeAuditRule: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Security.AccessControl.AuditRule
    Void .ctor(System.Security.Principal.IdentityReference, System.IO.Pipes.PipeAccessRights, System.Security.AccessControl.AuditFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.IO.Pipes.PipeAccessRights, System.Security.AccessControl.AuditFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.IO.Pipes.PipeAccessRights PipeAccessRights 'get ' : 
  Methods:
    get_PipeAccessRights(): PrivateScope, Public, HideBySig, SpecialName
Class System.IO.Pipes.PipeSecurity: AutoLayout, AnsiClass, Class, Public, HasSecurity, BeforeFieldInit
  :System.Security.AccessControl.NativeObjectSecurity
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type AccessRightType 'get ' : 
    System.Type AccessRuleType 'get ' : 
    System.Type AuditRuleType 'get ' : 
  Methods:
    AddAccessRule(PipeAccessRule): PrivateScope, Public, HideBySig
    SetAccessRule(PipeAccessRule): PrivateScope, Public, HideBySig
    ResetAccessRule(PipeAccessRule): PrivateScope, Public, HideBySig
    RemoveAccessRule(PipeAccessRule): PrivateScope, Public, HideBySig
    RemoveAccessRuleSpecific(PipeAccessRule): PrivateScope, Public, HideBySig
    AddAuditRule(PipeAuditRule): PrivateScope, Public, HideBySig
    SetAuditRule(PipeAuditRule): PrivateScope, Public, HideBySig
    RemoveAuditRule(PipeAuditRule): PrivateScope, Public, HideBySig
    RemoveAuditRuleAll(PipeAuditRule): PrivateScope, Public, HideBySig
    RemoveAuditRuleSpecific(PipeAuditRule): PrivateScope, Public, HideBySig
    AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType): PrivateScope, Public, Virtual, HideBySig
    AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags): PrivateScope, Public, Final, Virtual, HideBySig
    get_AccessRightType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_AccessRuleType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_AuditRuleType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Struct System.Threading.LockRecursionPolicy: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Threading.LockRecursionPolicy NoRecursion = 0 : Public, Static, Literal, HasDefault
    System.Threading.LockRecursionPolicy SupportsRecursion = 1 : Public, Static, Literal, HasDefault
Class System.Threading.ReaderWriterLockSlim: AutoLayout, AnsiClass, Class, Public, HasSecurity, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Threading.LockRecursionPolicy): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Boolean IsReadLockHeld 'get ' : 
    Boolean IsUpgradeableReadLockHeld 'get ' : 
    Boolean IsWriteLockHeld 'get ' : 
    System.Threading.LockRecursionPolicy RecursionPolicy 'get ' : 
    Int32 CurrentReadCount 'get ' : 
    Int32 RecursiveReadCount 'get ' : 
    Int32 RecursiveUpgradeCount 'get ' : 
    Int32 RecursiveWriteCount 'get ' : 
    Int32 WaitingReadCount 'get ' : 
    Int32 WaitingUpgradeCount 'get ' : 
    Int32 WaitingWriteCount 'get ' : 
  Methods:
    EnterReadLock(): PrivateScope, Public, HideBySig
    TryEnterReadLock(TimeSpan): PrivateScope, Public, HideBySig
    TryEnterReadLock(Int32): PrivateScope, Public, HideBySig
    EnterWriteLock(): PrivateScope, Public, HideBySig
    TryEnterWriteLock(TimeSpan): PrivateScope, Public, HideBySig
    TryEnterWriteLock(Int32): PrivateScope, Public, HideBySig
    EnterUpgradeableReadLock(): PrivateScope, Public, HideBySig
    TryEnterUpgradeableReadLock(TimeSpan): PrivateScope, Public, HideBySig
    TryEnterUpgradeableReadLock(Int32): PrivateScope, Public, HideBySig
    ExitReadLock(): PrivateScope, Public, HideBySig
    ExitWriteLock(): PrivateScope, Public, HideBySig
    ExitUpgradeableReadLock(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_IsReadLockHeld(): PrivateScope, Public, HideBySig, SpecialName
    get_IsUpgradeableReadLockHeld(): PrivateScope, Public, HideBySig, SpecialName
    get_IsWriteLockHeld(): PrivateScope, Public, HideBySig, SpecialName
    get_RecursionPolicy(): PrivateScope, Public, HideBySig, SpecialName
    get_CurrentReadCount(): PrivateScope, Public, HideBySig, SpecialName
    get_RecursiveReadCount(): PrivateScope, Public, HideBySig, SpecialName
    get_RecursiveUpgradeCount(): PrivateScope, Public, HideBySig, SpecialName
    get_RecursiveWriteCount(): PrivateScope, Public, HideBySig, SpecialName
    get_WaitingReadCount(): PrivateScope, Public, HideBySig, SpecialName
    get_WaitingUpgradeCount(): PrivateScope, Public, HideBySig, SpecialName
    get_WaitingWriteCount(): PrivateScope, Public, HideBySig, SpecialName
Class System.Threading.Tasks.TaskExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Unwrap(Task`1): PrivateScope, Public, Static, HideBySig
    Unwrap(Task`1): PrivateScope, Public, Static, HideBySig
Class Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
Class Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Runtime.InteropServices.SafeBuffer
Struct System.IO.MemoryMappedFiles.MemoryMappedFileAccess: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.IO.MemoryMappedFiles.MemoryMappedFileAccess ReadWrite = 0 : Public, Static, Literal, HasDefault
    System.IO.MemoryMappedFiles.MemoryMappedFileAccess Read = 1 : Public, Static, Literal, HasDefault
    System.IO.MemoryMappedFiles.MemoryMappedFileAccess Write = 2 : Public, Static, Literal, HasDefault
    System.IO.MemoryMappedFiles.MemoryMappedFileAccess CopyOnWrite = 3 : Public, Static, Literal, HasDefault
    System.IO.MemoryMappedFiles.MemoryMappedFileAccess ReadExecute = 4 : Public, Static, Literal, HasDefault
    System.IO.MemoryMappedFiles.MemoryMappedFileAccess ReadWriteExecute = 5 : Public, Static, Literal, HasDefault
Struct System.IO.MemoryMappedFiles.MemoryMappedFileOptions: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.IO.MemoryMappedFiles.MemoryMappedFileOptions None = 0 : Public, Static, Literal, HasDefault
    System.IO.MemoryMappedFiles.MemoryMappedFileOptions DelayAllocatePages = 67108864 : Public, Static, Literal, HasDefault
Class System.IO.MemoryMappedFiles.MemoryMappedFile: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Properties:
    Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle SafeMemoryMappedFileHandle 'get ' : 
  Methods:
    OpenExisting(String): PrivateScope, Public, Static, HideBySig
    OpenExisting(String, MemoryMappedFileRights): PrivateScope, Public, Static, HideBySig
    OpenExisting(String, MemoryMappedFileRights, HandleInheritability): PrivateScope, Public, Static, HideBySig, HasSecurity
    CreateFromFile(String): PrivateScope, Public, Static, HideBySig
    CreateFromFile(String, FileMode): PrivateScope, Public, Static, HideBySig
    CreateFromFile(String, FileMode, String): PrivateScope, Public, Static, HideBySig
    CreateFromFile(String, FileMode, String, Int64): PrivateScope, Public, Static, HideBySig
    CreateFromFile(String, FileMode, String, Int64, MemoryMappedFileAccess): PrivateScope, Public, Static, HideBySig, HasSecurity
    CreateFromFile(FileStream, String, Int64, MemoryMappedFileAccess, MemoryMappedFileSecurity, HandleInheritability, Boolean): PrivateScope, Public, Static, HideBySig, HasSecurity
    CreateNew(String, Int64): PrivateScope, Public, Static, HideBySig
    CreateNew(String, Int64, MemoryMappedFileAccess): PrivateScope, Public, Static, HideBySig
    CreateNew(String, Int64, MemoryMappedFileAccess, MemoryMappedFileOptions, MemoryMappedFileSecurity, HandleInheritability): PrivateScope, Public, Static, HideBySig, HasSecurity
    CreateOrOpen(String, Int64): PrivateScope, Public, Static, HideBySig
    CreateOrOpen(String, Int64, MemoryMappedFileAccess): PrivateScope, Public, Static, HideBySig
    CreateOrOpen(String, Int64, MemoryMappedFileAccess, MemoryMappedFileOptions, MemoryMappedFileSecurity, HandleInheritability): PrivateScope, Public, Static, HideBySig, HasSecurity
    CreateViewStream(): PrivateScope, Public, HideBySig
    CreateViewStream(Int64, Int64): PrivateScope, Public, HideBySig
    CreateViewStream(Int64, Int64, MemoryMappedFileAccess): PrivateScope, Public, HideBySig, HasSecurity
    CreateViewAccessor(): PrivateScope, Public, HideBySig
    CreateViewAccessor(Int64, Int64): PrivateScope, Public, HideBySig
    CreateViewAccessor(Int64, Int64, MemoryMappedFileAccess): PrivateScope, Public, HideBySig, HasSecurity
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_SafeMemoryMappedFileHandle(): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
    GetAccessControl(): PrivateScope, Public, HideBySig
    SetAccessControl(MemoryMappedFileSecurity): PrivateScope, Public, HideBySig
Class System.IO.MemoryMappedFiles.MemoryMappedViewAccessor: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.IO.UnmanagedMemoryAccessor
  Properties:
    Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle SafeMemoryMappedViewHandle 'get ' : 
  Methods:
    get_SafeMemoryMappedViewHandle(): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
    Flush(): PrivateScope, Public, HideBySig
Class System.IO.MemoryMappedFiles.MemoryMappedViewStream: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.IO.UnmanagedMemoryStream
  Properties:
    Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle SafeMemoryMappedViewHandle 'get ' : 
  Methods:
    get_SafeMemoryMappedViewHandle(): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig
Struct System.IO.MemoryMappedFiles.MemoryMappedFileRights: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.IO.MemoryMappedFiles.MemoryMappedFileRights CopyOnWrite = 1 : Public, Static, Literal, HasDefault
    System.IO.MemoryMappedFiles.MemoryMappedFileRights Write = 2 : Public, Static, Literal, HasDefault
    System.IO.MemoryMappedFiles.MemoryMappedFileRights Read = 4 : Public, Static, Literal, HasDefault
    System.IO.MemoryMappedFiles.MemoryMappedFileRights Execute = 8 : Public, Static, Literal, HasDefault
    System.IO.MemoryMappedFiles.MemoryMappedFileRights Delete = 65536 : Public, Static, Literal, HasDefault
    System.IO.MemoryMappedFiles.MemoryMappedFileRights ReadPermissions = 131072 : Public, Static, Literal, HasDefault
    System.IO.MemoryMappedFiles.MemoryMappedFileRights ChangePermissions = 262144 : Public, Static, Literal, HasDefault
    System.IO.MemoryMappedFiles.MemoryMappedFileRights TakeOwnership = 524288 : Public, Static, Literal, HasDefault
    System.IO.MemoryMappedFiles.MemoryMappedFileRights ReadWrite = 6 : Public, Static, Literal, HasDefault
    System.IO.MemoryMappedFiles.MemoryMappedFileRights ReadExecute = 12 : Public, Static, Literal, HasDefault
    System.IO.MemoryMappedFiles.MemoryMappedFileRights ReadWriteExecute = 14 : Public, Static, Literal, HasDefault
    System.IO.MemoryMappedFiles.MemoryMappedFileRights FullControl = 983055 : Public, Static, Literal, HasDefault
    System.IO.MemoryMappedFiles.MemoryMappedFileRights AccessSystemSecurity = 16777216 : Public, Static, Literal, HasDefault
Class System.IO.MemoryMappedFiles.MemoryMappedFileSecurity: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Security.AccessControl.ObjectSecurity`1[System.IO.MemoryMappedFiles.MemoryMappedFileRights]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Linq.OrderedParallelQuery`1[TSource]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TSource
  :System.Linq.ParallelQuery`1[TSource]
  Methods:
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig
Class System.Runtime.InteropServices.ComAwareEventInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Reflection.EventInfo
    Void .ctor(System.Type, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Reflection.EventAttributes Attributes 'get ' : 
    System.Type DeclaringType 'get ' : 
    System.String Name 'get ' : 
    System.Type ReflectedType 'get ' : 
  Methods:
    AddEventHandler(Object, Delegate): PrivateScope, Public, Virtual, HideBySig
    RemoveEventHandler(Object, Delegate): PrivateScope, Public, Virtual, HideBySig
    get_Attributes(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetAddMethod(Boolean): PrivateScope, Public, Virtual, HideBySig
    GetRaiseMethod(Boolean): PrivateScope, Public, Virtual, HideBySig
    GetRemoveMethod(Boolean): PrivateScope, Public, Virtual, HideBySig
    get_DeclaringType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetCustomAttributes(Type, Boolean): PrivateScope, Public, Virtual, HideBySig
    GetCustomAttributes(Boolean): PrivateScope, Public, Virtual, HideBySig
    IsDefined(Type, Boolean): PrivateScope, Public, Virtual, HideBySig
    get_Name(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ReflectedType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
