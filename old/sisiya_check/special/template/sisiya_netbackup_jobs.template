### service id
serviceid=$serviceid_netbackup_jobs  
if test -z "$serviceid" ; then
	echo "$0 : serviceid_netbackup_jobs is not defined! Exiting..."
	exit 1
fi
##########################################################################
### default values
bpdbjobs_prog=/usr/openv/netbackup/bin/admincmd/bpdbjobs
### end of the default values
##########################################################################

### If there is a module conf file then override these default values
if test -f $module_conf_file ; then
	. $module_conf_file
fi

if test ! -x $bpdbjobs_prog ; then
	statusid=$status_error
	message_str="ERROR: bpdbjobs program [$bpdbjobs_prog] does not exist or is not executable!"
	exit 0
fi

str=`$bpdbjobs_prog -summary -all_columns`
queued_jobs=`echo $str 		| awk -F, '{print $2}'	| awk -F= '{print $2}'`
requeued_jobs=`echo $str 	| awk -F, '{print $3}'	| awk -F= '{print $2}'`
active_jobs=`echo $str 		| awk -F, '{print $4}'	| awk -F= '{print $2}'`
ok_jobs=`echo $str 		| awk -F, '{print $5}'	| awk -F= '{print $2}'`
partially_ok_jobs=`echo $str 	| awk -F, '{print $6}'	| awk -F= '{print $2}'`
failed_jobs=`echo $str 		| awk -F, '{print $7}'	| awk -F= '{print $2}'`
incomplete_jobs=`echo $str 	| awk -F, '{print $8}'	| awk -F= '{print $2}'`
suspended_jobs=`echo $str 	| awk -F, '{print $9}'	| awk -F= '{print $2}'`
total_jobs=`echo $str 		| awk -F, '{print $10}'	| awk -F= '{print $2}'`

info_str="(total=${total_jobs} failed=${failed_jobs} suspended=${suspended_jobs} incomplete=${incomplete_jobs} successful=${ok_jobs} partially successful=${partially_ok_jobs} active=${active_jobs} requeued=${requeued_jobs} queued=${queued_jobs})"
statusid=$status_ok
message_str="OK: No failed jobs. $info_str"

if test $incomplete_jobs -gt 0 ;then
	statusid=$status_warning
	warning_str="WARNING: $incomplete_jobs backup jobs"
	if test $incomplete_jobs -eq 1 ; then
		warning_str="$warning_str is incomplete!" 
	else
		warning_str="$warning_str are incomplete!" 
	fi
	message_str="$warning_str $info_str"
fi
if test $failed_jobs -gt 0 ; then
	if test $statusid -eq $status_warning ; then	
		message_str="ERROR: $failed_jobs backup jobs had failed! $warning_str $info_str" 
	else
		message_str="ERROR: $failed_jobs backup jobs had failed! $info_str" 
	fi
	statusid=$status_error
fi
