### service id
serviceid=$serviceid_progs_count  
if test -z "$serviceid" ; then
	echo "$0 : serviceid_progs_count is not defined! Exiting..."
	exit 1
fi
##########################################################################
### default values
### there are no default values for this check
#number_of_progs=2
#prog_name[0]="httpd"
#prog_warning_number[0]=70
#prog_error_number[0]=90
#prog_name[1]="mysqld"
#prog_warning_number[1]=40
#prog_error_number[1]=45
### end of the default values
##########################################################################

### If there is no module conf file then exit with warning.
if test ! -f $module_conf_file ; then
	statusid=$status_warning
	message_str="Configuration file $module_conf_file does not exist!"
	exit 0
fi
. $module_conf_file

tmp_error_file=`maketemp /tmp/tmp_${script_name}_error.XXXXXX`
tmp_warning_file=`maketemp /tmp/tmp_${script_name}_ok.XXXXXX`
tmp_ok_file=`maketemp /tmp/tmp_${script_name}_ok.XXXXXX`

declare -i i=0
while test $i -lt $number_of_progs
do
        prog=${prog_name[${i}]}
        error_number=${prog_error_number[${i}]}
        warning_number=${prog_warning_number[${i}]}
	n=`ps -ef|grep $prog | grep -v grep |wc -l`

	if test ${n} -ge $error_number ;then
		#echo "ERROR: The number of $prog processes exceeded the error number $n >= $error_number!" >> $tmp_error_file 
		echo "${prog}\($n >= ${error_number}\)" >> $tmp_error_file 
	elif test  ${n} -ge $warning_number ; then  
		#echo "WARNING: The number of $prog processes exceeded the warning number $n >= $warning_number!" >> $tmp_warning_file
		echo "${prog}\($n >= ${warning_number}\)" >> $tmp_warning_file
	else
		#echo "OK: The number of currently running $prog processes is $n." >> $tmp_ok_file
		echo "${prog}\(${n}\)" >> $tmp_ok_file
	fi
	i=i+1
done

statusid=$status_ok
message_str=""
if test -s $tmp_error_file ; then
	statusid=$status_error
	message_str="ERROR: "`cat $tmp_error_file | tr "\n" " "`"!"
fi
if test -s $tmp_warning_file ; then
	if test $statusid -lt $status_warning ; then
		statusid=$status_warning
	fi
	message_str="$message_str WARNING: `cat $tmp_warning_file | tr "\n" " "`""!"
fi
if test -s $tmp_ok_file ; then
	message_str="$message_str OK: `cat $tmp_ok_file | tr "\n" " "`""."
fi
for f in $tmp_ok_file $tmp_warning_file $tmp_error_file $tmp_netstat_out
do
	rm -f $f
done
