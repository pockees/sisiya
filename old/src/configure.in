dnl Process this file with autconf to produce a configure script
dnl Created by Erdal Mutlu 30.07.2004
AC_PREREQ(2.53)

dnl ------------------------------------------------
dnl Initialization and Versioning
dnl ------------------------------------------------
AC_INIT(configure.in,0.5.3-1,emutlu@users.sourceforge.net)
AM_INIT_AUTOMAKE(sisiya,0.5.3-1)
AM_CONFIG_HEADER(config.h)

dnl --------------------------------------------------  
dnl Check for programs
dnl --------------------------------------------------  
AC_PROG_AWK
dnl save $CFLAGS since AC_PROG_CC likes to insert "-g -O2"
dnl if $CFLAGS is blank
warn_flags="-Wall"
cflags_save="$CFLAGS"
ldflags_save="$LDFLAGS"
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_LN_S

dnl --------------------------------------------------
dnl Set build flags based on environment
dnl --------------------------------------------------
AC_CANONICAL_HOST

dnl Set some target options

cflags_save="$CFLAGS $warn_flags"
case "${host}" in
	*-*-darwin*)
		CFLAGS="-DDARWIN"
		;;
	*86-*-linux*)
		CFLAGS="-DLINUX -D_GNU_SOURCE" ### -D_GNU_SOURCE is used to get rid of the warning about the getpgid()
		;;
        sparc-sun-solaris*)
                LDFLAGS="-lsocket -lnsl"
                ;;
esac
CFLAGS="$CFLAGS $cflags_save"
LDFLAGS="$LDFLAGS $ldflags_save"

dnl --------------------------------------------------
dnl Check for libraries
dnl --------------------------------------------------

dnl --------------------------------------------------
dnl Check for headers
dnl --------------------------------------------------
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS([sys/stat.h sys/types.h sys/wait.h signal.h stdarg.h varargs.h netdb.h arpa/inet.h errno.h netinet/in.h stdlib.h string.h strings.h sys/socket.h syslog.h unistd.h])

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_PID_T

dnl Checks for library functions.
AC_FUNC_FORK
AC_TYPE_SIGNAL
AC_FUNC_VPRINTF
AC_CHECK_FUNCS([bzero inet_ntoa socket strchr strerror])

dnl ##################################################################################
if test -n "$with_mysql" && test -n "$with_pgsql" ; then
	AC_MSG_ERROR([--with-pgsql and --with-mysql cannot be used together])
fi
 
AC_MSG_CHECKING(for MySQL support)
AC_ARG_WITH(mysql,
[
What DBMS do you want to use : The default is --with-pgsql
  --with-mysql[[=DIR]]      Include MySQL support.  DIR is the MySQL base
                          install directory, default is to search through
                          a number of common places for the MySQL files.],
[
  if test "$withval" != "no"; then
	if test "$withval" = "yes"; then
		if test -f /usr/local/mysql/include/mysql/mysql.h; then
			MYSQL_INCDIR=/usr/local/mysql/include/mysql
			MYSQL_LIBDIR=/usr/local/mysql/lib/mysql
		elif test -f /usr/include/mysql/mysql.h; then
			MYSQL_INCDIR=/usr/include/mysql
			MYSQL_LIBDIR=/usr/lib/mysql
		elif test -f /usr/include/mysql.h; then
			MYSQL_INCDIR=/usr/include
			MYSQL_LIBDIR=/usr/lib
		elif test -f /usr/local/include/mysql/mysql.h; then
			MYSQL_INCDIR=/usr/local/include/mysql
			MYSQL_LIBDIR=/usr/local/lib/mysql
		elif test -f /usr/local/include/mysql.h; then
			MYSQL_INCDIR=/usr/local/include
			MYSQL_LIBDIR=/usr/local/lib
		else
	    		AC_MSG_RESULT(no)
    			AC_MSG_ERROR(Invalid MySQL directory - unable to find mysql.h)
		fi
   	else
		if test -f $withval/include/mysql/mysql.h; then
   			MYSQL_INCDIR=$withval/include/mysql
   			MYSQL_LIBDIR=$withval/lib/mysql
		elif test -f $withval/include/mysql.h; then
   			MYSQL_INCDIR=$withval/include
   			MYSQL_LIBDIR=$withval/lib
		else
    		AC_MSG_RESULT(no)
    		AC_MSG_ERROR(Invalid MySQL directory - unable to find mysql.h under $withval)
		fi
   	fi
	MYSQL_INCLUDE=-I$MYSQL_INCDIR
	MYSQL_LFLAGS="-L$MYSQL_LIBDIR -lmysqlclient"

	AC_DEFINE([HAVE_MYSQL],[], [Define if you are building for MYSQL])
	AC_MSG_RESULT(yes)
	have_db=yes
	dnl MySQL requires -lm sometime
	AC_CHECK_FUNC(floor, , AC_CHECK_LIB(m, floor, MYSQL_LFLAGS="$MYSQL_LFLAGS -lm"))
	dnl MySQL 3.23 requires -lz sometime
	AC_CHECK_FUNC(compress, , AC_CHECK_LIB(z, compress, MYSQL_LFLAGS="$MYSQL_LFLAGS -lz"))
  else
  	AC_MSG_RESULT(no)
  fi
],[
  AC_MSG_RESULT(no)
])
AC_SUBST(MYSQL_LFLAGS)
AC_SUBST(MYSQL_INCLUDE)

if test "$have_db" != "yes" && test -z "$with_pgsql" ; then
	### default is --with-pgsql
	with_pgsql="yes"
fi

if test "$have_db" != "yes" ; then
AC_MSG_CHECKING(for PostgreSQL support)
AC_ARG_WITH(pgsql,
[  --with-pgsql[[=DIR]]   Include PostgreSQL support.  DIR is the PostgreSQL
                          base install directory, defaults are system directories.],
[
  if test "$withval" != "no"; then
	if test "$have_db" = "yes"; then
        	AC_MSG_RESULT(error)
        	AC_MSG_ERROR("You can configure for only one database!");
	fi
	PGSQL_LIBDIR=""
	PGSQL_INCDIR=""
	if test "$withval" = "yes"; then
		if test -f /usr/include/pgsql/libpq-fe.h; then
			PGSQL_INCDIR=/usr/include/pgsql
		elif test -f /usr/include/postgresql/libpq-fe.h; then
			PGSQL_INCDIR=/usr/include/postgresql
		elif test -f /usr/local/pgsql/include/libpq-fe.h; then
			PGSQL_INCDIR=/usr/local/pgsql/include
		fi
		if test -f /usr/lib/libpq.a; then
			PGSQL_LIBDIR=/usr/lib
		elif test -f /usr/local/pgsql/lib/libpq.a ; then 
			PGSQL_LIBDIR=/usr/local/pgsql/lib
		fi
   	else
   		PGSQL_INCDIR=$withval/include
   		test -d $withval/include/pgsql && PGSQL_INCDIR=$withval/include/pgsql
   		PGSQL_LIBDIR=$withval/lib
   		test -d $withval/lib/pgsql && PGSQL_LIBDIR=$withval/lib/pgsql
   	fi

    	dnl AC_DEFINE(HAVE_PGSQL)
    	AC_DEFINE([HAVE_PGSQL], [], [Define if you are building for PostgreSQL])
    	AC_MSG_RESULT(yes)

    	have_db=yes
	PGSQL_LFLAGS="-lpq"
	if test PGSQL_LIBDIR != "" ; then
    		PGSQL_LFLAGS="-L$PGSQL_LIBDIR -lpq"
    		AC_SUBST(PGSQL_LFLAGS)
	fi
	if test PGSQL_INCDIR != "" ; then
    		PGSQL_INCLUDE=-I$PGSQL_INCDIR
	     	AC_SUBST(PGSQL_INCLUDE)
	fi
    	AC_CHECK_FUNC(crypt, , AC_CHECK_LIB(crypt, crypt, LIBS="-lcrypt $LIBS"))
  else
    	PGSQL_LFLAGS=-lpq
    	AC_SUBST(PGSQL_LFLAGS)
    	AC_MSG_RESULT(yes)
  fi
],[
  AC_MSG_RESULT(no)
])

fi

if test "$have_db" != "yes"; then
	echo "***********************************************************"
	echo "configure: No database selected! Use --with-XXX where XXX is your preferred database type."
	echo "Execute ./configure --help for help."
	echo "***********************************************************"
	exit 1
else
	if test -n "$PGSQL_LFLAGS" ; then
  		AM_CONDITIONAL(SISIYAD_WITH_PGSQL,test 1 = 1)
	else
		AM_CONDITIONAL(SISIYAD_WITH_PGSQL,test 1 = 0)
	fi
	if test -n "$MYSQL_LFLAGS" ; then
  		AM_CONDITIONAL(SISIYAD_WITH_MYSQL,test 1 = 1)
	else
		AM_CONDITIONAL(SISIYAD_WITH_MYSQL,test 1 = 0)
	fi
fi
dnl ##################################################################################

dnl ### 
AC_OUTPUT(Makefile)
echo
echo "***********************************************************"
echo "*            Now run make                                 *"
echo "*                                                         *"
echo "*            Thank you for using SisIYA !                 *"
echo "*          <http://sisiya.sourceforge.net>                *"
echo "***********************************************************"
echo
