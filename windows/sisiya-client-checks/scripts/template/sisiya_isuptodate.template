### service id
if (! $serviceids.Item("isuptodate")) {
	Write-Output "Error : isuptodate iserviceid not defined!" | eventlog_error
	exit
}
$serviceid = $serviceids.Item("isuptodate")
############################################################################################################
### the default values
### end of the default values
############################################################################################################
### If there is a module conf file then override these default values
if([System.IO.File]::Exists($module_conf_file) -eq $True) {
#if(test-path $module_conf_file -eq $True) {
	. $module_conf_file
}
###############################################################################################################################################
$updateSession=New-Object -com "Microsoft.Update.Session"
#$searchResult	= $updateSession.CreateupdateSearcher().Search("IsInstalled=0 and Type='Software' and IsAssigned=1 and isHidden=0").Updates
#$searchResult	= $updateSession.CreateupdateSearcher().Search("IsInstalled=0 and Type='Software' and IsAssigned=1 and isHidden=0")
$searchResult	= $updateSession.CreateUpdateSearcher().Search("IsInstalled=0 and Type='Software'")
$updatesCritical	= $searchResult.Updates | where { $_.MsrcSeverity -eq "Critical" }
$updatesImportant	= $searchResult.Updates | where { $_.MsrcSeverity -eq "Important" }
$updatesOther		= $searchResult.Updates | where { $_.MsrcSeverity -eq $null }

#Write Results
Write-Host "total=$($searchResult.updates.count)"
Write-Host "critical=$($updatesCritical.count)"
Write-Host "important=$($updatesImportant.count)"
Write-Host "other=$($updatesOther.count)"
$updates = $searchResult.Updates
if ($updatesCritical.Count -gt 0) {
	$statusid = $statusids.Item("error")
	$message_str = "ERROR: The system is out of date!"
	$message_str = $message_str + "Available updates : critical=" + $updatesCritical.Count + ", important=" + $updatesImportant.Count + ", other=" + $updatesOther.Count
} elseif ($updatesImportant.Count -gt 0) {
	$statusid = $statusids.Item("warning")
	$message_str = "WARNING: The system is out of date!"
	$message_str = $message_str + "Available updates : critical=" + $updatesCritical.Count + ", important=" + $updatesImportant.Count + ", other=" + $updatesOther.Count
} else {
	$statusid = $statusids.Item("ok")
	$message_str = "OK: The system is uptodate."
	if ($updatesOther.Count -gt 0) {
		$message_str = $message_str + "INFO: Available updates : other=" + $updatesOther.Count
	}
}

$updateSystemInfo = New-Object -com "Microsoft.Update.SystemInfo"
if ($updateSystemInfo.RebootRequired -eq $True) {
	if ($statusid -eq $statusids.Item("ok")) {
		$statusid = $statusids.Item("warning")
		$message_str = "WARNING: The system needs restart!"
	}
	else {
		$message_str = $message_str + " WARNING: The system needs restart!"
	}
}
