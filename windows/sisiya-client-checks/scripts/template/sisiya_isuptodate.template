### service id
if (! $serviceids.Item("isuptodate")) {
	Write-Output "Error : isuptodate iserviceid not defined!" | eventlog_error
	exit
}
$serviceid = $serviceids.Item("isuptodate")
############################################################################################################
### the default values
### end of the default values
############################################################################################################
### If there is a module conf file then override these default values
if([System.IO.File]::Exists($module_conf_file) -eq $True) {
#if(test-path $module_conf_file -eq $True) {
	. $module_conf_file
}
###############################################################################################################################################
$updateSession=New-Object -com "Microsoft.Update.Session"
$updates=$updateSession.CreateupdateSearcher().Search("IsInstalled=0 and Type='Software' and IsAssigned=1 and isHidden=0").Updates
if($updates.Count -gt 0) {
	$statusid=$statusids.Item("error")
	$str="are"
	$s="s"
	if($updates.Count -eq 1) {
		$str="is"
		$s=""
	}	
	$message_str="ERROR: There " + $str + " " + $updates.Count + " available high priority update" + $s + "!"
}
else { 
	$statusid=$statusids.Item("ok")
	$message_str="OK: The system is uptodate."
}	

$updateSystemInfo=New-Object -com "Microsoft.Update.SystemInfo"
if($updateSystemInfo.RebootRequired -eq $True) {
	if($statusid -eq $statusids.Item("ok")) {
		$statusid=$statusids.Item("error")
		$message_str="ERROR: The system needs restart!"
	}
	else {
		$message_str=$message_str + " ERROR: The system needs restart!"
	}
}
