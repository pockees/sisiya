############################################################################################################
$service_name = "msexchange_servicehealth"
############################################################################################################
### the default values
### end of the default values
############################################################################################################
### If there is a module conf file then override these default values
if([System.IO.File]::Exists($module_conf_file) -eq $True) {
#if(test-path $module_conf_file -eq $True) {
	. $module_conf_file
}
###############################################################################################################################################
### add MS Exchange snappin
addMSExcangeSupport

$message_str=""
$error_message_str=""
$warning_message_str=""
$ok_message_str=""
$info_message_str=""

### Test-ServiceHealth
$services=Test-ServiceHealth
foreach($s in $services) {
	if($s.RequiredServicesRunning -eq $True) {
		$ok_message_str=$ok_message_str + " OK: All required services (" + $s.ServicesRunning + ") for the " + $s.Role + " are running."
	}
	else {
		$error_message_str=$error_message_str + " ERROR: Not running services for the " + $s.Role + " are : " + $s.ServicesNotRunning + "!"
	}
}
$statusid=$statusids.Item("ok")
if($error_message_str.Length -gt 0) {
	$statusid=$statusids.Item("error")
}
elseif($warning_message_str.Length -gt 0) {
	$statusid=$statusids.Item("warning")
}
$error_message_str=$error_message_str.Trim()
$warning_message_str=$warning_message_str.Trim()
$ok_message_str=$ok_message_str.Trim()
$info_message_str=$info_message_str.Trim()
$message_str=$error_message_str + " " + $warning_message_str + " " + $ok_message_str + " " + $info_message_str
