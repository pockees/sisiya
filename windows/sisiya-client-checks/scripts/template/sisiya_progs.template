############################################################################################################
$service_name = "progs"
############################################################################################################
### the default values
$prog_list = @("System", "svchost")
### end of the default values
############################################################################################################
### If there is a module conf file then override these default values
if([System.IO.File]::Exists($module_conf_file) -eq $True) {
#if(test-path $module_conf_file -eq $True) {
	. $module_conf_file
}
#else {
#	Write-Host $prog_name ": ERROR: This script must have the module configuration file :" $module_conf_file
#	Write-Host "There is no default values for this script. The module_conf_file must contain a list of "
#	Write-Host "programs that must be running all the time."
#	Write-Host 'The list must be of the form: $prog_list=@("prog1","prog2","prog3",...)'
#	exit
#}
###############################################################################################################################################
$message_str = ""
$error_message_str = ""
$ok_message_str = ""
$statusid = $statusids.Item("ok")

$data_str = "<entries>"
### get processes
$processes = Get-Process
foreach ($p in $prog_list) {
	$r = $processes | FindStr $p
	if(! $r) {
		if ($error_message_str.Length -eq 0) {
			$error_message_str = $p 
		} else {
			$error_message_str = $error_message_str + ", " + $p 
		}
	} else {
		if ($ok_message_str.Length -eq 0) {
			$ok_message_str=$p 
		} else {
			$ok_message_str=$ok_message_str + ", " + $p 
		}
	}
	#$data_str += '<entry name="' + $progs[$i]{'description'}.'" type="boolean">'.$flag.'</entry>'
}
$data_str += "</entries>"

if ($error_message_str.Length -gt 0) {
	$statusid = $statusids.Item("error")
	$error_message_str = "ERROR: "+ $error_message_str + "!"
}
if ($ok_message_str.Length -gt 0) {
	$ok_message_str = "OK: "+$ok_message_str + "."
}
$message_str = $error_message_str + " " + $ok_message_str
$message_str = $message_str.Trim()
